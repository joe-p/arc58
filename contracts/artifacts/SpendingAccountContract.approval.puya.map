{
  "version": 3,
  "sources": [
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/spending_account.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;AA4DG;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAvBD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArCF;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAqCE;;;AAAA;;;;AAjBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBF;;;AAoBE;;;AAAA;;;;AANC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAdH;;;AAAA;AAAA;;;AAAA;AAcG;;;AAAA;;;;;;;AARY;;AAJyB;AAAA;AAAA;AAAA;AAImB;;AAAA;AAAhD;AAAP;AAIW;;AAPyB;AAAA;AAAA;AAAA;AAOmB;;AAAA;AAAhD;AAAP;AAIF;;;AAZsC;AAcpC;;AAAA;AAboC;AAcpC;;AAAA;;AAGF;;;AACS;;;AAAP;AAEA;AAGa;;;;AADD;;;AAFZ;;;AAIS;;;AAJT;;AAcF;;;AACS;;;AAAA;;;AAAmB;;;AAAnB;;;;AAAP;AAEA;;AAAA;;AAGqB;;AAHrB;AAAA;;;AAAA;;AAAA;;AAImB;;AAJnB;AAAA;;;;AAAA;AASA;AAE0B;;AAEX;;;;AADE;;;;;AAHjB;;;;AAKS;;;AALT;;;;;;;;;;AAaW;;AAAkB;;AAAtB;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"wallet_id\" \"plugin_id\""
    },
    "27": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "29": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "30": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "31": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "34": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "37": {
      "op": "pushbytes 0x917c48b6 // method \"createApplication(uint64,uint64)void\"",
      "defined_out": [
        "Method(createApplication(uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(uint64,uint64)void)"
      ]
    },
    "43": {
      "op": "pushbytes 0x65a97bcc // method \"rekey(address)void\"",
      "defined_out": [
        "Method(createApplication(uint64,uint64)void)",
        "Method(rekey(address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(uint64,uint64)void)",
        "Method(rekey(address)void)"
      ]
    },
    "49": {
      "op": "pushbytes 0x3ea11832 // method \"optin(pay,uint64)void\"",
      "defined_out": [
        "Method(createApplication(uint64,uint64)void)",
        "Method(optin(pay,uint64)void)",
        "Method(rekey(address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(uint64,uint64)void)",
        "Method(rekey(address)void)",
        "Method(optin(pay,uint64)void)"
      ]
    },
    "55": {
      "op": "pushbytes 0x2487c32c // method \"deleteApplication()void\"",
      "defined_out": [
        "Method(createApplication(uint64,uint64)void)",
        "Method(deleteApplication()void)",
        "Method(optin(pay,uint64)void)",
        "Method(rekey(address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(uint64,uint64)void)",
        "Method(rekey(address)void)",
        "Method(optin(pay,uint64)void)",
        "Method(deleteApplication()void)"
      ]
    },
    "61": {
      "op": "uncover 4",
      "stack_out": [
        "Method(createApplication(uint64,uint64)void)",
        "Method(rekey(address)void)",
        "Method(optin(pay,uint64)void)",
        "Method(deleteApplication()void)",
        "tmp%2#0"
      ]
    },
    "63": {
      "op": "match main_createApplication_route@3 main_rekey_route@4 main_optin_route@5 main_deleteApplication_route@6",
      "stack_out": []
    },
    "73": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "74": {
      "block": "main_after_inlined_contracts/spending_account.algo.ts::SpendingAccountContract.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "75": {
      "block": "main_deleteApplication_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "77": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "DeleteApplication"
      ]
    },
    "79": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "80": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "81": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "83": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0"
      ]
    },
    "84": {
      "op": "!=",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "85": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "86": {
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.deleteApplication",
      "op": "callsub deleteApplication"
    },
    "89": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "b main_after_inlined_contracts/spending_account.algo.ts::SpendingAccountContract.__puya_arc4_router__@11"
    },
    "93": {
      "block": "main_optin_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "95": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "NoOp"
      ]
    },
    "96": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "97": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "98": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "100": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "101": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "102": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "103": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "105": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "1"
      ]
    },
    "106": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "107": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "108": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "110": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "111": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "112": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "113": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "116": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%18#0"
      ]
    },
    "117": {
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.optin",
      "op": "callsub optin",
      "stack_out": []
    },
    "120": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "121": {
      "op": "b main_after_inlined_contracts/spending_account.algo.ts::SpendingAccountContract.__puya_arc4_router__@11"
    },
    "124": {
      "block": "main_rekey_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "126": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "NoOp"
      ]
    },
    "127": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "128": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "129": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "131": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "132": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "133": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "134": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "137": {
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.rekey",
      "op": "callsub rekey",
      "stack_out": []
    },
    "140": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "b main_after_inlined_contracts/spending_account.algo.ts::SpendingAccountContract.__puya_arc4_router__@11"
    },
    "144": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "146": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "147": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "148": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "149": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "151": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "152": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "153": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "154": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "157": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "158": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "161": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "162": {
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "165": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "166": {
      "op": "b main_after_inlined_contracts/spending_account.algo.ts::SpendingAccountContract.__puya_arc4_router__@11"
    },
    "169": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "b main_after_if_else@10"
    },
    "172": {
      "subroutine": "contracts/spending_account.algo.ts::SpendingAccountContract.isWallet",
      "params": {},
      "block": "isWallet_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "174": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "175": {
      "op": "bytec_0 // \"wallet_id\"",
      "defined_out": [
        "\"wallet_id\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"wallet_id\""
      ]
    },
    "176": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "177": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "178": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "180": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "value%0#0"
      ]
    },
    "181": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "182": {
      "retsub": true,
      "op": "retsub"
    },
    "183": {
      "subroutine": "contracts/spending_account.algo.ts::SpendingAccountContract.isPlugin",
      "params": {},
      "block": "isPlugin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "185": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "186": {
      "op": "bytec_1 // \"plugin_id\"",
      "defined_out": [
        "\"plugin_id\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"plugin_id\""
      ]
    },
    "187": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "188": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "189": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "191": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "value%0#0"
      ]
    },
    "192": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "193": {
      "retsub": true,
      "op": "retsub"
    },
    "194": {
      "subroutine": "contracts/spending_account.algo.ts::SpendingAccountContract.createApplication",
      "params": {
        "walletID#0": "uint64",
        "plugin#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "197": {
      "block": "createApplication_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"wallet_id\"",
      "defined_out": [
        "\"wallet_id\""
      ],
      "stack_out": [
        "\"wallet_id\""
      ]
    },
    "198": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"wallet_id\"",
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "\"wallet_id\"",
        "walletID#0 (copy)"
      ]
    },
    "200": {
      "op": "app_global_put",
      "stack_out": []
    },
    "201": {
      "op": "bytec_1 // \"plugin_id\"",
      "defined_out": [
        "\"plugin_id\""
      ],
      "stack_out": [
        "\"plugin_id\""
      ]
    },
    "202": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"plugin_id\"",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "\"plugin_id\"",
        "plugin#0 (copy)"
      ]
    },
    "204": {
      "op": "app_global_put",
      "stack_out": []
    },
    "205": {
      "retsub": true,
      "op": "retsub"
    },
    "206": {
      "subroutine": "contracts/spending_account.algo.ts::SpendingAccountContract.rekey",
      "params": {
        "address#0": "bytes"
      },
      "block": "rekey",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "209": {
      "block": "rekey_block@0",
      "stack_in": [],
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.isWallet",
      "op": "callsub isWallet",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "212": {
      "error": "only the creator can rekey a spend contract",
      "op": "assert // only the creator can rekey a spend contract",
      "stack_out": []
    },
    "213": {
      "op": "itxn_begin"
    },
    "214": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "216": {
      "op": "itxn_field RekeyTo",
      "stack_out": []
    },
    "218": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "219": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "221": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "222": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "224": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "225": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "227": {
      "block": "rekey_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "228": {
      "retsub": true,
      "op": "retsub"
    },
    "229": {
      "subroutine": "contracts/spending_account.algo.ts::SpendingAccountContract.optin",
      "params": {
        "payment#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "optin",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "232": {
      "block": "optin_block@0",
      "stack_in": [],
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.isWallet",
      "op": "callsub isWallet",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "235": {
      "op": "bnz optin_bool_true@2",
      "stack_out": []
    },
    "238": {
      "block": "optin_or_contd@1",
      "stack_in": [],
      "callsub": "contracts/spending_account.algo.ts::SpendingAccountContract.isPlugin",
      "op": "callsub isPlugin",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "241": {
      "op": "bz optin_bool_false@3",
      "stack_out": []
    },
    "244": {
      "block": "optin_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "245": {
      "block": "optin_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Only the wallet or plugin can opt in",
      "op": "assert // Only the wallet or plugin can opt in",
      "defined_out": [],
      "stack_out": []
    },
    "246": {
      "op": "frame_dig -2",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "248": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "250": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "252": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "253": {
      "op": "bz optin_bool_false@7",
      "stack_out": []
    },
    "256": {
      "block": "optin_and_contd@5",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "258": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "260": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "262": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "263": {
      "op": "bz optin_bool_false@7",
      "stack_out": []
    },
    "266": {
      "block": "optin_bool_true@6",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "267": {
      "block": "optin_bool_merge@8",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "Invalid payment transaction",
      "op": "assert // Invalid payment transaction",
      "defined_out": [],
      "stack_out": []
    },
    "268": {
      "op": "itxn_begin"
    },
    "269": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "271": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "273": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "275": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "276": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "278": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "280": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "282": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "284": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "285": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "287": {
      "block": "optin_next_txn@9",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "288": {
      "retsub": true,
      "op": "retsub"
    },
    "289": {
      "block": "optin_bool_false@7",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "290": {
      "op": "b optin_bool_merge@8"
    },
    "293": {
      "block": "optin_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "294": {
      "op": "b optin_bool_merge@4"
    },
    "297": {
      "subroutine": "contracts/spending_account.algo.ts::SpendingAccountContract.deleteApplication",
      "params": {},
      "block": "deleteApplication_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "299": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "301": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "302": {
      "error": "Only the factory can delete the application",
      "op": "assert // Only the factory can delete the application",
      "stack_out": []
    },
    "303": {
      "retsub": true,
      "op": "retsub"
    }
  }
}