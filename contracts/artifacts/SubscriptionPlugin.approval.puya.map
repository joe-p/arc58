{
  "version": 3,
  "sources": [
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/constants.ts",
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/plugins/plugin.ts",
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/plugins/subscription_plugin.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEaE;AAAkD;AAAlD;AAFF;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAQE;;AAAA;AAAA;AAAA;;AAAA;AARF;;;AAAA;AAAA;;;;AAAA;AAAA;;;AAQE;;;AAAA;;AAHC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAGD;;;;;ADiBiC;;AD/B0B;AC+B1B;AAAA;ACRjB;;AAfhB;AAAA;AAAA;AAAA;AAeS;AArBe;AAqBf;AAAP;AAfF;AAgBkC;;AAAhC;AAEA;ADaI;;AAAA;;;AACY;;;;ACVM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1BH;;;;;;;;;;AAsBnB;;;AAMS;;;AANT;;ADHiC;;AD3B0B;;;;;;;;;;;;;;;;;;;;AC2B1B;AAAA;AAQF;;AD/B0B;AC+B1B;AAAA;AAAA;AAAA;;AApBP;;AAAA;;AAAA;AAAA;;AAAA;AAiCpB;AAAJ;;;;;ACba;;;;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"lastPayment\" \"spending_address\""
    },
    "36": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "38": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "41": {
      "op": "bytec_0 // \"lastPayment\"",
      "defined_out": [
        "\"lastPayment\""
      ],
      "stack_out": [
        "\"lastPayment\""
      ]
    },
    "42": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"lastPayment\"",
        "0"
      ],
      "stack_out": [
        "\"lastPayment\"",
        "0"
      ]
    },
    "43": {
      "op": "app_global_put",
      "stack_out": []
    },
    "44": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "46": {
      "op": "bz main_after_if_else@10",
      "stack_out": []
    },
    "49": {
      "op": "pushbytess 0xb8447b36 0xb060ba58 // method \"createApplication()void\", method \"makePayment(uint64,bool,address)void\"",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(makePayment(uint64,bool,address)void)"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(makePayment(uint64,bool,address)void)"
      ]
    },
    "61": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(makePayment(uint64,bool,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(makePayment(uint64,bool,address)void)",
        "tmp%2#0"
      ]
    },
    "64": {
      "op": "match main_createApplication_route@5 main_makePayment_route@6",
      "stack_out": []
    },
    "70": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "71": {
      "op": "return",
      "stack_out": []
    },
    "72": {
      "block": "main_makePayment_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "74": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "75": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "76": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "78": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "79": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "82": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "83": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[1]%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "reinterpret_bytes[1]%0#0",
        "0"
      ]
    },
    "87": {
      "op": "getbit",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "88": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "91": {
      "callsub": "contracts/plugins/subscription_plugin.algo.ts::SubscriptionPlugin.makePayment",
      "op": "callsub makePayment",
      "stack_out": []
    },
    "94": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "return",
      "stack_out": []
    },
    "96": {
      "block": "main_createApplication_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "98": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "99": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "100": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "102": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "103": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "104": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "105": {
      "op": "return",
      "stack_out": []
    },
    "106": {
      "subroutine": "contracts/plugins/subscription_plugin.algo.ts::SubscriptionPlugin.makePayment",
      "params": {
        "walletID#0": "uint64",
        "rekeyBack#0": "uint64",
        "_acctRef#0": "bytes"
      },
      "block": "makePayment",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "109": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingAddressBytes#0"
      ]
    },
    "110": {
      "op": "dup",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0"
      ]
    },
    "111": {
      "op": "frame_dig -3",
      "defined_out": [
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "walletID#0 (copy)"
      ]
    },
    "113": {
      "op": "bytec_1 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "walletID#0 (copy)",
        "\"spending_address\""
      ]
    },
    "114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_#0",
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "_#0"
      ]
    },
    "115": {
      "op": "pop",
      "defined_out": [
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "116": {
      "op": "global Round",
      "defined_out": [
        "spendingAddressBytes#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%0#0"
      ]
    },
    "118": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "spendingAddressBytes#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%0#0",
        "0"
      ]
    },
    "119": {
      "op": "bytec_0 // \"lastPayment\"",
      "defined_out": [
        "\"lastPayment\"",
        "0",
        "spendingAddressBytes#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%0#0",
        "0",
        "\"lastPayment\""
      ]
    },
    "120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "spendingAddressBytes#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "121": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "122": {
      "op": "-",
      "defined_out": [
        "spendingAddressBytes#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%1#0"
      ]
    },
    "123": {
      "op": "intc_1 // 1",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%1#0",
        "1"
      ]
    },
    "124": {
      "op": ">",
      "defined_out": [
        "spendingAddressBytes#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%2#0"
      ]
    },
    "125": {
      "op": "assert",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "126": {
      "op": "bytec_0 // \"lastPayment\"",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "\"lastPayment\""
      ]
    },
    "127": {
      "op": "global Round",
      "defined_out": [
        "\"lastPayment\"",
        "new_state_value%0#0",
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "\"lastPayment\"",
        "new_state_value%0#0"
      ]
    },
    "129": {
      "op": "app_global_put",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "130": {
      "op": "itxn_begin"
    },
    "131": {
      "op": "frame_dig -2",
      "defined_out": [
        "rekeyBack#0 (copy)",
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "rekeyBack#0 (copy)"
      ]
    },
    "133": {
      "op": "bnz makePayment_after_if_else@4",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "136": {
      "op": "global ZeroAddress",
      "defined_out": [
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "138": {
      "block": "makePayment_after_inlined_contracts/plugins/plugin.ts::Plugin.rekeyAddress@7",
      "stack_in": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ],
      "op": "itxn_field RekeyTo",
      "defined_out": [],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "140": {
      "op": "pushbytes base32(46XYR7OTRZXISI2TRSBDWPUVQT4ECBWNI7TFWPPS6EKAPJ7W5OBQ)",
      "defined_out": [
        "46XYR7OTRZXISI2TRSBDWPUVQT4ECBWNI7TFWPPS6EKAPJ7W5OBQ"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "46XYR7OTRZXISI2TRSBDWPUVQT4ECBWNI7TFWPPS6EKAPJ7W5OBQ"
      ]
    },
    "174": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "176": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "100000"
      ]
    },
    "180": {
      "op": "itxn_field Amount",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "182": {
      "op": "frame_dig 2",
      "defined_out": [
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "spendingAddressBytes#1"
      ]
    },
    "184": {
      "op": "itxn_field Sender",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "186": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "1"
      ]
    },
    "187": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "189": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "spendingAddressBytes#1"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "0"
      ]
    },
    "190": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "192": {
      "op": "itxn_submit"
    },
    "193": {
      "retsub": true,
      "op": "retsub"
    },
    "194": {
      "block": "makePayment_after_if_else@4",
      "stack_in": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "walletID#0 (copy)"
      ]
    },
    "196": {
      "op": "pushbytes \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "walletID#0 (copy)",
        "\"controlled_address\""
      ]
    },
    "216": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_#0",
        "controlledAccountBytes#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "_#0"
      ]
    },
    "217": {
      "op": "pop",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0"
      ]
    },
    "218": {
      "op": "frame_dig -3",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "walletID#0 (copy)"
      ]
    },
    "220": {
      "op": "bytec_1 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "controlledAccountBytes#0",
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "walletID#0 (copy)",
        "\"spending_address\""
      ]
    },
    "221": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_#0",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "_#0"
      ]
    },
    "222": {
      "op": "pop",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "223": {
      "op": "dup",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "224": {
      "op": "frame_bury 0",
      "defined_out": [
        "controlledAccountBytes#0",
        "spendingAddressBytes#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "226": {
      "op": "frame_dig -3",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "walletID#0 (copy)"
      ]
    },
    "228": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "walletAddress#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "walletAddress#0",
        "check%0#0"
      ]
    },
    "230": {
      "op": "swap",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "check%0#0",
        "walletAddress#0"
      ]
    },
    "231": {
      "op": "frame_bury 1",
      "defined_out": [
        "check%0#0",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "walletAddress#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0",
        "check%0#0"
      ]
    },
    "233": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "controlledAccountBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "234": {
      "op": "!=",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%1#1",
        "walletAddress#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "tmp%1#1"
      ]
    },
    "235": {
      "op": "bz makePayment_after_if_else@6",
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ]
    },
    "238": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "spendingAddressBytes#0",
        "walletAddress#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "240": {
      "op": "b makePayment_after_inlined_contracts/plugins/plugin.ts::Plugin.rekeyAddress@7"
    },
    "243": {
      "block": "makePayment_after_if_else@6",
      "stack_in": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ],
      "stack_out": [
        "spendingAddressBytes#0",
        "walletAddress#0",
        "spendingAddressBytes#1",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "245": {
      "op": "b makePayment_after_inlined_contracts/plugins/plugin.ts::Plugin.rekeyAddress@7"
    }
  }
}