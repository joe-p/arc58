#pragma version 10
intcblock 1 0

// This TEAL was generated by TEALScript v0.106.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// optInToAsset(address,uint64,pay)void
*abi_route_optInToAsset:
	// mbrPayment: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 0 (mbrPayment) for optInToAsset must be a pay transaction
	assert

	// asset: uint64
	txna ApplicationArgs 2
	btoi

	// sender: address
	txna ApplicationArgs 1
	dup
	len
	pushint 32
	==

	// argument 2 (sender) for optInToAsset must be a address
	assert

	// execute optInToAsset(address,uint64,pay)void
	callsub optInToAsset
	intc 0 // 1
	return

// optInToAsset(sender: Address, asset: AssetID, mbrPayment: PayTxn): void
optInToAsset:
	proto 3 0

	// contracts/plugins/optin_plugin.algo.ts:7
	// verifyPayTxn(mbrPayment, {
	//       receiver: sender,
	//       amount: {
	//         greaterThanEqualTo: globals.assetOptInMinBalance,
	//       },
	//     })
	// verify receiver
	frame_dig -3 // mbrPayment: PayTxn
	gtxns Receiver
	frame_dig -1 // sender: Address
	==

	// transaction verification failed: {"txn":"mbrPayment","field":"receiver","expected":"sender"}
	assert

	// verify amount
	frame_dig -3 // mbrPayment: PayTxn
	gtxns Amount
	global AssetOptInMinBalance
	>=

	// transaction verification failed: {"txn":"mbrPayment","field":"amount","condition":"greaterThanEqualTo","expected":">=globals.assetOptInMinBalance"}
	assert

	// contracts/plugins/optin_plugin.algo.ts:14
	// sendAssetTransfer({
	//       sender: sender,
	//       assetReceiver: sender,
	//       assetAmount: 0,
	//       xferAsset: asset,
	//       rekeyTo: sender,
	//     })
	itxn_begin
	pushint 4 // axfer
	itxn_field TypeEnum

	// contracts/plugins/optin_plugin.algo.ts:15
	// sender: sender
	frame_dig -1 // sender: Address
	itxn_field Sender

	// contracts/plugins/optin_plugin.algo.ts:16
	// assetReceiver: sender
	frame_dig -1 // sender: Address
	itxn_field AssetReceiver

	// contracts/plugins/optin_plugin.algo.ts:17
	// assetAmount: 0
	intc 1 // 0
	itxn_field AssetAmount

	// contracts/plugins/optin_plugin.algo.ts:18
	// xferAsset: asset
	frame_dig -2 // asset: AssetID
	itxn_field XferAsset

	// contracts/plugins/optin_plugin.algo.ts:19
	// rekeyTo: sender
	frame_dig -1 // sender: Address
	itxn_field RekeyTo

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*abi_route_createApplication:
	intc 0 // 1
	return

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x0dd9bd56 // method "optInToAsset(address,uint64,pay)void"
	txna ApplicationArgs 0
	match *abi_route_optInToAsset

	// this contract does not implement the given ABI method for call NoOp
	err