{
  "version": 3,
  "sources": [
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/abstracted_account.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAmwBE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnwBF;;;AAmwBE;;;AAAA;;;;AAhEA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnsBF;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAmsBE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAzBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1qBF;;;AAAA;;;AA0qBE;;;AAAA;;;;AAvEA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnmBF;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAmmBE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAtBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7kBF;;;AAAA;;;AAAA;;;;AAAA;AAAA;;;AAAA;;;AA6kBE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAjDA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5hBF;;;AAAA;;;;AAAA;AAAA;;;AAAA;;;AA4hBE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;;;AAtBC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAtgBH;;;AAAA;;;;AAAA;AAAA;;;AAAA;;;AAsgBG;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA1BD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5eF;;;AAAA;;;AA4eE;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AARC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA9BD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3bF;;;AAAA;;;AAAA;;;AA2bE;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5aF;;;AA4aE;;;AAAA;;;;AApBC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxZH;;;AAAA;;;AAwZG;;;AAAA;;;;;;;AAvXyC;;AA1BO;;;;;;;;;;;;;;;;;;;;;;;AA0B/C;AAAA;;AAI+B;;AA5BO;;;;;;;;;;;;;AA4BtC;AAAA;;AAGF;;;;;;;;AACc;AAAA;;AAAA;AAAA;;AAAA;AAAN;AAjB8C;AAAA;AAAA;AAmB7B;AAAA;;AAAnB;;;AACK;AAAP;;AAAA;AApBkD;AAAA;;AAAA;AAuBlB;AAAA;AAAM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAlC;AAAA;;AACsB;AAAA;AAAS;AAAjB;AAA6B;AAAR;AAArB;;AAAA;AAAhB;;AACiB;AAAZ;;AAA2B;;AAAA;AAAA;AAAZ;;AAAA;AAAxB;;;AACM;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAX;;AAAA;AAAJ;;;AACkB;AAAhB;;AA3BgD;AAAA;;AAAA;AAgCxB;AAAA;AAAtB;AAAA;;AACa;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAU;AAAZ;;;AAA4B;;AAAvC;AAAA;;AAGF;;AAAA;;AAAA;AAAA;AAAW;AAAb;AAAA;;;AACc;;AAAA;AAAA;;AAAA;AAAA;AAAW;AAAxB;;AAAA;AAAA;AAAqC;AAAA;;AAAA;AAAA;AAAS;AAA/C;AADA;;;;AAAA;;AAAA;AADF;;AAAA;;;;;AAF4D;;;;;AARhB;;AAAK;AAAL;AAAA;;;;;;;;AAiB9C;;;AAEU;;AAAA;;AA/DsC;AAAA;;AAAA;AAAA;AA+D1C;AAAA;;;AAAmD;;AAAA;;AAAmB;;AAAvB;AAA/C;;;AACK;AAAP;AAII;;AAAA;;AAAyB;;AAA7B;AAAA;;;AACO;;AAAA;;AAAiB;;AAArB;AADH;;;AAEO;;AAAA;;AAAe;AAAnB;AAFH;;;AAGO;;AAAA;;AAAkC;AAAtC;AAHH;;;AAIG;;AAAY;AAAZ;;AAAmB;;AAAnB;AAJH;;;;AADF;;;;;AASF;;;AACmB;AACS;;AAAa;AAAjB;AAAgC;;AAAX;;AAAA;AAA3C;;;AACQ;;AAEF;;;AAAJ;;;AACe;AAAb;;AAKJ;;AAAA;;AATiE;;AAAK;AAAL;AAAA;;;;;;;;AAYnE;;;;;;;AAvEsD;AAAA;;AAAA;AAyEnB;AAAA;;AAA3B;AACF;;;AAEQ;AACC;AACI;;AAEU;AAChB;AANT;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AA3EkD;AAAA;;AAAA;AAqFf;AAAA;AAA/B;AAAA;;AACsB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAU;AAArB;;;AAAqC;;AAEhB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAU;AAA1C;;AAAU;AAAV;;AACyB;;AAAA;;AAAA;AAAA;AAAS;AAAS;AAA7B;AAAd;;AACoC;;AAAA;;AAAA;AAAA;AAAW;AAAjC;AAAsD;;AAAA;;AAAA;AAAA;AAAS;AAAhE;AAAb;;AACmC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAQ;AAAA;AAAS;AAA5B;AAAxB;;AAEQ;;AAAA;;;AAAU;;AAAA;;;AAAY;;AAAA;;;;AAEpC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;AATqE;;;;;AAmBvE;;;;;;;AAOgB;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;;;AAAR;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;;AACF;;AAAA;;AAAA;;AAAA;;AAAA;;AAEiB;AACI;AACD;AAJpB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AASe;;AAAA;AAAA;AADb;;AAEiB;AAFjB;;AAGgB;AAHhB;;;;;;AAMJ;;;AACqC;;AAAA;AAAA;AAA5B;;AAAA;AAAP;AACoC;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA2B;AAAtD;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;AAAT;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAMO;;AAAA;;;AAAA;;AAAA;;;;AAHT;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;AAaF;;;;;;;;;;;AAnJsD;AAAA;;AAAA;AAqJjB;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAU;AAAlC;;;AACN;;AADL;;AAIe;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAAf;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAEN;AACO;AAAP;AACO;AAAP;AAEiB;AAAb;;AACsB;AAAtB;;AAEsB;;AAAa;AAAjB;AAAb;;AAA6C;;AAAX;;AAAA;AAA3C;;;AACQ;;AAAA;AAAA;;AAEF;;;AAAJ;;;AACe;AAAb;;AA2BJ;;AAAA;;;;;;;;;;AAvBU;;AAAA;;AAAyB;;AAA7B;AAAJ;;;AAR+D;;AAAK;AAAL;AAAA;;;;;AAYpD;;AAAA;AAAA;;AAAiB;;AAAA;AAAA;AAAA;AAAY;AAAjC;AAAP;AACW;AAAA;;AAAkC;AAAtC;AAAP;AAGW;AAAA;;AAAa;AAAjB;AAAP;AACwB;AAAY;AAAZ;;AAAL;AAAiC;;AAA7C;AAAP;AAEc;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAAA;;AAAA;;;;;;;;;;AAAR;;AAAA;;AAAA;AAEC;AAAP;AACA;AAEA;;AAAA;;;AACuC;;AAAA;AA3LW;AAAA;;AAAA;AA2L9B;AAAA;AAAA;AAAlB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAGF;;AAAe;AAAf;AAAA;;;;;;;;AAvCS;;;;;AAqDb;;;;AAEa;;AAAY;AAAZ;;AAAJ;AAAwB;AAAxB;AAAP;AAC4C;;AAAY;AAAZ;;AAAxB;AAAA;AAAA;AAAA;AAAA;AA/MgC;AAAA;;AAAA;AAiNlB;AAAA;AAAM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAlC;AACgB;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAhB;AAE4B;AAAA;AAAA;AAAS;AAAS;AAAhC;AApNgC;AAAA;;AAAA;AAsNhB;AAAA;AAAM;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAU;AAA9C;AAEW;;;AAAmB;;AACS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAW;AAApC;AAA4D;;AAAA;AAAA;AAAA;AAAS;AAAtE;AAAb;;AAEY;AAAA;AAAA;AAAd;;AAAA;AAAA;;;AAA2C;;AAAA;;;AAAgB;;AAAA;;;AAE7D;;AAAA;;;AACqB;;AAAA;;;AACS;;AAAxB;AAGJ;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAlOgD;AAAA;;AAAA;AAoOzB;AAAA;AADkB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;AAAA;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;AAAA;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;AAAA;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;AAAA;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;AAAA;AAAA;AAnOO;AAAA;;AAAA;AAoOzB;AAAA;AADkB;;AAAA;AAAA;AAAf;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAnOsB;AAAA;;AAAA;AAmOhD;AAAA;;AAAA;AAAA;AAOe;AADjB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAT8B;;AAAxB;;;;AAiBS;AACI;AACD;AAHpB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAxBmD;;;;;AA+BrD;;;;;;;;AACuB;AAAqB;;AAAA;AAAA;AAAlB;;AAAA;AAAxB;;;AACkB;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAzPkC;AAAA;;AAAA;AA0Pb;AAAA;AACU;AAAA;;AAAA;AAAA;AAAY;AAAQ;;AAAA;AAA7D;;AAGe;;AAAA;AAAA;;AAAA;AACF;;AAAA;AAAA;AAAA;AACF;;AAAA;AAAA;AAAA;AAAA;AAHI;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOR;;AAAA;;AAAA;AAAA;AAAM;AAAA;AACN;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAU;AAFvB;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAOY;AAAA;AAAA;AAAM;AAAW;AAAzB;AAAJ;;;AACE;AA9R0C;AAAA;;AAAA;AAAA;AAiSvB;AACM;;AAAA;AAAA;AAAA;AAAA;AAAO;AAAA;AACT;AAAA;AAAA;AAAM;;;;;;;;;AAL7B;;;AAMS;;;AANT;AAnB8C;;AAAK;AAAL;AAAA;;;;;AA6B9C;AAxS0C;AAAA;;AAAA;AAAA;AA2S5B;AACM;;AAAA;AAAA;AAAA;AAAO;;;;;;;AAJ3B;;;AAKS;;;AALT;;;;;;;;;;;;;AAYN;;;;;;;;;;;AA3R8D;AAAA;;AAAA;AAiShC;AAAA;;AAA5B;AAjS4D;AAAA;;AAAA;AAkSrB;AAAA;AAClB;;AAAA;;;AACO;;AAAxB;AADE;;AAIQ;;AAAA;AAAA;AAAA;AA5dwC;;AA4dlD;AAAJ;;;AAC0B;;AAAA;AAAA;;AAAA;AAAA;AAAM;AAAxB;AAC6B;;AAAA;AAAA;AAAQ;AAArC;;AAAmB;AACE;;AAAA;AAAA;AAAA;AAAO;AAE3B;AAAA;;AAAA;AAAP;AAEoD;AAAjB;AA9SuB;AAAA;;AAAA;AA8SrC;AAAA;AAAA;AAArB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;;;;;;;;AACmB;;AAAA;AAAA;AAAA;AAnemC;;;AAme7C;AAAJ;;;AACoF;;AAAA;AAAA;;AAAA;AAAA;AAAS;AAA5F;;AAAA;;AAAA;;AAA6B;;;AAA7B;AAEoB;AAAA;;AAAA;AAAA;AAAQ;AAA5B;;AACqB;;AAAA;AAAA;AAAA;AAAO;AAA5B;;AACkB;AAAA;;AAAA;AAAA;AAAM;AAAxB;;AAE6B;;AAAA;AAAA;AAAK;AAApC;AAAJ;;;AACS;;AAAA;;AAAA;AAAP;AAMgC;;AAAA;;AAAA;AAAjB;AA7TyC;AAAA;;AAAA;AAgUhC;AAAA;AADqB;AAAA;AAAA;AA/TW;AAAA;;AAAA;AAgUhC;AAAA;AADqB;AAAA;AAAA;AA/TW;AAAA;;AAAA;AAgUhC;AAAA;AADqB;;AAAA;AAAA;AA/TW;AAAA;;AAAA;AAgUhC;AAAA;AADqB;;AAAA;AAAA;AAAlB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AA/T6B;AAAA;;AAAA;AA+T1D;AAAA;;;;AANQ;;AAAA;;AAAmB;AAClB;;AAAA;AAAP;;;;AAWiB;;AAAA;AAAA;AAAA;AAxfiC;;;AAwf3C;AAAJ;;;AACY;;AAAA;;;AAAmB;;AAET;;AAAA;AAAA;AAAA;AAAO;AAA5B;AAEgB;;AAAA;AAAA;AAAA;AAAA;AAAI;AAApB;;AACqB;AAAA;;AAAA;AAAA;AAAS;AAA9B;AACwB;AAAA;;AAAA;AAAA;AAAQ;AAAhC;AACyB;AAAA;;AAAA;AAAA;AAAM;AAA/B;AACiB;;AAAA;AAAA;AAAK;AAEtB;;AAAA;AAAiB;AACkB;;AAAA;AAAD;;AAAA;AAAhB;AAEE;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEnB;AAAA;;AAAA;AAAP;AAEkC;AAAA;AAAjB;AAvVyC;AAAA;;AAAA;AA0VhC;AAAA;AADqB;AAAA;AAAA;AAzVW;AAAA;;AAAA;AA0VhC;AAAA;AADqB;AAAA;AAAA;AAzVW;AAAA;;AAAA;AA0VhC;AAAA;AADqB;;AAAA;AAAA;AAzVW;AAAA;;AAAA;AA0VhC;AAAA;AADqB;;AAAA;AAAA;AAAlB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAzV6B;AAAA;;AAAA;AAyV1D;AAAA;;;;AAnBmD;;;;;AAjCzB;;AAAxB;;;;AA4DN;;;AACE;;AAAA;;;AACgB;;AAAiB;AAAP;;AAAA;AAAD;;AAAA;AAAhB;AAAP;AAEY;;AAA2B;AAAP;;AAAA;AAAD;;AAAA;AAA1B;AAAP;AA9X8C;AAAA;;AAAA;AAAA;AAsYC;;AAAxC;AAAA;;;AACI;;AADX;AAEW;;;;;AAWb;;;AAGQ;;AAAJ;;AAAA;AAAA;;;AACO;;AAAJ;;AAAA;AADH;;;;AADF;AAKO;;AAAA;;AAAA;AAAP;AA5ZkC;;AA8ZlC;;AAAA;AACmE;;AAApC;;AAAA;AAAA;;;AAAyD;;AA7Z1C;;AA6Z9C;AAAA;AACA;;;AACA;;;;AAFsI;;;;;;;;;AAUxI;;;AACa;;AA1auB;AAAA;;AAAA;AAAA;AA0a3B;AAAP;AA1akC;;AA2alC;;AAAA;AACA;;;AACA;;;;AAWF;;;AAKa;;AAA8B;;AAAA;AAAQ;;AAAA;AAA1C;AAAP;AA3b8C;AAAA;;AAAA;AAAA;AA6bf;;AAAA;AAAmC;;AAAA;AAAQ;;AAAA;AAAxE;AADF;AAKY;AAAA;;AAAA;AAAA;;AAAA;AAAN;AA9a8C;AAAA;AAAA;AAibhC;AAAA;;AAAlB;;;AAjbkD;AAAA;;AAAA;AAibJ;AAAA;AAAM;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAM;AAA1D;;;;AADF;AArckC;;AA0clC;;AAAA;AArboD;AAAA;;AAAA;AAsb9B;AAAA;AAAM;AAAA;AAAA;AAtkBE;;AAskB1B;AAAJ;;;AACE;;;AAEF;;;;;;;;AA9ckC;AAAA;;AAAA;AAAA;AAwdlC;AAtc4C;AAAA;;AAAA;AAAA;AA6cH;;AAAA;AAAgB;;;AAAlD;AAAP;AACgD;;AA9cJ;;AA8c5C;AAAA;;AASF;;;AACa;;AA1euB;AAAA;;AAAA;AAAA;AA0e3B;AAAP;AAEA;AA1e8C;AAAA;;AAAA;AAAA;AA6ehC;;AACD;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALV;;;AAMS;;;AANT;AAUU;;;AAAA;AAAV;;;AAAkB;;;AAElB;;;;AAWF;;;AAOE;;AAAA;;;AACyD;;AAAvD;;AAAA;AAAA;;AAAA;;;;AAEK;;AAAA;;AAAA;;AAAA;;;AAAP;AAYF;;;;;;;;;;AAMQ;;AAA+B;AAIpB;;AAAA;;;AACQ;;AAHb;AAAA;;AAAA;AAAA;AAAA;AAAN;AAAA;;AA5gB8C;AAAA;AAAA;AAmhB9B;AAAA;AAAM;;AAAA;AAAA;AAAY;AAAW;AAA/C;AAAJ;;;AACqD;;AAAA;;AAAA;AAvhBT;;AAuhB1C;AAAA;AAKF;;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;;;;;;;;AAAA;;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;;;;;;;;;AAAA;;AAAA;;AAEA;AA/hB4C;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmiBrB;;AAAA;;AAAA;AACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALV;;;AAMS;;;AANT;AA5hBoD;AAAA;;AAAA;AAsiB9B;AAAA;AAAM;AAAA;AAAA;AAtrBE;;AAsrB1B;AAAJ;;;AACE;;;;;;;;;;;;AA1jB4C;AAAA;;AAAA;AAAA;AAgBF;;AAyhB1C;AAAA;;;;AANoB;;;;;AAqCxB;;;AAljBuD;;AAAA;;AAAA;AAojB3B;AAAA;AAAM;AAAA;AAAA;AADhC;;AAAA;;AAAA;;AAAA;;;AAAA;;;AAqBF;;;;;;;;AAWa;;AA3mBuB;AAAA;;AAAA;AAAA;AA2mB3B;AAAP;AAEE;;AAxuB4B;;AAwuB5B;AAAA;;;AACgC;;AAAhC;;AAAA;AADA;;;;AAGK;AAAP;AACY;AAAA;;AAAA;AAAA;;AAAA;AAAN;;AAEY;;AAAA;AAAA;AAAd;;AACiB;AAAZ;;AAA2B;;AAAA;AAAA;AAAZ;;AAAA;AAAxB;;;AACE;;AAAA;;;AACY;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAA;AACX;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAFN;AAAA;;AAAA;AAAA;AAAA;AAGH;;AAHG;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAD+C;AAAL;AAAA;;;;;AAQjB;;;AAAA;AAAV;;;AAA0B;;AAArC;;AAMY;;AAAd;;AACa;;;AAAA;AAAjB;;;AAGI;AACkC;;AAAA;AAAA;AADlC;;;;;;AAFoB;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;;AAAA;;;AAEpB;;;AAAA;;;;AAAA;;;AAAA;AAGG;;;AAJS;AAAd;;AAeS;;AAIF;;AAAA;AAViB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASZ;;AATY;AAAA;AAAA;AAAA;AAAA;AAznB0B;AAAA;;AAAA;AAynBpD;AAAA;;AAAA;AAAA;AAaA;;;AACA;;;;AAhC0D;;;;;;;;;AA2C5D;;;AACa;;AAxqBuB;AAAA;;AAAA;AAAA;AAwqB3B;AAAP;AAEY;AAAA;;AAAA;AAAA;;AAAA;AArpBwC;AAAA;;AAAA;AAspB3B;AAAA;;AAAzB;AAtpBoD;AAAA;AAAA;AAupBlC;;AAElB;;;AACA;;;;AAiBF;;;;AAYa;;AA5sBuB;AAAA;;AAAA;AAAA;AA4sB3B;AAAP;AAC+B;;AAAA;;;AArrBsB;;AAAA;AAAA;AAqrBd;AAAA;;AAAhC;AAAP;AAEY;AAAA;;AAAA;AAAA;;AAAA;AAAN;AACiB;;AAAA;;;AAxrB8B;;AAAA;AAAA;AAwrBrD;AAAA;AAEkB;;AAAA;AAAA;AACG;AAAe;;AAAA;AAAA;AAAZ;;AAAA;AAAxB;;;AACE;;AAAA;;;AACY;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAA;AACX;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAFN;AAAA;;AAAA;AAAA;AAAA;AAGH;;AAHG;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAD+C;AAAL;AAAA;;;;;AAQ1B;;AAAd;;AACa;;;AAAA;AAAjB;;;AAGI;AACkC;;AAAA;AAAA;AADlC;;;;;;AAFoB;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;;AAAA;;;AAEpB;;;AAAA;;;;AAAA;;;AAAA;AAGG;;;AAJS;AAAd;;AASyB;;;AAAA;AAAV;;;AAA0B;;AAQhC;;AAAA;AAIF;AAViB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASZ;;AATY;AAAA;AAAA;AAAA;AAAA;AAptB0B;AAAA;;AAAA;AAotBpD;AAAA;;AAAA;AAAA;AAaA;;;AACA;;;;AAhB0D;;;;;AAyB5D;;;AACa;;AAjwBuB;AAAA;;AAAA;AAAA;AAiwB3B;AAAP;AAC8B;;AAAA;;;AA1uBuB;;AAAA;AAAA;AA0uBf;AAAA;;AAAtC;AACmC;;AAAA;;;AA3uBkB;;AAAA;AAAA;AA2uBV;AAAA;AA9uBS;AAAA;;AAAA;AA+uB3B;AAAA;;AAAzB;AAEuB;;AAAA;;;AA9uB8B;;AAAA;AAAA;AA8uBtB;;AAjvBqB;AAAA;AAAA;AAkvBlC;;AAClB;;;AACA;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 4 225"
    },
    "9": {
      "op": "bytecblock 0x \"p\" \"a\" 0x00 \"admin\" \"controlled_address\" \"spending_address\" \"n\" 0x0000000000000000 0x01 0x0f885493 0x151f7c75 0x0000 0x973b616f base64(CoEBQw==) base64(CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ==)"
    },
    "351": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "353": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "354": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "355": {
      "op": "bz main_bare_routing@18",
      "stack_out": []
    },
    "358": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "361": {
      "op": "pushbytes 0xb4c77d71 // method \"createApplication(address,address)void\"",
      "defined_out": [
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)"
      ]
    },
    "367": {
      "op": "pushbytes 0xd24b7556 // method \"arc58_changeAdmin(address)void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)"
      ]
    },
    "373": {
      "op": "pushbytes 0x5fa449c6 // method \"arc58_pluginChangeAdmin(uint64,address,address)void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)"
      ]
    },
    "379": {
      "op": "pushbytes 0x13bc44e4 // method \"arc58_getAdmin()address\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)"
      ]
    },
    "385": {
      "op": "bytec 10 // method \"arc58_verifyAuthAddr()void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)"
      ]
    },
    "387": {
      "op": "pushbytes 0xc95a5d3d // method \"arc58_rekeyTo(address,bool)void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)"
      ]
    },
    "393": {
      "op": "pushbytes 0x682fdbf8 // method \"arc58_canCall(uint64,bool,address,byte[4])bool\"",
      "defined_out": [
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)"
      ]
    },
    "399": {
      "op": "pushbytes 0xde300fe9 // method \"arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void\"",
      "defined_out": [
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)"
      ]
    },
    "405": {
      "op": "pushbytes 0xbe39d3c8 // method \"arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void\"",
      "defined_out": [
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)"
      ]
    },
    "411": {
      "op": "pushbytes 0x9ac5b48d // method \"arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void\"",
      "defined_out": [
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)"
      ]
    },
    "417": {
      "op": "pushbytes 0x4d372355 // method \"arc58_removePlugin(uint64,address)void\"",
      "defined_out": [
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)"
      ]
    },
    "423": {
      "op": "pushbytes 0x0e1c77d2 // method \"arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void\"",
      "defined_out": [
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)"
      ]
    },
    "429": {
      "op": "pushbytes 0xe350b9d4 // method \"arc58_removeNamedPlugin(string)void\"",
      "defined_out": [
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removeNamedPlugin(string)void)"
      ]
    },
    "435": {
      "op": "uncover 13",
      "stack_out": [
        "Method(createApplication(address,address)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "tmp%2#0"
      ]
    },
    "437": {
      "op": "match main_createApplication_route@3 main_arc58_changeAdmin_route@4 main_arc58_pluginChangeAdmin_route@5 main_arc58_getAdmin_route@6 main_arc58_verifyAuthAddr_route@7 main_arc58_rekeyTo_route@8 main_arc58_canCall_route@9 main_arc58_rekeyToPlugin_route@10 main_arc58_rekeyToNamedPlugin_route@11 main_arc58_addPlugin_route@12 main_arc58_removePlugin_route@13 main_arc58_addNamedPlugin_route@14 main_arc58_removeNamedPlugin_route@15",
      "stack_out": []
    },
    "465": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "466": {
      "block": "main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "467": {
      "block": "main_arc58_removeNamedPlugin_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "469": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "NoOp"
      ]
    },
    "470": {
      "op": "==",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "471": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "472": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "474": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "0"
      ]
    },
    "475": {
      "op": "!=",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "476": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "477": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "480": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removeNamedPlugin",
      "op": "callsub arc58_removeNamedPlugin",
      "stack_out": []
    },
    "483": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "484": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "487": {
      "block": "main_arc58_addNamedPlugin_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "489": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0",
        "NoOp"
      ]
    },
    "490": {
      "op": "==",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "491": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "492": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "494": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "0"
      ]
    },
    "495": {
      "op": "!=",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "496": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "497": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "500": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%7#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "503": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0"
      ]
    },
    "506": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "509": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "512": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "515": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "518": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0"
      ]
    },
    "521": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "524": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0"
      ]
    },
    "527": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0"
      ]
    },
    "529": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "531": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0"
      ]
    },
    "533": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "535": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "537": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "539": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "541": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0"
      ]
    },
    "543": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[1]%11#0",
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "545": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%64#0",
        "reinterpret_bytes[8]%7#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[8]%8#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0"
      ]
    },
    "547": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addNamedPlugin",
      "op": "callsub arc58_addNamedPlugin",
      "stack_out": []
    },
    "550": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "551": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "554": {
      "block": "main_arc58_removePlugin_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "556": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0",
        "NoOp"
      ]
    },
    "557": {
      "op": "==",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "558": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "559": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "561": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "0"
      ]
    },
    "562": {
      "op": "!=",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "563": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "564": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "567": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%8#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0",
        "reinterpret_bytes[32]%8#0"
      ]
    },
    "570": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removePlugin",
      "op": "callsub arc58_removePlugin",
      "stack_out": []
    },
    "573": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "574": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "577": {
      "block": "main_arc58_addPlugin_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "579": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "NoOp"
      ]
    },
    "580": {
      "op": "==",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "581": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "582": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "584": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "0"
      ]
    },
    "585": {
      "op": "!=",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "586": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "587": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "590": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0"
      ]
    },
    "593": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "596": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "599": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "602": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "605": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0"
      ]
    },
    "608": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "611": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "614": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "616": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0"
      ]
    },
    "618": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "620": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "622": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "624": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "626": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0"
      ]
    },
    "628": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "630": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[8]%3#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%4#0",
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[8]%4#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%55#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "632": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addPlugin",
      "op": "callsub arc58_addPlugin",
      "stack_out": []
    },
    "635": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "636": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "639": {
      "block": "main_arc58_rekeyToNamedPlugin_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "641": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "NoOp"
      ]
    },
    "642": {
      "op": "==",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "643": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "644": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "646": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "0"
      ]
    },
    "647": {
      "op": "!=",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "648": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "649": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "652": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "655": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "658": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%47#0",
        "reinterpret_bytes[1]%3#0",
        "0"
      ]
    },
    "659": {
      "op": "getbit",
      "defined_out": [
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "660": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%47#0",
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "663": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%47#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0"
      ]
    },
    "666": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%47#0"
      ]
    },
    "668": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%49#0",
        "tmp%50#0",
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "670": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%50#0",
        "tmp%47#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "672": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0"
      ]
    },
    "674": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToNamedPlugin",
      "op": "callsub arc58_rekeyToNamedPlugin",
      "stack_out": []
    },
    "677": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "678": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "681": {
      "block": "main_arc58_rekeyToPlugin_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "683": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "NoOp"
      ]
    },
    "684": {
      "op": "==",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "685": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "686": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "688": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "0"
      ]
    },
    "689": {
      "op": "!=",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "690": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "691": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "694": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "697": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[1]%2#0",
        "0"
      ]
    },
    "698": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0"
      ]
    },
    "699": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "702": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "705": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "707": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%40#0",
        "tmp%41#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0"
      ]
    },
    "709": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%41#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "711": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%39#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "713": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToPlugin",
      "op": "callsub arc58_rekeyToPlugin",
      "defined_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ],
      "stack_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ]
    },
    "716": {
      "op": "popn 2",
      "stack_out": []
    },
    "718": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "719": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "722": {
      "block": "main_arc58_canCall_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "724": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "NoOp"
      ]
    },
    "725": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "726": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "727": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "729": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "0"
      ]
    },
    "730": {
      "op": "!=",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "731": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "732": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "735": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "738": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[1]%1#0",
        "0"
      ]
    },
    "739": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0"
      ]
    },
    "740": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0",
        "reinterpret_bytes[32]%6#0"
      ]
    },
    "743": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0",
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0"
      ]
    },
    "746": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%33#0",
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "748": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0"
      ]
    },
    "750": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[4]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0",
        "reinterpret_bytes[32]%6#0"
      ]
    },
    "752": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%33#0",
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0"
      ]
    },
    "754": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_canCall",
      "op": "callsub arc58_canCall",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "757": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "758": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "759": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "761": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "762": {
      "op": "bytec 11 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "764": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "765": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "766": {
      "op": "log",
      "stack_out": []
    },
    "767": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "768": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "771": {
      "block": "main_arc58_rekeyTo_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "773": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "NoOp"
      ]
    },
    "774": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "775": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "776": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "778": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "0"
      ]
    },
    "779": {
      "op": "!=",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "780": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "781": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "784": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "787": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyTo",
      "op": "callsub arc58_rekeyTo",
      "stack_out": []
    },
    "790": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "791": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "794": {
      "block": "main_arc58_verifyAuthAddr_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "796": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "NoOp"
      ]
    },
    "797": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "798": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "799": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "801": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "0"
      ]
    },
    "802": {
      "op": "!=",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "803": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "804": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_verifyAuthAddr",
      "op": "callsub arc58_verifyAuthAddr"
    },
    "807": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "808": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "811": {
      "block": "main_arc58_getAdmin_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "813": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "NoOp"
      ]
    },
    "814": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "815": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "816": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "818": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0"
      ]
    },
    "819": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "820": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "821": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_getAdmin",
      "op": "callsub arc58_getAdmin",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "824": {
      "op": "bytec 11 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0x151f7c75"
      ]
    },
    "826": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%19#0"
      ]
    },
    "827": {
      "op": "concat",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "828": {
      "op": "log",
      "stack_out": []
    },
    "829": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "830": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "833": {
      "block": "main_arc58_pluginChangeAdmin_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "835": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "NoOp"
      ]
    },
    "836": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "837": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "838": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "840": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "841": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "842": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "843": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "846": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "849": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "852": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "854": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%4#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "856": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "858": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_pluginChangeAdmin",
      "op": "callsub arc58_pluginChangeAdmin",
      "stack_out": []
    },
    "861": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "862": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "865": {
      "block": "main_arc58_changeAdmin_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "867": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "868": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "869": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "870": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "872": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "873": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "874": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "875": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "878": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_changeAdmin",
      "op": "callsub arc58_changeAdmin",
      "stack_out": []
    },
    "881": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "882": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "885": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "887": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "888": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "889": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "890": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "892": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "893": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "894": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "895": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "898": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "901": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "904": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "905": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@20"
    },
    "908": {
      "block": "main_bare_routing@18",
      "stack_in": [],
      "op": "b main_after_if_else@19"
    },
    "911": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "params": {},
      "block": "updateLastUserInteraction_block@0",
      "stack_in": [],
      "op": "global LatestTimestamp",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "913": {
      "op": "pushbytes \"last_user_interaction\"",
      "defined_out": [
        "\"last_user_interaction\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"last_user_interaction\""
      ]
    },
    "936": {
      "op": "swap",
      "stack_out": [
        "\"last_user_interaction\"",
        "new_state_value%0#0"
      ]
    },
    "937": {
      "op": "app_global_put",
      "stack_out": []
    },
    "938": {
      "retsub": true,
      "op": "retsub"
    },
    "939": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "params": {},
      "block": "updateLastChange_block@0",
      "stack_in": [],
      "op": "global LatestTimestamp",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "941": {
      "op": "pushbytes \"last_change\"",
      "defined_out": [
        "\"last_change\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"last_change\""
      ]
    },
    "954": {
      "op": "swap",
      "stack_out": [
        "\"last_change\"",
        "new_state_value%0#0"
      ]
    },
    "955": {
      "op": "app_global_put",
      "stack_out": []
    },
    "956": {
      "retsub": true,
      "op": "retsub"
    },
    "957": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCallAllowed",
      "params": {
        "app#0": "bytes",
        "caller#0": "bytes",
        "method#0": "bytes"
      },
      "block": "pluginCallAllowed",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "960": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0"
      ]
    },
    "961": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "p#0"
      ]
    },
    "962": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0"
      ]
    },
    "963": {
      "op": "dupn 2",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0"
      ]
    },
    "965": {
      "block": "pluginCallAllowed_block@0",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "0x"
      ]
    },
    "966": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x",
        "app#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "0x",
        "app#0 (copy)"
      ]
    },
    "968": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "969": {
      "op": "frame_dig -2",
      "defined_out": [
        "caller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "encoded_tuple_buffer%1#0",
        "caller#0 (copy)"
      ]
    },
    "971": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "972": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "key#0"
      ]
    },
    "973": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "key#0",
        "\"p\""
      ]
    },
    "974": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "975": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%0#0"
      ]
    },
    "976": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "977": {
      "op": "bury 1",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_exists%0#0"
      ]
    },
    "979": {
      "op": "bnz pluginCallAllowed_after_if_else@2",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "982": {
      "block": "pluginCallAllowed_if_body@1",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "0"
      ]
    },
    "983": {
      "op": "frame_bury 0"
    },
    "985": {
      "retsub": true,
      "op": "retsub"
    },
    "986": {
      "block": "pluginCallAllowed_after_if_else@2",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "\"p\""
      ]
    },
    "987": {
      "op": "frame_dig 5",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "989": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%1#0"
      ]
    },
    "990": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "991": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%1#0"
      ]
    },
    "992": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "993": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "26"
      ]
    },
    "995": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "key#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%1#0",
        "item_start_offset%0#0"
      ]
    },
    "996": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "997": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "998": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "key#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "item_end_offset%0#0"
      ]
    },
    "999": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "1000": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "item_end_offset%0#0",
        "maybe_value%1#0",
        "item_start_offset%0#0"
      ]
    },
    "1002": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1004": {
      "op": "substring3",
      "defined_out": [
        "key#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0"
      ]
    },
    "1005": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0",
        "methods#0"
      ]
    },
    "1006": {
      "op": "frame_bury 0",
      "defined_out": [
        "key#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0"
      ]
    },
    "1008": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0",
        "0"
      ]
    },
    "1009": {
      "op": "extract_uint16",
      "defined_out": [
        "key#0",
        "methods#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%3#0"
      ]
    },
    "1010": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1011": {
      "op": ">",
      "defined_out": [
        "key#0",
        "methods#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%4#0"
      ]
    },
    "1012": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "methods#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%4#0",
        "1"
      ]
    },
    "1013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%4#0",
        "1",
        "0"
      ]
    },
    "1014": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "1",
        "0",
        "tmp%4#0"
      ]
    },
    "1016": {
      "op": "select",
      "defined_out": [
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methodAllowed#0"
      ]
    },
    "1017": {
      "op": "frame_bury 4",
      "defined_out": [
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1019": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "i#0"
      ]
    },
    "1020": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0",
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1022": {
      "block": "pluginCallAllowed_while_top@3",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0"
      ]
    },
    "1024": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0",
        "0"
      ]
    },
    "1025": {
      "op": "extract_uint16",
      "defined_out": [
        "methods#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%5#0"
      ]
    },
    "1026": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%5#0",
        "i#0"
      ]
    },
    "1028": {
      "op": ">",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%6#0"
      ]
    },
    "1029": {
      "op": "bz pluginCallAllowed_after_while@7",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1032": {
      "block": "pluginCallAllowed_while_body@4",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methods#0"
      ]
    },
    "1034": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1037": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "1039": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "array_head_and_tail%0#0",
        "i#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "array_head_and_tail%0#0",
        "i#0",
        "20"
      ]
    },
    "1041": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1042": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "20"
      ]
    },
    "1044": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%7#0"
      ]
    },
    "1045": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "methods#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%7#0",
        "0"
      ]
    },
    "1046": {
      "op": "intc_3 // 4",
      "defined_out": [
        "0",
        "4",
        "i#0",
        "methods#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%7#0",
        "0",
        "4"
      ]
    },
    "1047": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%8#0"
      ]
    },
    "1048": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "method#0 (copy)",
        "methods#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%8#0",
        "method#0 (copy)"
      ]
    },
    "1050": {
      "op": "==",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%9#0"
      ]
    },
    "1051": {
      "op": "bz pluginCallAllowed_after_if_else@6",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1054": {
      "block": "pluginCallAllowed_if_body@5",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "methodAllowed#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "methodAllowed#0"
      ]
    },
    "1055": {
      "op": "frame_bury 4",
      "defined_out": [
        "methodAllowed#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1057": {
      "block": "pluginCallAllowed_block@8",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "\"p\""
      ]
    },
    "1058": {
      "op": "frame_dig 5",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "1060": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%10#0"
      ]
    },
    "1061": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1062": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "key#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0"
      ]
    },
    "1063": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "p#0"
      ]
    },
    "1064": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0"
      ]
    },
    "1066": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "key#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "225"
      ]
    },
    "1068": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "key#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "is_true%0#0"
      ]
    },
    "1069": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "key#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1070": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1071": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1073": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "key#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "encoded_bool%0#0"
      ]
    },
    "1074": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1075": {
      "op": "getbit",
      "defined_out": [
        "key#0",
        "p#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%11#0"
      ]
    },
    "1076": {
      "op": "bz pluginCallAllowed_ternary_false@10",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1079": {
      "block": "pluginCallAllowed_ternary_true@9",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "ternary_result%0#0"
      ]
    },
    "1081": {
      "block": "pluginCallAllowed_ternary_merge@11",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "ternary_result%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0",
        "epochRef#0"
      ]
    },
    "1082": {
      "op": "frame_bury 2",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0"
      ]
    },
    "1084": {
      "op": "frame_dig 1",
      "defined_out": [
        "epochRef#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0",
        "p#0"
      ]
    },
    "1086": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "epochRef#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0",
        "p#0",
        "29"
      ]
    },
    "1088": {
      "op": "intc_2 // 8",
      "defined_out": [
        "29",
        "8",
        "epochRef#0",
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0",
        "p#0",
        "29",
        "8"
      ]
    },
    "1089": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0",
        "tmp%12#0"
      ]
    },
    "1090": {
      "op": "btoi",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "epochRef#0",
        "tmp%13#0"
      ]
    },
    "1091": {
      "op": "<=",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%14#0"
      ]
    },
    "1092": {
      "op": "bz pluginCallAllowed_bool_false@14",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1095": {
      "block": "pluginCallAllowed_and_contd@12",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "p#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0"
      ]
    },
    "1097": {
      "op": "dup",
      "defined_out": [
        "p#0",
        "p#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "p#0 (copy)"
      ]
    },
    "1098": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "p#0",
        "p#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "p#0 (copy)",
        "29"
      ]
    },
    "1100": {
      "op": "intc_2 // 8",
      "defined_out": [
        "29",
        "8",
        "p#0",
        "p#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "p#0 (copy)",
        "29",
        "8"
      ]
    },
    "1101": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "p#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "tmp%15#0"
      ]
    },
    "1102": {
      "op": "btoi",
      "defined_out": [
        "p#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "tmp%16#0"
      ]
    },
    "1103": {
      "op": "frame_dig 2",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "tmp%16#0",
        "epochRef#0"
      ]
    },
    "1105": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "epochRef#0",
        "tmp%16#0"
      ]
    },
    "1106": {
      "op": "-",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "p#0",
        "tmp%17#0"
      ]
    },
    "1107": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%17#0",
        "p#0"
      ]
    },
    "1108": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "epochRef#0",
        "p#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%17#0",
        "p#0",
        "18"
      ]
    },
    "1110": {
      "op": "intc_2 // 8",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%17#0",
        "p#0",
        "18",
        "8"
      ]
    },
    "1111": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1112": {
      "op": "btoi",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "1113": {
      "op": ">=",
      "defined_out": [
        "epochRef#0",
        "p#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%20#0"
      ]
    },
    "1114": {
      "op": "bz pluginCallAllowed_bool_false@14",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1117": {
      "block": "pluginCallAllowed_bool_true@13",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "and_result%0#0"
      ]
    },
    "1118": {
      "block": "pluginCallAllowed_bool_merge@15",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "and_result%0#0",
        "methodAllowed#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "and_result%0#0",
        "methodAllowed#0"
      ]
    },
    "1120": {
      "op": "&&",
      "defined_out": [
        "methodAllowed#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "tmp%21#0"
      ]
    },
    "1121": {
      "op": "frame_bury 0"
    },
    "1123": {
      "retsub": true,
      "op": "retsub"
    },
    "1124": {
      "block": "pluginCallAllowed_bool_false@14",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "and_result%0#0"
      ]
    },
    "1125": {
      "op": "b pluginCallAllowed_bool_merge@15"
    },
    "1128": {
      "block": "pluginCallAllowed_ternary_false@10",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "ternary_result%0#0"
      ]
    },
    "1130": {
      "op": "b pluginCallAllowed_ternary_merge@11"
    },
    "1133": {
      "block": "pluginCallAllowed_after_if_else@6",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "i#0"
      ]
    },
    "1135": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "i#0",
        "1"
      ]
    },
    "1136": {
      "op": "+",
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0",
        "i#0"
      ]
    },
    "1137": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ]
    },
    "1139": {
      "op": "b pluginCallAllowed_while_top@3"
    },
    "1142": {
      "block": "pluginCallAllowed_after_while@7",
      "stack_in": [
        "methods#0",
        "p#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "key#0"
      ],
      "op": "b pluginCallAllowed_block@8"
    },
    "1145": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.txnRekeysBack",
      "params": {
        "txn#0": "uint64"
      },
      "block": "txnRekeysBack",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1148": {
      "block": "txnRekeysBack_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1150": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1152": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1153": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "1155": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1156": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1157": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1158": {
      "op": "bz txnRekeysBack_after_if_else@3",
      "stack_out": []
    },
    "1161": {
      "block": "txnRekeysBack_and_contd@1",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1163": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1165": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1167": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1168": {
      "op": "bz txnRekeysBack_after_if_else@3",
      "stack_out": []
    },
    "1171": {
      "block": "txnRekeysBack_if_body@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1172": {
      "retsub": true,
      "op": "retsub"
    },
    "1173": {
      "block": "txnRekeysBack_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1175": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1177": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "6"
      ]
    },
    "1179": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1180": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1183": {
      "block": "txnRekeysBack_and_contd@4",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1185": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1187": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1189": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1190": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1193": {
      "block": "txnRekeysBack_and_contd@5",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1195": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1197": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "1"
      ]
    },
    "1198": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1199": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1202": {
      "block": "txnRekeysBack_and_contd@6",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1204": {
      "op": "gtxns OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1206": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "1207": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1208": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1211": {
      "block": "txnRekeysBack_and_contd@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1213": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "1214": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1216": {
      "op": "bytec 10 // method \"arc58_verifyAuthAddr()void\"",
      "defined_out": [
        "Method(arc58_verifyAuthAddr()void)",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "Method(arc58_verifyAuthAddr()void)"
      ]
    },
    "1218": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1219": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1222": {
      "block": "txnRekeysBack_bool_true@8",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1223": {
      "block": "txnRekeysBack_bool_merge@10",
      "stack_in": [
        "and_result%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "1224": {
      "block": "txnRekeysBack_bool_false@9",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1225": {
      "op": "b txnRekeysBack_bool_merge@10"
    },
    "1228": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertRekeysBack",
      "params": {},
      "block": "assertRekeysBack",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1231": {
      "block": "assertRekeysBack_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0"
      ]
    },
    "1232": {
      "op": "txn GroupIndex",
      "defined_out": [
        "rekeysBack#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "tmp%0#0"
      ]
    },
    "1234": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "rekeysBack#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1235": {
      "op": "+",
      "defined_out": [
        "i#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1236": {
      "block": "assertRekeysBack_while_top@1",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1238": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1240": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1241": {
      "op": "bz assertRekeysBack_after_while@5",
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1244": {
      "block": "assertRekeysBack_while_body@2",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "txn#0"
      ]
    },
    "1246": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.txnRekeysBack",
      "op": "callsub txnRekeysBack",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1249": {
      "op": "bz assertRekeysBack_after_if_else@4",
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1252": {
      "block": "assertRekeysBack_if_body@3",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "rekeysBack#0"
      ]
    },
    "1253": {
      "op": "frame_bury 0",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1255": {
      "block": "assertRekeysBack_block@6",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "rekeysBack#0"
      ]
    },
    "1257": {
      "error": "missing rekey back",
      "op": "assert // missing rekey back",
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1258": {
      "retsub": true,
      "op": "retsub"
    },
    "1259": {
      "block": "assertRekeysBack_after_if_else@4",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "i#0"
      ]
    },
    "1261": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1262": {
      "op": "+",
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "i#0"
      ]
    },
    "1263": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1265": {
      "op": "b assertRekeysBack_while_top@1"
    },
    "1268": {
      "block": "assertRekeysBack_after_while@5",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "b assertRekeysBack_block@6"
    },
    "1271": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCheck",
      "params": {
        "key#0": "bytes"
      },
      "block": "pluginCheck",
      "stack_in": [],
      "op": "proto 1 7"
    },
    "1274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0"
      ]
    },
    "1275": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "pluginInfo#0",
        "expired#0"
      ]
    },
    "1276": {
      "op": "dupn 3",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0"
      ]
    },
    "1278": {
      "block": "pluginCheck_block@0",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0"
      ],
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "\"p\""
      ]
    },
    "1279": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1281": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "tmp%0#0"
      ]
    },
    "1282": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1283": {
      "op": "bury 1",
      "defined_out": [
        "exists#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1285": {
      "op": "dup",
      "defined_out": [
        "exists#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "exists#0"
      ]
    },
    "1286": {
      "op": "bnz pluginCheck_after_if_else@2",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1289": {
      "block": "pluginCheck_if_body@1",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0"
      ]
    },
    "1290": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0",
        "1"
      ]
    },
    "1291": {
      "op": "dupn 2",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1"
      ]
    },
    "1293": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1",
        "0"
      ]
    },
    "1294": {
      "op": "dup",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1",
        "0",
        "0"
      ]
    },
    "1295": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "1",
        "key#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1",
        "0",
        "0",
        "key#0 (copy)"
      ]
    },
    "1297": {
      "op": "uncover 12"
    },
    "1299": {
      "op": "uncover 12"
    },
    "1301": {
      "op": "uncover 12"
    },
    "1303": {
      "op": "uncover 12"
    },
    "1305": {
      "op": "uncover 12"
    },
    "1307": {
      "op": "uncover 12"
    },
    "1309": {
      "retsub": true,
      "op": "retsub"
    },
    "1310": {
      "block": "pluginCheck_after_if_else@2",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "\"p\""
      ]
    },
    "1311": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1313": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "tmp%1#0"
      ]
    },
    "1314": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1315": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0"
      ]
    },
    "1316": {
      "op": "dup",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "pluginInfo#0"
      ]
    },
    "1317": {
      "op": "frame_bury 0",
      "defined_out": [
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0"
      ]
    },
    "1319": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "225"
      ]
    },
    "1321": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "is_true%0#0"
      ]
    },
    "1322": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1324": {
      "op": "uncover 2",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1326": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "encoded_bool%0#0"
      ]
    },
    "1327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1328": {
      "op": "getbit",
      "defined_out": [
        "pluginInfo#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "tmp%2#0"
      ]
    },
    "1329": {
      "op": "bz pluginCheck_ternary_false@4",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1332": {
      "block": "pluginCheck_ternary_true@3",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "ternary_result%0#0"
      ]
    },
    "1334": {
      "block": "pluginCheck_ternary_merge@5",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "ternary_result%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "pluginInfo#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "ternary_result%0#0",
        "pluginInfo#0"
      ]
    },
    "1336": {
      "op": "dup",
      "defined_out": [
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "pluginInfo#0 (copy)"
      ]
    },
    "1337": {
      "op": "cover 2",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "1339": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "10"
      ]
    },
    "1341": {
      "op": "intc_2 // 8",
      "defined_out": [
        "10",
        "8",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "10",
        "8"
      ]
    },
    "1342": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%3#0"
      ]
    },
    "1343": {
      "op": "btoi",
      "defined_out": [
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%4#0"
      ]
    },
    "1344": {
      "op": "dig 1",
      "defined_out": [
        "epochRef#0 (copy)",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%4#0",
        "epochRef#0 (copy)"
      ]
    },
    "1346": {
      "op": "<",
      "defined_out": [
        "expired#0",
        "pluginInfo#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "expired#0"
      ]
    },
    "1347": {
      "op": "frame_bury 1",
      "defined_out": [
        "expired#0",
        "pluginInfo#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0"
      ]
    },
    "1349": {
      "op": "dig 1",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "1351": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "expired#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "18"
      ]
    },
    "1353": {
      "op": "intc_2 // 8",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "18",
        "8"
      ]
    },
    "1354": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expired#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%5#0"
      ]
    },
    "1355": {
      "op": "btoi",
      "defined_out": [
        "expired#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%6#0"
      ]
    },
    "1356": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%6#0",
        "0"
      ]
    },
    "1357": {
      "op": ">",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "hasCooldown#0"
      ]
    },
    "1358": {
      "op": "frame_bury 2",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0"
      ]
    },
    "1360": {
      "op": "dig 1",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "1362": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "29"
      ]
    },
    "1364": {
      "op": "intc_2 // 8",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "pluginInfo#0 (copy)",
        "29",
        "8"
      ]
    },
    "1365": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "ternary_result%0#0",
        "tmp%7#0"
      ]
    },
    "1366": {
      "op": "btoi",
      "defined_out": [
        "epochRef#0",
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "epochRef#0",
        "tmp%8#0"
      ]
    },
    "1367": {
      "op": "-",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "tmp%9#0"
      ]
    },
    "1368": {
      "op": "dig 1",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "tmp%9#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "1370": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "tmp%9#0",
        "pluginInfo#0 (copy)",
        "18"
      ]
    },
    "1372": {
      "op": "intc_2 // 8",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "tmp%9#0",
        "pluginInfo#0 (copy)",
        "18",
        "8"
      ]
    },
    "1373": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1374": {
      "op": "btoi",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1375": {
      "op": "<",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "onCooldown#0"
      ]
    },
    "1376": {
      "op": "frame_bury 4",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0"
      ]
    },
    "1378": {
      "op": "dup",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "1379": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "26"
      ]
    },
    "1381": {
      "op": "extract_uint16",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "item_start_offset%0#0",
        "onCooldown#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "item_start_offset%0#0"
      ]
    },
    "1382": {
      "op": "swap",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "item_start_offset%0#0",
        "pluginInfo#0"
      ]
    },
    "1383": {
      "op": "dup",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "item_start_offset%0#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "1384": {
      "op": "len",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "onCooldown#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "item_start_offset%0#0",
        "pluginInfo#0",
        "item_end_offset%0#0"
      ]
    },
    "1385": {
      "op": "swap",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "pluginInfo#0"
      ]
    },
    "1386": {
      "op": "uncover 2",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "item_end_offset%0#0",
        "pluginInfo#0",
        "item_start_offset%0#0"
      ]
    },
    "1388": {
      "op": "uncover 2",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "pluginInfo#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1390": {
      "op": "substring3",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "tmp%12#0"
      ]
    },
    "1391": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "tmp%12#0",
        "0"
      ]
    },
    "1392": {
      "op": "extract_uint16",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "tmp%13#0"
      ]
    },
    "1393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "tmp%13#0",
        "0"
      ]
    },
    "1394": {
      "op": ">",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "hasMethodRestrictions#0"
      ]
    },
    "1395": {
      "op": "frame_bury 3",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1397": {
      "op": "frame_dig 5",
      "defined_out": [
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "exists#0"
      ]
    },
    "1399": {
      "op": "bz pluginCheck_bool_false@9",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1402": {
      "block": "pluginCheck_and_contd@6",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "expired#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "expired#0"
      ]
    },
    "1404": {
      "op": "bnz pluginCheck_bool_false@9",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1407": {
      "block": "pluginCheck_and_contd@7",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "onCooldown#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "onCooldown#0"
      ]
    },
    "1409": {
      "op": "bnz pluginCheck_bool_false@9",
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ]
    },
    "1412": {
      "block": "pluginCheck_bool_true@8",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0"
      ]
    },
    "1413": {
      "block": "pluginCheck_bool_merge@10",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "and_result%0#0",
        "exists#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0",
        "exists#0"
      ]
    },
    "1415": {
      "op": "frame_dig 1",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0"
      ]
    },
    "1417": {
      "op": "frame_dig 2",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0"
      ]
    },
    "1419": {
      "op": "frame_dig 4",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0"
      ]
    },
    "1421": {
      "op": "frame_dig 3",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "hasMethodRestrictions#0"
      ]
    },
    "1423": {
      "op": "uncover 5",
      "defined_out": [
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "valid#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "hasMethodRestrictions#0",
        "valid#0"
      ]
    },
    "1425": {
      "op": "frame_dig -1",
      "defined_out": [
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "key#0 (copy)",
        "onCooldown#0",
        "valid#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "hasMethodRestrictions#0",
        "valid#0",
        "key#0 (copy)"
      ]
    },
    "1427": {
      "op": "uncover 12"
    },
    "1429": {
      "op": "uncover 12"
    },
    "1431": {
      "op": "uncover 12"
    },
    "1433": {
      "op": "uncover 12"
    },
    "1435": {
      "op": "uncover 12"
    },
    "1437": {
      "op": "uncover 12"
    },
    "1439": {
      "retsub": true,
      "op": "retsub"
    },
    "1440": {
      "block": "pluginCheck_bool_false@9",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "and_result%0#0"
      ]
    },
    "1441": {
      "op": "b pluginCheck_bool_merge@10"
    },
    "1444": {
      "block": "pluginCheck_ternary_false@4",
      "stack_in": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "exists#0",
        "ternary_result%0#0"
      ]
    },
    "1446": {
      "op": "b pluginCheck_ternary_merge@5"
    },
    "1449": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.fullPluginCheck",
      "params": {
        "key#0": "bytes",
        "txn#0": "uint64",
        "methodOffsets#0": "bytes",
        "methodIndex#0": "uint64"
      },
      "block": "fullPluginCheck",
      "stack_in": [],
      "op": "proto 4 11"
    },
    "1452": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#8"
      ]
    },
    "1453": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "key#8",
        "check.exists#0"
      ]
    },
    "1454": {
      "op": "dupn 11",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0"
      ]
    },
    "1456": {
      "block": "fullPluginCheck_block@0",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "key#0 (copy)"
      ]
    },
    "1458": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCheck",
      "op": "callsub pluginCheck",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ]
    },
    "1461": {
      "op": "cover 6",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0"
      ]
    },
    "1463": {
      "op": "cover 6",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0"
      ]
    },
    "1465": {
      "op": "cover 5",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0"
      ]
    },
    "1467": {
      "op": "cover 4",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0"
      ]
    },
    "1469": {
      "op": "cover 3",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0"
      ]
    },
    "1471": {
      "op": "cover 2",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0"
      ]
    },
    "1473": {
      "op": "swap",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "pluginCheck%6#0"
      ]
    },
    "1474": {
      "op": "frame_bury -4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1476": {
      "op": "intc_1 // 1",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "1"
      ]
    },
    "1477": {
      "op": "bz fullPluginCheck_after_if_else@2",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1480": {
      "block": "fullPluginCheck_after_if_else@2",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 18",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0"
      ]
    },
    "1482": {
      "op": "frame_bury 1",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1484": {
      "op": "frame_dig 17",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.expired#0"
      ]
    },
    "1486": {
      "op": "frame_bury 2",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1488": {
      "op": "frame_dig 16",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasCooldown#0"
      ]
    },
    "1490": {
      "op": "frame_bury 3",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1492": {
      "op": "frame_dig 15",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.onCooldown#0"
      ]
    },
    "1494": {
      "op": "frame_bury 5",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1496": {
      "op": "frame_dig 14",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1498": {
      "op": "frame_bury 4",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1500": {
      "op": "frame_dig 13",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0"
      ]
    },
    "1502": {
      "op": "dup",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0",
        "check.valid#0"
      ]
    },
    "1503": {
      "op": "frame_bury 6",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0"
      ]
    },
    "1505": {
      "op": "bnz fullPluginCheck_after_if_else@4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1508": {
      "block": "fullPluginCheck_if_body@3",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0"
      ]
    },
    "1510": {
      "op": "frame_dig 2",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0"
      ]
    },
    "1512": {
      "op": "frame_dig 3",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ]
    },
    "1514": {
      "op": "frame_dig 5",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ]
    },
    "1516": {
      "op": "frame_dig 4",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1518": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0"
      ]
    },
    "1519": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1"
      ]
    },
    "1520": {
      "op": "dup",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1"
      ]
    },
    "1521": {
      "op": "frame_dig 6",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1",
        "check.valid#0"
      ]
    },
    "1523": {
      "op": "frame_dig -4",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1",
        "check.valid#0",
        "key#0 (copy)"
      ]
    },
    "1525": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "key#0 (copy)",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1",
        "check.valid#0",
        "key#0 (copy)",
        "methodOffsets#0 (copy)"
      ]
    },
    "1527": {
      "op": "frame_bury 10"
    },
    "1529": {
      "op": "frame_bury 9"
    },
    "1531": {
      "op": "frame_bury 8"
    },
    "1533": {
      "op": "frame_bury 7"
    },
    "1535": {
      "op": "frame_bury 6"
    },
    "1537": {
      "op": "frame_bury 5"
    },
    "1539": {
      "op": "frame_bury 4"
    },
    "1541": {
      "op": "frame_bury 3"
    },
    "1543": {
      "op": "frame_bury 2"
    },
    "1545": {
      "op": "frame_bury 1"
    },
    "1547": {
      "op": "frame_bury 0"
    },
    "1549": {
      "retsub": true,
      "op": "retsub"
    },
    "1550": {
      "block": "fullPluginCheck_after_if_else@4",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "check.hasMethodRestrictions#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1552": {
      "op": "dup",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "check.hasMethodRestrictions#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "check.hasMethodRestrictions#0 (copy)"
      ]
    },
    "1553": {
      "op": "!",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1554": {
      "op": "frame_bury 7",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1556": {
      "op": "intc_0 // 0",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodHasCooldown#0"
      ]
    },
    "1557": {
      "op": "frame_bury 8",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1559": {
      "op": "intc_0 // 0",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodOnCooldown#0"
      ]
    },
    "1560": {
      "op": "frame_bury 9",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1562": {
      "op": "frame_dig -4",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "key#8"
      ]
    },
    "1564": {
      "op": "frame_bury 0",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1566": {
      "op": "bz fullPluginCheck_after_if_else@8",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1569": {
      "block": "fullPluginCheck_if_body@5",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "1571": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodOffsets#0 (copy)",
        "0"
      ]
    },
    "1572": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%1#0"
      ]
    },
    "1573": {
      "op": "frame_dig -1",
      "defined_out": [
        "methodIndex#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%1#0",
        "methodIndex#0 (copy)"
      ]
    },
    "1575": {
      "op": ">",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%2#0"
      ]
    },
    "1576": {
      "error": "malformed method offsets",
      "op": "assert // malformed method offsets",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1577": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "1579": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1582": {
      "op": "frame_dig -1",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "methodIndex#0 (copy)"
      ]
    },
    "1584": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "methodIndex#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "methodIndex#0 (copy)",
        "8"
      ]
    },
    "1585": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1586": {
      "op": "intc_2 // 8",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "1587": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%3#0"
      ]
    },
    "1588": {
      "op": "btoi",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%4#0"
      ]
    },
    "1589": {
      "op": "frame_dig -4",
      "defined_out": [
        "key#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%4#0",
        "key#0 (copy)"
      ]
    },
    "1591": {
      "op": "frame_dig -3",
      "defined_out": [
        "key#0 (copy)",
        "tmp%4#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%4#0",
        "key#0 (copy)",
        "txn#0 (copy)"
      ]
    },
    "1593": {
      "op": "uncover 2",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "key#0 (copy)",
        "txn#0 (copy)",
        "tmp%4#0"
      ]
    },
    "1595": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.methodCheck",
      "op": "callsub methodCheck",
      "defined_out": [
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ]
    },
    "1598": {
      "op": "cover 3",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0"
      ]
    },
    "1600": {
      "op": "frame_bury 12",
      "defined_out": [
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0",
        "methodCheck%0#0",
        "methodCheck%1#0"
      ]
    },
    "1602": {
      "op": "frame_bury 11",
      "defined_out": [
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0",
        "methodCheck%0#0"
      ]
    },
    "1604": {
      "op": "frame_bury 10",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0"
      ]
    },
    "1606": {
      "op": "frame_bury -4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1608": {
      "op": "intc_1 // 1",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "1"
      ]
    },
    "1609": {
      "op": "bz fullPluginCheck_after_if_else@7",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1612": {
      "block": "fullPluginCheck_after_if_else@7",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1614": {
      "op": "frame_bury 7",
      "defined_out": [
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1616": {
      "op": "frame_dig 11",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodHasCooldown#0"
      ]
    },
    "1618": {
      "op": "frame_bury 8",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1620": {
      "op": "frame_dig 12",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodOnCooldown#0"
      ]
    },
    "1622": {
      "op": "frame_bury 9",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1624": {
      "op": "frame_dig -4",
      "defined_out": [
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "key#8"
      ]
    },
    "1626": {
      "op": "frame_bury 0",
      "defined_out": [
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1628": {
      "block": "fullPluginCheck_after_if_else@8",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "key#8"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "key#8"
      ]
    },
    "1630": {
      "op": "frame_bury -4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1632": {
      "op": "frame_dig 6",
      "defined_out": [
        "check.valid#0",
        "key#8"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0"
      ]
    },
    "1634": {
      "op": "bz fullPluginCheck_bool_false@11",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1637": {
      "block": "fullPluginCheck_and_contd@9",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1639": {
      "op": "bz fullPluginCheck_bool_false@11",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1642": {
      "block": "fullPluginCheck_bool_true@10",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0"
      ]
    },
    "1643": {
      "block": "fullPluginCheck_bool_merge@12",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0"
      ]
    },
    "1645": {
      "op": "frame_dig 2",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0"
      ]
    },
    "1647": {
      "op": "frame_dig 3",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ]
    },
    "1649": {
      "op": "frame_dig 5",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ]
    },
    "1651": {
      "op": "frame_dig 4",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1653": {
      "op": "frame_dig 7",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1655": {
      "op": "frame_dig 8",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ]
    },
    "1657": {
      "op": "frame_dig 9",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ]
    },
    "1659": {
      "op": "uncover 8",
      "defined_out": [
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "and_result%0#0"
      ]
    },
    "1661": {
      "op": "frame_dig -4",
      "defined_out": [
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "key#0 (copy)",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "and_result%0#0",
        "key#0 (copy)"
      ]
    },
    "1663": {
      "op": "frame_dig -2",
      "defined_out": [
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "key#0 (copy)",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "and_result%0#0",
        "key#0 (copy)",
        "methodOffsets#0 (copy)"
      ]
    },
    "1665": {
      "op": "frame_bury 10"
    },
    "1667": {
      "op": "frame_bury 9"
    },
    "1669": {
      "op": "frame_bury 8"
    },
    "1671": {
      "op": "frame_bury 7"
    },
    "1673": {
      "op": "frame_bury 6"
    },
    "1675": {
      "op": "frame_bury 5"
    },
    "1677": {
      "op": "frame_bury 4"
    },
    "1679": {
      "op": "frame_bury 3"
    },
    "1681": {
      "op": "frame_bury 2"
    },
    "1683": {
      "op": "frame_bury 1"
    },
    "1685": {
      "op": "frame_bury 0"
    },
    "1687": {
      "retsub": true,
      "op": "retsub"
    },
    "1688": {
      "block": "fullPluginCheck_bool_false@11",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0"
      ]
    },
    "1689": {
      "op": "b fullPluginCheck_bool_merge@12"
    },
    "1692": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertValidGroup",
      "params": {
        "key#0": "bytes",
        "methodOffsets#0": "bytes"
      },
      "block": "assertValidGroup",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "1695": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0"
      ]
    },
    "1696": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0"
      ]
    },
    "1697": {
      "op": "dupn 11",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0"
      ]
    },
    "1699": {
      "block": "assertValidGroup_block@0",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0"
      ]
    },
    "1701": {
      "op": "frame_dig -1",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1703": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "\"p\""
      ]
    },
    "1704": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1706": {
      "op": "concat",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%0#0"
      ]
    },
    "1707": {
      "op": "box_get",
      "defined_out": [
        "key%out#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1708": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "maybe_value%0#0"
      ]
    },
    "1709": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "key%out#0",
        "maybe_value%0#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "maybe_value%0#0",
        "225"
      ]
    },
    "1711": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "is_true%0#0"
      ]
    },
    "1712": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1713": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1714": {
      "op": "uncover 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1716": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "encoded_bool%0#0"
      ]
    },
    "1717": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1718": {
      "op": "getbit",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%1#0"
      ]
    },
    "1719": {
      "op": "bz assertValidGroup_ternary_false@2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1722": {
      "block": "assertValidGroup_ternary_true@1",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "ternary_result%0#0"
      ]
    },
    "1724": {
      "block": "assertValidGroup_ternary_merge@3",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "ternary_result%0#0"
      ],
      "op": "frame_bury 1",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1726": {
      "op": "frame_dig -2",
      "defined_out": [
        "epochRef#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)"
      ]
    },
    "1728": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCheck",
      "op": "callsub pluginCheck",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ]
    },
    "1731": {
      "op": "cover 6",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0"
      ]
    },
    "1733": {
      "op": "popn 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0"
      ]
    },
    "1735": {
      "op": "frame_bury 10",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0"
      ]
    },
    "1737": {
      "op": "frame_bury 9",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0"
      ]
    },
    "1739": {
      "op": "frame_bury 8",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0"
      ]
    },
    "1741": {
      "op": "frame_bury 7",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0"
      ]
    },
    "1743": {
      "op": "frame_bury -2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1745": {
      "op": "intc_1 // 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "1"
      ]
    },
    "1746": {
      "op": "bz assertValidGroup_after_if_else@5",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1749": {
      "block": "assertValidGroup_if_body@4",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0"
      ]
    },
    "1751": {
      "op": "frame_bury 13",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1753": {
      "block": "assertValidGroup_after_if_else@5",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "initialCheck.exists#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.exists#0"
      ]
    },
    "1755": {
      "op": "frame_dig 8",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.exists#0",
        "initialCheck.expired#0"
      ]
    },
    "1757": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0"
      ]
    },
    "1758": {
      "op": "frame_dig 9",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0",
        "initialCheck.hasCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0",
        "initialCheck.hasCooldown#0"
      ]
    },
    "1760": {
      "op": "frame_bury 5",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0",
        "initialCheck.hasCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0"
      ]
    },
    "1762": {
      "op": "frame_dig 10",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0",
        "initialCheck.hasCooldown#0",
        "initialCheck.onCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0",
        "initialCheck.onCooldown#0"
      ]
    },
    "1764": {
      "op": "cover 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0"
      ]
    },
    "1766": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0",
        "initialCheck.expired#0"
      ]
    },
    "1767": {
      "op": "!",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "initialCheck.onCooldown#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0",
        "tmp%2#0"
      ]
    },
    "1768": {
      "error": "plugin expired",
      "op": "assert // plugin expired",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0"
      ]
    },
    "1769": {
      "op": "!",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%3#0"
      ]
    },
    "1770": {
      "error": "plugin on cooldown",
      "op": "assert // plugin on cooldown",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1771": {
      "op": "intc_0 // 0",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ]
    },
    "1772": {
      "op": "frame_bury 11",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1774": {
      "op": "intc_0 // 0",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0"
      ]
    },
    "1775": {
      "op": "frame_bury 6",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1777": {
      "op": "txn GroupIndex",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%4#0"
      ]
    },
    "1779": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%4#0",
        "1"
      ]
    },
    "1780": {
      "op": "+",
      "defined_out": [
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0"
      ]
    },
    "1781": {
      "op": "frame_bury 4",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1783": {
      "block": "assertValidGroup_while_top@6",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%5#0"
      ]
    },
    "1785": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%5#0",
        "i#0"
      ]
    },
    "1787": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%6#0"
      ]
    },
    "1788": {
      "op": "bz assertValidGroup_after_while@19",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1791": {
      "block": "assertValidGroup_while_body@7",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1793": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0"
      ]
    },
    "1794": {
      "op": "frame_bury 12",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1796": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.txnRekeysBack",
      "op": "callsub txnRekeysBack",
      "defined_out": [
        "tmp%7#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%7#0"
      ]
    },
    "1799": {
      "op": "bz assertValidGroup_after_if_else@9",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1802": {
      "block": "assertValidGroup_if_body@8",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ]
    },
    "1803": {
      "op": "frame_bury 11",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1805": {
      "block": "assertValidGroup_block@20",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ]
    },
    "1807": {
      "error": "missing rekey back",
      "op": "assert // missing rekey back",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1808": {
      "op": "frame_dig 13",
      "defined_out": [
        "key%out#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0"
      ]
    },
    "1810": {
      "op": "frame_dig 14",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1812": {
      "op": "frame_bury 1"
    },
    "1814": {
      "op": "frame_bury 0"
    },
    "1816": {
      "retsub": true,
      "op": "retsub"
    },
    "1817": {
      "block": "assertValidGroup_after_if_else@9",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1819": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "tmp%8#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%8#0"
      ]
    },
    "1821": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%8#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%8#0",
        "6"
      ]
    },
    "1823": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%9#0"
      ]
    },
    "1824": {
      "op": "bz assertValidGroup_after_if_else@11",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1827": {
      "block": "assertValidGroup_block@18",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0"
      ]
    },
    "1829": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0",
        "1"
      ]
    },
    "1830": {
      "op": "+",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0"
      ]
    },
    "1831": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1833": {
      "op": "b assertValidGroup_while_top@6"
    },
    "1836": {
      "block": "assertValidGroup_after_if_else@11",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1838": {
      "op": "dup",
      "defined_out": [
        "txn#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1839": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0"
      ]
    },
    "1841": {
      "op": "frame_dig -2",
      "defined_out": [
        "key#0 (copy)",
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "key#0 (copy)"
      ]
    },
    "1843": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0 (copy)",
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "key#0 (copy)",
        "0"
      ]
    },
    "1844": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "key#0 (copy)",
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "key#0 (copy)",
        "0",
        "8"
      ]
    },
    "1845": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1846": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1847": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%13#0"
      ]
    },
    "1848": {
      "error": "cannot call other apps during rekey",
      "op": "assert // cannot call other apps during rekey",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1849": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1850": {
      "op": "gtxns OnCompletion",
      "defined_out": [
        "tmp%14#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%14#0"
      ]
    },
    "1852": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%14#0",
        "0"
      ]
    },
    "1853": {
      "op": "==",
      "defined_out": [
        "tmp%15#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%15#0"
      ]
    },
    "1854": {
      "error": "invalid oncomplete must be no op",
      "op": "assert // invalid oncomplete must be no op",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1855": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1856": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "tmp%16#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%16#0"
      ]
    },
    "1858": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%16#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1859": {
      "op": ">",
      "defined_out": [
        "tmp%17#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%17#0"
      ]
    },
    "1860": {
      "error": "invalid sender must be this app id",
      "op": "assert // invalid sender must be this app id",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1861": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1862": {
      "op": "intc_1 // 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)",
        "1"
      ]
    },
    "1863": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%18#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%18#0"
      ]
    },
    "1865": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%19#0"
      ]
    },
    "1866": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1868": {
      "op": "==",
      "defined_out": [
        "tmp%21#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%21#0"
      ]
    },
    "1869": {
      "error": "invalid sender app id",
      "op": "assert // invalid sender app id",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1870": {
      "op": "frame_dig -2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "key#0 (copy)"
      ]
    },
    "1872": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)",
        "txn#0"
      ]
    },
    "1873": {
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)",
        "methodOffsets#0 (copy)",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)",
        "txn#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "1875": {
      "op": "frame_dig 6",
      "defined_out": [
        "key#0 (copy)",
        "methodIndex#0",
        "methodOffsets#0 (copy)",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)",
        "txn#0",
        "methodOffsets#0 (copy)",
        "methodIndex#0"
      ]
    },
    "1877": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.fullPluginCheck",
      "op": "callsub fullPluginCheck",
      "defined_out": [
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "methodIndex#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "fullPluginCheck%10#0"
      ]
    },
    "1880": {
      "op": "cover 10",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0"
      ]
    },
    "1882": {
      "op": "frame_bury 0",
      "defined_out": [
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "methodIndex#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0"
      ]
    },
    "1884": {
      "op": "frame_bury 3",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0"
      ]
    },
    "1886": {
      "op": "frame_bury 2",
      "defined_out": [
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "methodIndex#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0"
      ]
    },
    "1888": {
      "op": "popn 7",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0"
      ]
    },
    "1890": {
      "op": "frame_bury -1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1892": {
      "op": "intc_1 // 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "1"
      ]
    },
    "1893": {
      "op": "bz assertValidGroup_after_if_else@13",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1896": {
      "block": "assertValidGroup_if_body@12",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1898": {
      "op": "frame_bury 14",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1900": {
      "block": "assertValidGroup_after_if_else@13",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "fullPluginCheck%9#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%9#0"
      ]
    },
    "1902": {
      "op": "frame_bury -2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1904": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "fullPluginCheck%9#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "1"
      ]
    },
    "1905": {
      "op": "bz assertValidGroup_after_if_else@15",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1908": {
      "block": "assertValidGroup_if_body@14",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0"
      ]
    },
    "1910": {
      "op": "frame_bury 13",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1912": {
      "block": "assertValidGroup_after_if_else@15",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "check.methodOnCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.methodOnCooldown#0"
      ]
    },
    "1914": {
      "op": "frame_dig 3",
      "defined_out": [
        "check.methodOnCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.methodOnCooldown#0",
        "check.valid#0"
      ]
    },
    "1916": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.valid#0",
        "check.methodOnCooldown#0"
      ]
    },
    "1917": {
      "op": "!",
      "defined_out": [
        "check.valid#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.valid#0",
        "tmp%22#0"
      ]
    },
    "1918": {
      "error": "method on cooldown",
      "op": "assert // method on cooldown",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.valid#0"
      ]
    },
    "1919": {
      "error": "invalid plugin call",
      "op": "assert // invalid plugin call",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1920": {
      "op": "frame_dig 5",
      "defined_out": [
        "initialCheck.hasCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.hasCooldown#0"
      ]
    },
    "1922": {
      "op": "bz assertValidGroup_after_if_else@17",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1925": {
      "block": "assertValidGroup_if_body@16",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "epochRef#0"
      ]
    },
    "1927": {
      "op": "itob",
      "defined_out": [
        "epochRef#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0"
      ]
    },
    "1928": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "epochRef#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "\"p\""
      ]
    },
    "1929": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"p\"",
        "epochRef#0",
        "key#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1931": {
      "op": "concat",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0"
      ]
    },
    "1932": {
      "op": "dup",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1933": {
      "op": "box_get",
      "defined_out": [
        "epochRef#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%23#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1934": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "maybe_value%1#0"
      ]
    },
    "1935": {
      "op": "uncover 2",
      "defined_out": [
        "assigned_value%0#0",
        "epochRef#0",
        "maybe_value%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "maybe_value%1#0",
        "assigned_value%0#0"
      ]
    },
    "1937": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "assigned_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "1938": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "assigned_value%0#0",
        "epochRef#0",
        "maybe_value%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "assigned_value%0#0",
        "maybe_value%1#0",
        "29"
      ]
    },
    "1940": {
      "op": "uncover 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "maybe_value%1#0",
        "29",
        "assigned_value%0#0"
      ]
    },
    "1942": {
      "op": "replace3",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0"
      ]
    },
    "1943": {
      "op": "dig 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1945": {
      "op": "box_del",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "1946": {
      "op": "pop",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0"
      ]
    },
    "1947": {
      "op": "box_put",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1948": {
      "block": "assertValidGroup_after_if_else@17",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "methodIndex#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0"
      ]
    },
    "1950": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "methodIndex#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0",
        "1"
      ]
    },
    "1951": {
      "op": "+",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0"
      ]
    },
    "1952": {
      "op": "frame_bury 6",
      "defined_out": [
        "methodIndex#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1954": {
      "op": "b assertValidGroup_block@18"
    },
    "1957": {
      "block": "assertValidGroup_after_while@19",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "b assertValidGroup_block@20"
    },
    "1960": {
      "block": "assertValidGroup_ternary_false@2",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "ternary_result%0#0"
      ]
    },
    "1962": {
      "op": "b assertValidGroup_ternary_merge@3"
    },
    "1965": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.methodCheck",
      "params": {
        "key#0": "bytes",
        "txn#0": "uint64",
        "offset#0": "uint64"
      },
      "block": "methodCheck",
      "stack_in": [],
      "op": "proto 3 4"
    },
    "1968": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "onCooldown#0"
      ]
    },
    "1969": {
      "block": "methodCheck_block@0",
      "stack_in": [
        "onCooldown#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)"
      ]
    },
    "1971": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)",
        "0"
      ]
    },
    "1972": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%0#0"
      ]
    },
    "1974": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%1#0"
      ]
    },
    "1975": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "tmp%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%1#0",
        "4"
      ]
    },
    "1976": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%2#0"
      ]
    },
    "1977": {
      "error": "invalid method signature length",
      "op": "assert // invalid method signature length",
      "stack_out": [
        "onCooldown#0"
      ]
    },
    "1978": {
      "op": "frame_dig -2",
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)"
      ]
    },
    "1980": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)",
        "0"
      ]
    },
    "1981": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0"
      ]
    },
    "1983": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1984": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "1985": {
      "op": "intc_3 // 4",
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "length%0#0",
        "4"
      ]
    },
    "1986": {
      "op": "==",
      "defined_out": [
        "lengths_equal%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "lengths_equal%0#0"
      ]
    },
    "1987": {
      "error": "invalid size",
      "op": "assert // invalid size",
      "defined_out": [
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0"
      ]
    },
    "1988": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "\"p\""
      ]
    },
    "1989": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1991": {
      "op": "concat",
      "defined_out": [
        "selectorArg#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "tmp%3#0"
      ]
    },
    "1992": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1993": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0"
      ]
    },
    "1994": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1995": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "26"
      ]
    },
    "1997": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "1998": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ]
    },
    "1999": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2000": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0"
      ]
    },
    "2001": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0"
      ]
    },
    "2002": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_end_offset%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "2004": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "2006": {
      "op": "substring3",
      "defined_out": [
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0"
      ]
    },
    "2007": {
      "op": "dup",
      "defined_out": [
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "methods#0"
      ]
    },
    "2008": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2011": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "methods#0",
        "offset#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "offset#0 (copy)"
      ]
    },
    "2013": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "array_head_and_tail%0#0",
        "methods#0",
        "offset#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "offset#0 (copy)",
        "20"
      ]
    },
    "2015": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2016": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "20"
      ]
    },
    "2018": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0"
      ]
    },
    "2019": {
      "op": "dup",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "allowedMethod#0"
      ]
    },
    "2020": {
      "op": "intc_3 // 4",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "allowedMethod#0",
        "4"
      ]
    },
    "2021": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "allowedMethod#0",
        "4",
        "8"
      ]
    },
    "2022": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "tmp%6#0"
      ]
    },
    "2023": {
      "op": "btoi",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "tmp%7#0"
      ]
    },
    "2024": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "tmp%7#0",
        "0"
      ]
    },
    "2025": {
      "op": ">",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0"
      ]
    },
    "2026": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "\"p\""
      ]
    },
    "2027": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2029": {
      "op": "concat",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "tmp%8#0"
      ]
    },
    "2030": {
      "op": "box_get",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2031": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0"
      ]
    },
    "2032": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0",
        "225"
      ]
    },
    "2034": {
      "op": "getbit",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0"
      ]
    },
    "2035": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2036": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2037": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2039": {
      "op": "setbit",
      "defined_out": [
        "allowedMethod#0",
        "encoded_bool%0#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "encoded_bool%0#0"
      ]
    },
    "2040": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2041": {
      "op": "getbit",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0",
        "useRounds#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2042": {
      "op": "dup",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0",
        "useRounds#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "useRounds#0"
      ]
    },
    "2043": {
      "op": "bz methodCheck_ternary_false@2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2046": {
      "block": "methodCheck_ternary_true@1",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0"
      ]
    },
    "2048": {
      "block": "methodCheck_ternary_merge@3",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "allowedMethod#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0",
        "allowedMethod#0"
      ]
    },
    "2050": {
      "op": "dup",
      "defined_out": [
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)",
        "allowedMethod#0 (copy)"
      ]
    },
    "2051": {
      "op": "cover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)"
      ]
    },
    "2053": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)",
        "12"
      ]
    },
    "2055": {
      "op": "intc_2 // 8",
      "defined_out": [
        "12",
        "8",
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)",
        "12",
        "8"
      ]
    },
    "2056": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "ternary_result%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "tmp%9#0"
      ]
    },
    "2057": {
      "op": "btoi",
      "defined_out": [
        "allowedMethod#0",
        "epochRef#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "epochRef#0",
        "tmp%10#0"
      ]
    },
    "2058": {
      "op": "-",
      "defined_out": [
        "allowedMethod#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0"
      ]
    },
    "2059": {
      "op": "dig 1",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "allowedMethod#0 (copy)"
      ]
    },
    "2061": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "allowedMethod#0 (copy)",
        "4"
      ]
    },
    "2062": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "allowedMethod#0 (copy)",
        "4",
        "8"
      ]
    },
    "2063": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2064": {
      "op": "btoi",
      "defined_out": [
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2065": {
      "op": "<",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "onCooldown#0"
      ]
    },
    "2066": {
      "op": "frame_bury 0",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0"
      ]
    },
    "2068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "0"
      ]
    },
    "2069": {
      "op": "intc_3 // 4",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "0",
        "4"
      ]
    },
    "2070": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%14#0"
      ]
    },
    "2071": {
      "op": "frame_dig 1",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0",
        "selectorArg#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%14#0",
        "selectorArg#0"
      ]
    },
    "2073": {
      "op": "==",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0",
        "selectorArg#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%15#0"
      ]
    },
    "2074": {
      "op": "bz methodCheck_after_if_else@12",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2077": {
      "block": "methodCheck_and_contd@4",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "hasCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "hasCooldown#0"
      ]
    },
    "2079": {
      "op": "bz methodCheck_if_body@6",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2082": {
      "block": "methodCheck_or_contd@5",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "onCooldown#0"
      ]
    },
    "2084": {
      "op": "bnz methodCheck_after_if_else@12",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2087": {
      "block": "methodCheck_if_body@6",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "hasCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "hasCooldown#0"
      ]
    },
    "2089": {
      "op": "bz methodCheck_after_if_else@11",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2092": {
      "block": "methodCheck_if_body@7",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "useRounds#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "useRounds#0"
      ]
    },
    "2094": {
      "op": "bz methodCheck_ternary_false@9",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2097": {
      "block": "methodCheck_ternary_true@8",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global Round",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "to_encode%1#0"
      ]
    },
    "2099": {
      "op": "itob",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0"
      ]
    },
    "2100": {
      "block": "methodCheck_ternary_merge@10",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "methods#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0",
        "methods#0"
      ]
    },
    "2102": {
      "op": "dup",
      "defined_out": [
        "methods#0",
        "methods#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0",
        "methods#0 (copy)",
        "methods#0 (copy)"
      ]
    },
    "2103": {
      "op": "cover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "methods#0 (copy)"
      ]
    },
    "2105": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "methods#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2108": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "methods#0",
        "offset#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "offset#0 (copy)"
      ]
    },
    "2110": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "array_head_and_tail%1#0",
        "methods#0",
        "offset#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "offset#0 (copy)",
        "20"
      ]
    },
    "2112": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "methods#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2113": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "20"
      ]
    },
    "2115": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%0#0",
        "methods#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "assigned_value%0#0",
        "tmp%16#0"
      ]
    },
    "2116": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "assigned_value%0#0",
        "methods#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "assigned_value%0#0",
        "tmp%16#0",
        "12"
      ]
    },
    "2118": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "tmp%16#0",
        "12",
        "assigned_value%0#0"
      ]
    },
    "2120": {
      "op": "replace3",
      "defined_out": [
        "assigned_value%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "assigned_value%1#0"
      ]
    },
    "2121": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0"
      ]
    },
    "2122": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "methods#0 (copy)"
      ]
    },
    "2123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "assigned_value%1#0",
        "methods#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "methods#0 (copy)",
        "0"
      ]
    },
    "2124": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "assigned_value%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "array_length%0#0"
      ]
    },
    "2125": {
      "op": "frame_dig -1",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "array_length%0#0",
        "offset#0 (copy)"
      ]
    },
    "2127": {
      "op": ">",
      "defined_out": [
        "assigned_value%1#0",
        "index_is_in_bounds%0#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "2128": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0"
      ]
    },
    "2129": {
      "op": "frame_dig -1",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "offset#0 (copy)"
      ]
    },
    "2131": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "offset#0 (copy)",
        "20"
      ]
    },
    "2133": {
      "op": "*",
      "defined_out": [
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ]
    },
    "2134": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0",
        "2"
      ]
    },
    "2136": {
      "op": "+",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ]
    },
    "2137": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "write_offset%0#0",
        "assigned_value%1#0"
      ]
    },
    "2139": {
      "op": "replace3",
      "defined_out": [
        "copy%2#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0"
      ]
    },
    "2140": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "copy%2#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "\"p\""
      ]
    },
    "2141": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"p\"",
        "copy%2#0",
        "key#0 (copy)",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2143": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "methods#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%17#0"
      ]
    },
    "2144": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2145": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "maybe_value%2#0"
      ]
    },
    "2146": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2147": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "is_true%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "is_true%1#0"
      ]
    },
    "2148": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "copy%2#0",
        "is_true%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "2149": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "2150": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "2152": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0"
      ]
    },
    "2153": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "\"p\""
      ]
    },
    "2154": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2156": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%18#0"
      ]
    },
    "2157": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2158": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0"
      ]
    },
    "2159": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2160": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "1",
        "1"
      ]
    },
    "2161": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0"
      ]
    },
    "2162": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "\"p\""
      ]
    },
    "2163": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2165": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "2166": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "methods#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2167": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0"
      ]
    },
    "2168": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0",
        "2"
      ]
    },
    "2170": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%4#0",
        "methods#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0",
        "2",
        "8"
      ]
    },
    "2171": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "2172": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "\"p\""
      ]
    },
    "2173": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2175": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2176": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2177": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0"
      ]
    },
    "2178": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%5#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0",
        "10"
      ]
    },
    "2180": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0",
        "10",
        "8"
      ]
    },
    "2181": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "2182": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "\"p\""
      ]
    },
    "2183": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2185": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2186": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2187": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0"
      ]
    },
    "2188": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%6#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0",
        "18"
      ]
    },
    "2190": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0",
        "18",
        "8"
      ]
    },
    "2191": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "2192": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "\"p\""
      ]
    },
    "2193": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2195": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "2196": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2197": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%7#0"
      ]
    },
    "2198": {
      "op": "pushint 224 // 224",
      "defined_out": [
        "224",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%7#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%7#0",
        "224"
      ]
    },
    "2201": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "is_true%2#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "is_true%2#0"
      ]
    },
    "2202": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "2203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "2204": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "2206": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0"
      ]
    },
    "2207": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "\"p\""
      ]
    },
    "2208": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2210": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "tmp%27#0"
      ]
    },
    "2211": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2212": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "maybe_value%8#0"
      ]
    },
    "2213": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "maybe_value%8#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "maybe_value%8#0",
        "225"
      ]
    },
    "2215": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "is_true%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "is_true%3#0"
      ]
    },
    "2216": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "is_true%3#0",
        "0x00"
      ]
    },
    "2217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "is_true%3#0",
        "0x00",
        "0"
      ]
    },
    "2218": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "0x00",
        "0",
        "is_true%3#0"
      ]
    },
    "2220": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0"
      ]
    },
    "2221": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "\"p\""
      ]
    },
    "2222": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2224": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%28#0"
      ]
    },
    "2225": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2226": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0"
      ]
    },
    "2227": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "29"
      ]
    },
    "2229": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "29",
        "8"
      ]
    },
    "2230": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0"
      ]
    },
    "2231": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "\"p\""
      ]
    },
    "2232": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2234": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "2235": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2236": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0"
      ]
    },
    "2237": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%10#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0",
        "37"
      ]
    },
    "2239": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0",
        "37",
        "8"
      ]
    },
    "2240": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "2241": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "0x"
      ]
    },
    "2242": {
      "op": "uncover 9",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "0x",
        "encoded_bool%1#0"
      ]
    },
    "2244": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2245": {
      "op": "uncover 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%1#0",
        "tmp%19#0"
      ]
    },
    "2247": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%2#0",
        "methods#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2248": {
      "op": "uncover 7",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0",
        "tmp%21#0"
      ]
    },
    "2250": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%3#0",
        "methods#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2251": {
      "op": "uncover 6",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0",
        "tmp%23#0"
      ]
    },
    "2253": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%4#0",
        "methods#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2254": {
      "op": "uncover 5",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0",
        "tmp%25#0"
      ]
    },
    "2256": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2257": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0",
        "45"
      ]
    },
    "2259": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0",
        "as_bytes%0#0"
      ]
    },
    "2260": {
      "op": "extract 6 2",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "offset_as_uint16%0#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0",
        "offset_as_uint16%0#0"
      ]
    },
    "2263": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%6#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2264": {
      "op": "uncover 4",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%6#0",
        "encoded_bool%2#0"
      ]
    },
    "2266": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%7#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2267": {
      "op": "uncover 3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "encoded_bool%3#0"
      ]
    },
    "2269": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "encoded_bool%3#0",
        "0"
      ]
    },
    "2270": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%7#0",
        "is_true%4#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "is_true%4#0"
      ]
    },
    "2271": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "is_true%4#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2272": {
      "op": "intc 4 // 225",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "is_true%4#0",
        "encoded_tuple_buffer%7#0",
        "225"
      ]
    },
    "2274": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "225",
        "is_true%4#0"
      ]
    },
    "2276": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%8#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2277": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%8#0",
        "tmp%29#0"
      ]
    },
    "2279": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%9#0",
        "methods#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "2280": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_tuple_buffer%9#0",
        "tmp%31#0"
      ]
    },
    "2281": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%10#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "2282": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%10#0",
        "copy%2#0"
      ]
    },
    "2283": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2284": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "\"p\""
      ]
    },
    "2285": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2287": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0"
      ]
    },
    "2288": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ]
    },
    "2289": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0",
        "tmp%32#0",
        "{box_del}"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0",
        "{box_del}"
      ]
    },
    "2290": {
      "op": "pop",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0"
      ]
    },
    "2291": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%32#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2292": {
      "op": "box_put",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2293": {
      "block": "methodCheck_after_if_else@11",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1"
      ]
    },
    "2294": {
      "op": "frame_dig 4",
      "defined_out": [
        "1",
        "hasCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1",
        "hasCooldown#0"
      ]
    },
    "2296": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "hasCooldown#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1",
        "hasCooldown#0",
        "onCooldown#0"
      ]
    },
    "2298": {
      "op": "frame_dig -3",
      "defined_out": [
        "1",
        "hasCooldown#0",
        "key#0 (copy)",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1",
        "hasCooldown#0",
        "onCooldown#0",
        "key#0 (copy)"
      ]
    },
    "2300": {
      "op": "frame_bury 3"
    },
    "2302": {
      "op": "frame_bury 2"
    },
    "2304": {
      "op": "frame_bury 1"
    },
    "2306": {
      "op": "frame_bury 0"
    },
    "2308": {
      "retsub": true,
      "op": "retsub"
    },
    "2309": {
      "block": "methodCheck_ternary_false@9",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "to_encode%2#0"
      ]
    },
    "2311": {
      "op": "itob",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0"
      ]
    },
    "2312": {
      "op": "b methodCheck_ternary_merge@10"
    },
    "2315": {
      "block": "methodCheck_after_if_else@12",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0"
      ]
    },
    "2316": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0",
        "1"
      ]
    },
    "2317": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0",
        "1",
        "1"
      ]
    },
    "2318": {
      "op": "frame_dig -3",
      "defined_out": [
        "0",
        "1",
        "key#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0",
        "1",
        "1",
        "key#0 (copy)"
      ]
    },
    "2320": {
      "op": "frame_bury 3"
    },
    "2322": {
      "op": "frame_bury 2"
    },
    "2324": {
      "op": "frame_bury 1"
    },
    "2326": {
      "op": "frame_bury 0"
    },
    "2328": {
      "retsub": true,
      "op": "retsub"
    },
    "2329": {
      "block": "methodCheck_ternary_false@2",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0"
      ]
    },
    "2331": {
      "op": "b methodCheck_ternary_merge@3"
    },
    "2334": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.transferFunds",
      "params": {
        "key#0": "bytes",
        "fundsRequests#0": "bytes"
      },
      "block": "transferFunds",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "2337": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0"
      ]
    },
    "2338": {
      "block": "transferFunds_block@0",
      "stack_in": [
        "request#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0"
      ]
    },
    "2340": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequests%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0"
      ]
    },
    "2342": {
      "op": "intc_0 // 0",
      "defined_out": [
        "fundsRequests%out#0",
        "i#0",
        "key%out#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2343": {
      "block": "transferFunds_while_top@1",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequests#0 (copy)"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "fundsRequests#0 (copy)"
      ]
    },
    "2345": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "fundsRequests#0 (copy)"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "fundsRequests#0 (copy)",
        "0"
      ]
    },
    "2346": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "2347": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "2349": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2350": {
      "op": "bz transferFunds_after_while@8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2353": {
      "block": "transferFunds_while_body@2",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequests#0 (copy)"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "fundsRequests#0 (copy)"
      ]
    },
    "2355": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2358": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2360": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0",
        "16"
      ]
    },
    "2362": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2363": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "16"
      ]
    },
    "2365": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0"
      ]
    },
    "2366": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "i#0",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "\"p\""
      ]
    },
    "2367": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"p\"",
        "i#0",
        "key#0 (copy)",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2369": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "request#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "tmp%3#0"
      ]
    },
    "2370": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2371": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0"
      ]
    },
    "2372": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "2373": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "2"
      ]
    },
    "2375": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "i#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "2",
        "8"
      ]
    },
    "2376": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "tmp%4#0"
      ]
    },
    "2377": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "tmp%5#0"
      ]
    },
    "2378": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "value%0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2380": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request#0",
        "pluginInfo#0",
        "spendingAddress#0"
      ]
    },
    "2381": {
      "op": "cover 2",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0"
      ]
    },
    "2383": {
      "op": "frame_dig -2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "key#0 (copy)"
      ]
    },
    "2385": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "key#0 (copy)",
        "8"
      ]
    },
    "2386": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "8",
        "i#0",
        "key#0 (copy)",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "key#0 (copy)",
        "8",
        "32"
      ]
    },
    "2388": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0"
      ]
    },
    "2389": {
      "op": "frame_dig -2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "key#0 (copy)"
      ]
    },
    "2391": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "key#0 (copy)",
        "0"
      ]
    },
    "2392": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "key#0 (copy)",
        "0",
        "8"
      ]
    },
    "2393": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2394": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "request#0 (copy)",
        "spendingAddress#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%7#0",
        "request#0 (copy)"
      ]
    },
    "2396": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%7#0",
        "request#0 (copy)",
        "0"
      ]
    },
    "2397": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%7#0",
        "request#0 (copy)",
        "0",
        "8"
      ]
    },
    "2398": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2399": {
      "op": "swap",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%7#0"
      ]
    },
    "2400": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%8#0",
        "tmp%7#0",
        "0x"
      ]
    },
    "2401": {
      "op": "swap",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%8#0",
        "0x",
        "tmp%7#0"
      ]
    },
    "2402": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%6#0",
        "tmp%8#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2403": {
      "op": "uncover 2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%8#0",
        "encoded_tuple_buffer%1#0",
        "tmp%6#0"
      ]
    },
    "2405": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%8#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2406": {
      "op": "swap",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "encoded_tuple_buffer%2#0",
        "tmp%8#0"
      ]
    },
    "2407": {
      "op": "concat",
      "defined_out": [
        "allowanceKey#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "allowanceKey#0"
      ]
    },
    "2408": {
      "op": "dig 1",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "allowanceKey#0",
        "pluginInfo#0 (copy)"
      ]
    },
    "2410": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "allowanceKey#0",
        "i#0",
        "pluginInfo#0",
        "pluginInfo#0 (copy)",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "allowanceKey#0",
        "pluginInfo#0 (copy)",
        "37"
      ]
    },
    "2412": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "allowanceKey#0",
        "pluginInfo#0 (copy)",
        "37",
        "8"
      ]
    },
    "2413": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowanceKey#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "allowanceKey#0",
        "tmp%9#0"
      ]
    },
    "2414": {
      "op": "btoi",
      "defined_out": [
        "allowanceKey#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "allowanceKey#0",
        "tmp%10#0"
      ]
    },
    "2415": {
      "op": "swap",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "pluginInfo#0",
        "tmp%10#0",
        "allowanceKey#0"
      ]
    },
    "2416": {
      "op": "uncover 2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "pluginInfo#0"
      ]
    },
    "2418": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "allowanceKey#0",
        "i#0",
        "pluginInfo#0",
        "request#0",
        "spendingAddress#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "pluginInfo#0",
        "225"
      ]
    },
    "2420": {
      "op": "getbit",
      "defined_out": [
        "allowanceKey#0",
        "i#0",
        "is_true%0#0",
        "request#0",
        "spendingAddress#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "is_true%0#0"
      ]
    },
    "2421": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "allowanceKey#0",
        "i#0",
        "is_true%0#0",
        "request#0",
        "spendingAddress#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "2422": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "2423": {
      "op": "uncover 2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "2425": {
      "op": "setbit",
      "defined_out": [
        "allowanceKey#0",
        "encoded_bool%0#0",
        "i#0",
        "request#0",
        "spendingAddress#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "encoded_bool%0#0"
      ]
    },
    "2426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "2427": {
      "op": "getbit",
      "defined_out": [
        "allowanceKey#0",
        "i#0",
        "request#0",
        "spendingAddress#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "allowanceKey#0",
        "tmp%11#0"
      ]
    },
    "2428": {
      "op": "uncover 2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "allowanceKey#0",
        "tmp%11#0",
        "tmp%10#0"
      ]
    },
    "2430": {
      "op": "swap",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "allowanceKey#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2431": {
      "op": "uncover 2",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "tmp%10#0",
        "tmp%11#0",
        "allowanceKey#0"
      ]
    },
    "2433": {
      "op": "uncover 3",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "tmp%10#0",
        "tmp%11#0",
        "allowanceKey#0",
        "request#0"
      ]
    },
    "2435": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.verifyAllowance",
      "op": "callsub verifyAllowance",
      "defined_out": [
        "i#0",
        "request#0",
        "spendingAddress#0",
        "verifyAllowance%0#0",
        "verifyAllowance%1#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "verifyAllowance%0#0",
        "verifyAllowance%1#0"
      ]
    },
    "2438": {
      "op": "bury 1",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0"
      ]
    },
    "2440": {
      "op": "dup",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "request#0"
      ]
    },
    "2441": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0"
      ]
    },
    "2443": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "0"
      ]
    },
    "2444": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "request#0",
        "0",
        "8"
      ]
    },
    "2445": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "request#0",
        "spendingAddress#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "tmp%12#0"
      ]
    },
    "2446": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "request#0",
        "spendingAddress#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "tmp%13#0"
      ]
    },
    "2447": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "tmp%13#0",
        "0"
      ]
    },
    "2448": {
      "op": "!=",
      "defined_out": [
        "i#0",
        "request#0",
        "spendingAddress#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "tmp%14#0"
      ]
    },
    "2449": {
      "op": "bz transferFunds_else_body@5",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0"
      ]
    },
    "2452": {
      "block": "transferFunds_if_body@3",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0"
      ],
      "op": "itxn_begin"
    },
    "2453": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "0"
      ]
    },
    "2454": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "2456": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2457": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2458": {
      "op": "swap",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0"
      ]
    },
    "2459": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0"
      ]
    },
    "2461": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0",
        "request#0 (copy)",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "request#0 (copy)"
      ]
    },
    "2462": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0",
        "request#0 (copy)",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "request#0 (copy)",
        "8"
      ]
    },
    "2463": {
      "op": "dup",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "request#0 (copy)",
        "8",
        "8"
      ]
    },
    "2464": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "tmp%15#0"
      ]
    },
    "2465": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "2466": {
      "op": "swap",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "request#0"
      ]
    },
    "2467": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "request#0",
        "0"
      ]
    },
    "2468": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "request#0",
        "0",
        "8"
      ]
    },
    "2469": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "tmp%16#0"
      ]
    },
    "2470": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2471": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "2473": {
      "op": "itxn_field AssetAmount",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2475": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2477": {
      "op": "itxn_field Sender",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2479": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "4"
      ]
    },
    "2480": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2482": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "0"
      ]
    },
    "2483": {
      "op": "itxn_field Fee",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2485": {
      "block": "transferFunds_next_txn@4",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "2486": {
      "block": "transferFunds_after_if_else@7",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "i#0"
      ]
    },
    "2488": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2489": {
      "op": "+",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "i#0"
      ]
    },
    "2490": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2492": {
      "op": "b transferFunds_while_top@1"
    },
    "2495": {
      "block": "transferFunds_else_body@5",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0"
      ],
      "op": "itxn_begin"
    },
    "2496": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "0"
      ]
    },
    "2497": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "2499": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2500": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "spendingAddress#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "2501": {
      "op": "swap",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0"
      ]
    },
    "2502": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0"
      ]
    },
    "2504": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "8"
      ]
    },
    "2505": {
      "op": "dup",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "request#0",
        "8",
        "8"
      ]
    },
    "2506": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "tmp%17#0"
      ]
    },
    "2507": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "request#0",
        "spendingAddress#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "spendingAddress#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "2508": {
      "op": "itxn_field Amount",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "2510": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "2512": {
      "op": "itxn_field Sender",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2514": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "request#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "1"
      ]
    },
    "2515": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2517": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "0"
      ]
    },
    "2518": {
      "op": "itxn_field Fee",
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2520": {
      "block": "transferFunds_next_txn@6",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "2521": {
      "op": "b transferFunds_after_if_else@7"
    },
    "2524": {
      "block": "transferFunds_after_while@8",
      "stack_in": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "key%out#0"
      ]
    },
    "2526": {
      "op": "frame_dig 2",
      "defined_out": [
        "fundsRequests%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "request#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "key%out#0",
        "fundsRequests%out#0"
      ]
    },
    "2528": {
      "op": "frame_bury 1"
    },
    "2530": {
      "op": "frame_bury 0"
    },
    "2532": {
      "retsub": true,
      "op": "retsub"
    },
    "2533": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.verifyAllowance",
      "params": {
        "start#0": "uint64",
        "useRounds#0": "uint64",
        "key#0": "bytes",
        "fundRequest#0": "bytes"
      },
      "block": "verifyAllowance",
      "stack_in": [],
      "op": "proto 4 2"
    },
    "2536": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4EpochRef#0"
      ]
    },
    "2537": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0"
      ]
    },
    "2538": {
      "op": "dupn 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0"
      ]
    },
    "2540": {
      "block": "verifyAllowance_block@0",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0"
      ]
    },
    "2542": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundRequest%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0"
      ]
    },
    "2544": {
      "op": "bytec_2 // \"a\"",
      "defined_out": [
        "\"a\"",
        "fundRequest%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "\"a\""
      ]
    },
    "2545": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"a\"",
        "fundRequest%out#0",
        "key#0 (copy)",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2547": {
      "op": "concat",
      "defined_out": [
        "fundRequest%out#0",
        "key%out#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "tmp%0#0"
      ]
    },
    "2548": {
      "op": "box_len",
      "defined_out": [
        "fundRequest%out#0",
        "key%out#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2549": {
      "op": "bury 1",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "maybe_exists%0#0"
      ]
    },
    "2551": {
      "error": "Allowance does not exist",
      "op": "assert // Allowance does not exist",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0"
      ]
    },
    "2552": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "\"a\""
      ]
    },
    "2553": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2555": {
      "op": "concat",
      "defined_out": [
        "fundRequest%out#0",
        "key%out#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "tmp%1#0"
      ]
    },
    "2556": {
      "op": "box_get",
      "defined_out": [
        "fundRequest%out#0",
        "key%out#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2557": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "allowance#0",
        "fundRequest%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2558": {
      "op": "frame_dig -3",
      "defined_out": [
        "allowance#0",
        "fundRequest%out#0",
        "key%out#0",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "useRounds#0 (copy)"
      ]
    },
    "2560": {
      "op": "bz verifyAllowance_ternary_false@2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2563": {
      "block": "verifyAllowance_ternary_true@1",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "global Round",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "to_encode%0#0"
      ]
    },
    "2565": {
      "op": "itob",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%0#0"
      ]
    },
    "2566": {
      "block": "verifyAllowance_ternary_merge@3",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%0#0"
      ],
      "op": "frame_bury 0",
      "defined_out": [
        "arc4EpochRef#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2568": {
      "op": "frame_dig 6",
      "defined_out": [
        "allowance#0",
        "arc4EpochRef#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0"
      ]
    },
    "2570": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "0"
      ]
    },
    "2571": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "allowance#0",
        "arc4EpochRef#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "0",
        "1"
      ]
    },
    "2572": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "arc4EpochRef#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%2#0"
      ]
    },
    "2573": {
      "op": "bytec 9 // 0x01",
      "defined_out": [
        "0x01",
        "allowance#0",
        "arc4EpochRef#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%2#0",
        "0x01"
      ]
    },
    "2575": {
      "op": "==",
      "defined_out": [
        "allowance#0",
        "arc4EpochRef#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%3#0"
      ]
    },
    "2576": {
      "op": "bz verifyAllowance_else_body@5",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2579": {
      "block": "verifyAllowance_if_body@4",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0"
      ]
    },
    "2581": {
      "op": "dup",
      "defined_out": [
        "allowance#0",
        "allowance#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2582": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "allowance#0",
        "allowance#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "allowance#0 (copy)",
        "17"
      ]
    },
    "2584": {
      "op": "intc_2 // 8",
      "defined_out": [
        "17",
        "8",
        "allowance#0",
        "allowance#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "allowance#0 (copy)",
        "17",
        "8"
      ]
    },
    "2585": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "tmp%4#0"
      ]
    },
    "2586": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "spent#0"
      ]
    },
    "2587": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "allowance#0"
      ]
    },
    "2588": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "allowance#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "allowance#0",
        "9"
      ]
    },
    "2590": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "allowance#0",
        "9",
        "8"
      ]
    },
    "2591": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "spent#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "tmp%5#0"
      ]
    },
    "2592": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "spent#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "tmp%6#0"
      ]
    },
    "2593": {
      "op": "dig 1",
      "defined_out": [
        "allowance#0",
        "spent#0",
        "spent#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "tmp%6#0",
        "spent#0 (copy)"
      ]
    },
    "2595": {
      "op": "-",
      "defined_out": [
        "allowance#0",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "leftover#0"
      ]
    },
    "2596": {
      "op": "frame_dig -1",
      "defined_out": [
        "allowance#0",
        "fundRequest#0 (copy)",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "leftover#0",
        "fundRequest#0 (copy)"
      ]
    },
    "2598": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "leftover#0",
        "fundRequest#0 (copy)",
        "8"
      ]
    },
    "2599": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "leftover#0",
        "fundRequest#0 (copy)",
        "8",
        "8"
      ]
    },
    "2600": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "leftover#0",
        "spent#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "leftover#0",
        "tmp%7#0"
      ]
    },
    "2601": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "amount#0",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "leftover#0",
        "amount#0"
      ]
    },
    "2602": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "amount#0",
        "leftover#0"
      ]
    },
    "2603": {
      "op": "dig 1",
      "defined_out": [
        "allowance#0",
        "amount#0",
        "amount#0 (copy)",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "amount#0",
        "leftover#0",
        "amount#0 (copy)"
      ]
    },
    "2605": {
      "op": ">=",
      "defined_out": [
        "allowance#0",
        "amount#0",
        "spent#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "amount#0",
        "tmp%8#0"
      ]
    },
    "2606": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent#0",
        "amount#0"
      ]
    },
    "2607": {
      "op": "+",
      "defined_out": [
        "allowance#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "to_encode%2#0"
      ]
    },
    "2608": {
      "op": "itob",
      "defined_out": [
        "allowance#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0"
      ]
    },
    "2609": {
      "op": "bytec_2 // \"a\"",
      "defined_out": [
        "\"a\"",
        "allowance#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0",
        "\"a\""
      ]
    },
    "2610": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"a\"",
        "allowance#0",
        "key#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2612": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "tmp%9#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0",
        "tmp%9#0"
      ]
    },
    "2613": {
      "op": "dup",
      "defined_out": [
        "allowance#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "2614": {
      "op": "box_get",
      "defined_out": [
        "allowance#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%9#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2615": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "val_as_bytes%2#0",
        "tmp%9#0",
        "maybe_value%2#0"
      ]
    },
    "2616": {
      "op": "uncover 2",
      "defined_out": [
        "allowance#0",
        "assigned_value%0#0",
        "maybe_value%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "assigned_value%0#0"
      ]
    },
    "2618": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%9#0",
        "assigned_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "2619": {
      "op": "pushint 17 // 17",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%9#0",
        "assigned_value%0#0",
        "maybe_value%2#0",
        "17"
      ]
    },
    "2621": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%9#0",
        "maybe_value%2#0",
        "17",
        "assigned_value%0#0"
      ]
    },
    "2623": {
      "op": "replace3",
      "defined_out": [
        "allowance#0",
        "tmp%9#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%9#0",
        "updated_data%0#0"
      ]
    },
    "2624": {
      "op": "box_put",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2625": {
      "block": "verifyAllowance_after_if_else@17",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "key%out#0"
      ]
    },
    "2627": {
      "op": "frame_dig 5",
      "defined_out": [
        "fundRequest%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "key%out#0",
        "fundRequest%out#0"
      ]
    },
    "2629": {
      "op": "frame_bury 1"
    },
    "2631": {
      "op": "frame_bury 0"
    },
    "2633": {
      "retsub": true,
      "op": "retsub"
    },
    "2634": {
      "block": "verifyAllowance_else_body@5",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0"
      ]
    },
    "2636": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "0"
      ]
    },
    "2637": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "0",
        "1"
      ]
    },
    "2638": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%10#0"
      ]
    },
    "2639": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "allowance#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%10#0",
        "0x02"
      ]
    },
    "2642": {
      "op": "==",
      "defined_out": [
        "allowance#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%11#0"
      ]
    },
    "2643": {
      "op": "bz verifyAllowance_else_body@10",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2646": {
      "block": "verifyAllowance_if_body@6",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0"
      ]
    },
    "2648": {
      "op": "dup",
      "defined_out": [
        "allowance#0",
        "allowance#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2649": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "allowance#0",
        "allowance#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "allowance#0 (copy)",
        "25"
      ]
    },
    "2651": {
      "op": "intc_2 // 8",
      "defined_out": [
        "25",
        "8",
        "allowance#0",
        "allowance#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "allowance#0 (copy)",
        "25",
        "8"
      ]
    },
    "2652": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "tmp%12#0"
      ]
    },
    "2653": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "tmp%13#0"
      ]
    },
    "2654": {
      "op": "frame_dig -3",
      "defined_out": [
        "allowance#0",
        "tmp%13#0",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "tmp%13#0",
        "useRounds#0 (copy)"
      ]
    },
    "2656": {
      "op": "frame_dig -4",
      "defined_out": [
        "allowance#0",
        "start#0 (copy)",
        "tmp%13#0",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "tmp%13#0",
        "useRounds#0 (copy)",
        "start#0 (copy)"
      ]
    },
    "2658": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "useRounds#0 (copy)",
        "start#0 (copy)",
        "tmp%13#0"
      ]
    },
    "2660": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.getLatestWindowStart",
      "op": "callsub getLatestWindowStart",
      "defined_out": [
        "allowance#0",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "currentWindowStart#0"
      ]
    },
    "2663": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0"
      ]
    },
    "2664": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2665": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "allowance#0",
        "allowance#0 (copy)",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowance#0 (copy)",
        "9"
      ]
    },
    "2667": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowance#0 (copy)",
        "9",
        "8"
      ]
    },
    "2668": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "currentWindowStart#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "tmp%14#0"
      ]
    },
    "2669": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowed#0"
      ]
    },
    "2670": {
      "op": "frame_bury 1",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0"
      ]
    },
    "2672": {
      "op": "frame_dig -1",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "currentWindowStart#0",
        "fundRequest#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "fundRequest#0 (copy)"
      ]
    },
    "2674": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "fundRequest#0 (copy)",
        "8"
      ]
    },
    "2675": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "fundRequest#0 (copy)",
        "8",
        "8"
      ]
    },
    "2676": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "currentWindowStart#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "tmp%15#0"
      ]
    },
    "2677": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "amount\u2081#0"
      ]
    },
    "2678": {
      "op": "frame_bury 2",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0"
      ]
    },
    "2680": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2681": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "allowance#0",
        "allowance#0 (copy)",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowance#0 (copy)",
        "17"
      ]
    },
    "2683": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "allowance#0 (copy)",
        "17",
        "8"
      ]
    },
    "2684": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "tmp%16#0"
      ]
    },
    "2685": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "spent\u2081#0"
      ]
    },
    "2686": {
      "op": "frame_bury 3",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0"
      ]
    },
    "2688": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "33",
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "33"
      ]
    },
    "2690": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "allowance#0",
        "33",
        "8"
      ]
    },
    "2691": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0",
        "spent\u2081#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "tmp%17#0"
      ]
    },
    "2692": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "currentWindowStart#0",
        "spent\u2081#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "currentWindowStart#0",
        "tmp%18#0"
      ]
    },
    "2693": {
      "op": ">",
      "defined_out": [
        "allowance#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%19#0"
      ]
    },
    "2694": {
      "op": "bz verifyAllowance_else_body@8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2697": {
      "block": "verifyAllowance_if_body@7",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "allowed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowed#0"
      ]
    },
    "2699": {
      "op": "frame_dig 2",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowed#0",
        "amount\u2081#0"
      ]
    },
    "2701": {
      "op": ">=",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%20#0"
      ]
    },
    "2702": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2703": {
      "block": "verifyAllowance_after_if_else@9",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent\u2081#0"
      ]
    },
    "2705": {
      "op": "frame_dig 2",
      "defined_out": [
        "amount\u2081#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "spent\u2081#0",
        "amount\u2081#0"
      ]
    },
    "2707": {
      "op": "+",
      "defined_out": [
        "amount\u2081#0",
        "spent\u2081#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "to_encode%3#0"
      ]
    },
    "2708": {
      "op": "itob",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0"
      ]
    },
    "2709": {
      "op": "bytec_2 // \"a\"",
      "defined_out": [
        "\"a\"",
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "\"a\""
      ]
    },
    "2710": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"a\"",
        "amount\u2081#0",
        "key#0 (copy)",
        "newSpent#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2712": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%22#0"
      ]
    },
    "2713": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "newSpent#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2714": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "maybe_value%3#0"
      ]
    },
    "2715": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amount\u2081#0",
        "maybe_value%3#0",
        "newSpent#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2716": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "amount\u2081#0",
        "maybe_value%3#0",
        "newSpent#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "maybe_value%3#0",
        "0",
        "1"
      ]
    },
    "2717": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0"
      ]
    },
    "2718": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "\"a\""
      ]
    },
    "2719": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2721": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2722": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2723": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "maybe_value%4#0"
      ]
    },
    "2724": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "2725": {
      "op": "intc_2 // 8",
      "defined_out": [
        "1",
        "8",
        "amount\u2081#0",
        "maybe_value%4#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "maybe_value%4#0",
        "1",
        "8"
      ]
    },
    "2726": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "2727": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "\"a\""
      ]
    },
    "2728": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2730": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "2731": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2732": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%5#0"
      ]
    },
    "2733": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "amount\u2081#0",
        "maybe_value%5#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%5#0",
        "9"
      ]
    },
    "2735": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%5#0",
        "9",
        "8"
      ]
    },
    "2736": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0"
      ]
    },
    "2737": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "\"a\""
      ]
    },
    "2738": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2740": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "2741": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2742": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "maybe_value%6#0"
      ]
    },
    "2743": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "amount\u2081#0",
        "maybe_value%6#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "maybe_value%6#0",
        "25"
      ]
    },
    "2745": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "maybe_value%6#0",
        "25",
        "8"
      ]
    },
    "2746": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0"
      ]
    },
    "2747": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "amount\u2081#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0",
        "0x"
      ]
    },
    "2748": {
      "op": "uncover 4",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0",
        "0x",
        "tmp%23#0"
      ]
    },
    "2750": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%1#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%25#0",
        "tmp%27#0",
        "tmp%29#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2751": {
      "op": "uncover 3",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%27#0",
        "tmp%29#0",
        "encoded_tuple_buffer%1#0",
        "tmp%25#0"
      ]
    },
    "2753": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%2#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%27#0",
        "tmp%29#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2754": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%29#0",
        "encoded_tuple_buffer%2#0",
        "tmp%27#0"
      ]
    },
    "2756": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%3#0",
        "newSpent#0",
        "spent\u2081#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "newSpent#0",
        "tmp%29#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2757": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%29#0",
        "encoded_tuple_buffer%3#0",
        "newSpent#0"
      ]
    },
    "2759": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%4#0",
        "spent\u2081#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%29#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2760": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%4#0",
        "tmp%29#0"
      ]
    },
    "2761": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%5#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2762": {
      "op": "frame_dig 0",
      "defined_out": [
        "amount\u2081#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%5#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%5#0",
        "arc4EpochRef#0"
      ]
    },
    "2764": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%6#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2765": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%6#0",
        "\"a\""
      ]
    },
    "2766": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%6#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2768": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%6#0",
        "spent\u2081#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%6#0",
        "tmp%30#0"
      ]
    },
    "2769": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%30#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2770": {
      "op": "box_put",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2771": {
      "block": "verifyAllowance_after_if_else@16",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "b verifyAllowance_after_if_else@17"
    },
    "2774": {
      "block": "verifyAllowance_else_body@8",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "allowed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowed#0"
      ]
    },
    "2776": {
      "op": "frame_dig 3",
      "defined_out": [
        "allowed#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowed#0",
        "spent\u2081#0"
      ]
    },
    "2778": {
      "op": "-",
      "defined_out": [
        "allowed#0",
        "leftover\u2081#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2081#0"
      ]
    },
    "2779": {
      "op": "frame_dig 2",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0",
        "leftover\u2081#0",
        "spent\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2081#0",
        "amount\u2081#0"
      ]
    },
    "2781": {
      "op": ">=",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%21#0"
      ]
    },
    "2782": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2783": {
      "op": "b verifyAllowance_after_if_else@9"
    },
    "2786": {
      "block": "verifyAllowance_else_body@10",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0"
      ]
    },
    "2788": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "0"
      ]
    },
    "2789": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "allowance#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "allowance#0",
        "0",
        "1"
      ]
    },
    "2790": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%31#0"
      ]
    },
    "2791": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "allowance#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%31#0",
        "0x03"
      ]
    },
    "2794": {
      "op": "==",
      "defined_out": [
        "allowance#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%32#0"
      ]
    },
    "2795": {
      "op": "bz verifyAllowance_after_if_else@15",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2798": {
      "block": "verifyAllowance_if_body@11",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "useRounds#0 (copy)"
      ]
    },
    "2800": {
      "op": "bz verifyAllowance_ternary_false@13",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2803": {
      "block": "verifyAllowance_ternary_true@12",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0"
      ]
    },
    "2805": {
      "block": "verifyAllowance_ternary_merge@14",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundRequest#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0",
        "fundRequest#0 (copy)"
      ]
    },
    "2807": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "fundRequest#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0",
        "fundRequest#0 (copy)",
        "8"
      ]
    },
    "2808": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0",
        "fundRequest#0 (copy)",
        "8",
        "8"
      ]
    },
    "2809": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "ternary_result%1#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0",
        "tmp%33#0"
      ]
    },
    "2810": {
      "op": "btoi",
      "defined_out": [
        "amount\u2082#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0",
        "amount\u2082#0"
      ]
    },
    "2811": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0"
      ]
    },
    "2812": {
      "op": "frame_dig 6",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "allowance#0"
      ]
    },
    "2814": {
      "op": "dup",
      "defined_out": [
        "allowance#0",
        "allowance#0 (copy)",
        "amount\u2082#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2815": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "allowance#0",
        "allowance#0 (copy)",
        "amount\u2082#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "allowance#0",
        "allowance#0 (copy)",
        "1"
      ]
    },
    "2816": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "allowance#0",
        "allowance#0 (copy)",
        "1",
        "8"
      ]
    },
    "2817": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "allowance#0",
        "tmp%34#0"
      ]
    },
    "2818": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "allowance#0",
        "max#0"
      ]
    },
    "2819": {
      "op": "cover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "allowance#0"
      ]
    },
    "2821": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2822": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "allowance#0",
        "allowance#0 (copy)",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "allowance#0",
        "allowance#0 (copy)",
        "25"
      ]
    },
    "2824": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "allowance#0",
        "allowance#0 (copy)",
        "25",
        "8"
      ]
    },
    "2825": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "allowance#0",
        "tmp%35#0"
      ]
    },
    "2826": {
      "op": "btoi",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "allowance#0",
        "interval#0"
      ]
    },
    "2827": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "allowance#0"
      ]
    },
    "2828": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2829": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "allowance#0",
        "allowance#0 (copy)",
        "amount\u2082#0",
        "interval#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "allowance#0",
        "allowance#0 (copy)",
        "9"
      ]
    },
    "2831": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "allowance#0",
        "allowance#0 (copy)",
        "9",
        "8"
      ]
    },
    "2832": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "max#0",
        "ternary_result%1#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "allowance#0",
        "tmp%36#0"
      ]
    },
    "2833": {
      "op": "btoi",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "allowance#0",
        "accrualRate#0"
      ]
    },
    "2834": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "allowance#0"
      ]
    },
    "2835": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "allowance#0",
        "allowance#0 (copy)"
      ]
    },
    "2836": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "accrualRate#0",
        "allowance#0",
        "allowance#0 (copy)",
        "amount\u2082#0",
        "interval#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "allowance#0",
        "allowance#0 (copy)",
        "17"
      ]
    },
    "2838": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "allowance#0",
        "allowance#0 (copy)",
        "17",
        "8"
      ]
    },
    "2839": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "max#0",
        "ternary_result%1#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "allowance#0",
        "tmp%37#0"
      ]
    },
    "2840": {
      "op": "btoi",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "lastLeftover#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "allowance#0",
        "lastLeftover#0"
      ]
    },
    "2841": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "allowance#0"
      ]
    },
    "2842": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "33",
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "lastLeftover#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "allowance#0",
        "33"
      ]
    },
    "2844": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "allowance#0",
        "33",
        "8"
      ]
    },
    "2845": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "lastLeftover#0",
        "max#0",
        "ternary_result%1#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "tmp%38#0"
      ]
    },
    "2846": {
      "op": "btoi",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "lastLeftover#0",
        "max#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "ternary_result%1#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "last#0"
      ]
    },
    "2847": {
      "op": "uncover 4",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "epochRef#0",
        "interval#0",
        "last#0",
        "lastLeftover#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "last#0",
        "epochRef#0"
      ]
    },
    "2849": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "epochRef#0",
        "last#0"
      ]
    },
    "2850": {
      "op": "-",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "interval#0",
        "lastLeftover#0",
        "max#0",
        "passed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "interval#0",
        "accrualRate#0",
        "lastLeftover#0",
        "passed#0"
      ]
    },
    "2851": {
      "op": "uncover 3",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "accrualRate#0",
        "lastLeftover#0",
        "passed#0",
        "interval#0"
      ]
    },
    "2853": {
      "op": "/",
      "defined_out": [
        "accrualRate#0",
        "allowance#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "max#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "accrualRate#0",
        "lastLeftover#0",
        "tmp%39#0"
      ]
    },
    "2854": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "lastLeftover#0",
        "tmp%39#0",
        "accrualRate#0"
      ]
    },
    "2856": {
      "op": "*",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "max#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "lastLeftover#0",
        "tmp%40#0"
      ]
    },
    "2857": {
      "op": "+",
      "defined_out": [
        "accrued#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "accrued#0"
      ]
    },
    "2858": {
      "op": "dup",
      "defined_out": [
        "accrued#0",
        "accrued#0 (copy)",
        "allowance#0",
        "amount\u2082#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "accrued#0",
        "accrued#0 (copy)"
      ]
    },
    "2859": {
      "op": "dig 2",
      "defined_out": [
        "accrued#0",
        "accrued#0 (copy)",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "max#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "accrued#0",
        "accrued#0 (copy)",
        "max#0 (copy)"
      ]
    },
    "2861": {
      "op": ">",
      "defined_out": [
        "accrued#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "accrued#0",
        "tmp%41#0"
      ]
    },
    "2862": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "max#0",
        "tmp%41#0",
        "accrued#0"
      ]
    },
    "2863": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "tmp%41#0",
        "accrued#0",
        "max#0"
      ]
    },
    "2865": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "accrued#0",
        "max#0",
        "tmp%41#0"
      ]
    },
    "2867": {
      "op": "select",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "available#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "available#0"
      ]
    },
    "2868": {
      "op": "dup",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "available#0",
        "available#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "available#0",
        "available#0 (copy)"
      ]
    },
    "2869": {
      "op": "dig 2",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "amount\u2082#0 (copy)",
        "available#0",
        "available#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "available#0",
        "available#0 (copy)",
        "amount\u2082#0 (copy)"
      ]
    },
    "2871": {
      "op": ">=",
      "defined_out": [
        "allowance#0",
        "amount\u2082#0",
        "available#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "available#0",
        "tmp%42#0"
      ]
    },
    "2872": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "amount\u2082#0",
        "available#0"
      ]
    },
    "2873": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "available#0",
        "amount\u2082#0"
      ]
    },
    "2874": {
      "op": "-",
      "defined_out": [
        "allowance#0",
        "to_encode%4#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "to_encode%4#0"
      ]
    },
    "2875": {
      "op": "itob",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0"
      ]
    },
    "2876": {
      "op": "bytec_2 // \"a\"",
      "defined_out": [
        "\"a\"",
        "allowance#0",
        "leftover\u2082#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "\"a\""
      ]
    },
    "2877": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"a\"",
        "allowance#0",
        "key#0 (copy)",
        "leftover\u2082#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2879": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%43#0"
      ]
    },
    "2880": {
      "op": "box_get",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2881": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "maybe_value%7#0"
      ]
    },
    "2882": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "allowance#0",
        "leftover\u2082#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "2883": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "maybe_value%7#0",
        "0",
        "1"
      ]
    },
    "2884": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0"
      ]
    },
    "2885": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "\"a\""
      ]
    },
    "2886": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2888": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "2889": {
      "op": "box_get",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2890": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "maybe_value%8#0"
      ]
    },
    "2891": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "maybe_value%8#0",
        "1"
      ]
    },
    "2892": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "maybe_value%8#0",
        "1",
        "8"
      ]
    },
    "2893": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "2894": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "\"a\""
      ]
    },
    "2895": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2897": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "2898": {
      "op": "box_get",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2899": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "maybe_value%9#0"
      ]
    },
    "2900": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "maybe_value%9#0",
        "9"
      ]
    },
    "2902": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "maybe_value%9#0",
        "9",
        "8"
      ]
    },
    "2903": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0"
      ]
    },
    "2904": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "\"a\""
      ]
    },
    "2905": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2907": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "2908": {
      "op": "box_get",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2909": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "maybe_value%10#0"
      ]
    },
    "2910": {
      "op": "pushint 25 // 25",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "maybe_value%10#0",
        "25"
      ]
    },
    "2912": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "maybe_value%10#0",
        "25",
        "8"
      ]
    },
    "2913": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0"
      ]
    },
    "2914": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0",
        "0x"
      ]
    },
    "2915": {
      "op": "uncover 4",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0",
        "0x",
        "tmp%44#0"
      ]
    },
    "2917": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "encoded_tuple_buffer%8#0",
        "leftover\u2082#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%46#0",
        "tmp%48#0",
        "tmp%50#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2918": {
      "op": "uncover 3",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%48#0",
        "tmp%50#0",
        "encoded_tuple_buffer%8#0",
        "tmp%46#0"
      ]
    },
    "2920": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "encoded_tuple_buffer%9#0",
        "leftover\u2082#0",
        "tmp%48#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%48#0",
        "tmp%50#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "2921": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%50#0",
        "encoded_tuple_buffer%9#0",
        "tmp%48#0"
      ]
    },
    "2923": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "encoded_tuple_buffer%10#0",
        "leftover\u2082#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "leftover\u2082#0",
        "tmp%50#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "2924": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%50#0",
        "encoded_tuple_buffer%10#0",
        "leftover\u2082#0"
      ]
    },
    "2926": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "encoded_tuple_buffer%11#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%50#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2927": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%11#0",
        "tmp%50#0"
      ]
    },
    "2928": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "2929": {
      "op": "frame_dig 0",
      "defined_out": [
        "allowance#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%12#0",
        "arc4EpochRef#0"
      ]
    },
    "2931": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2932": {
      "op": "bytec_2 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%13#0",
        "\"a\""
      ]
    },
    "2933": {
      "op": "frame_dig -2",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%13#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2935": {
      "op": "concat",
      "defined_out": [
        "allowance#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%13#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "encoded_tuple_buffer%13#0",
        "tmp%51#0"
      ]
    },
    "2936": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "tmp%51#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2937": {
      "op": "box_put",
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ]
    },
    "2938": {
      "block": "verifyAllowance_after_if_else@15",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "b verifyAllowance_after_if_else@16"
    },
    "2941": {
      "block": "verifyAllowance_ternary_false@13",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%1#0"
      ]
    },
    "2943": {
      "op": "b verifyAllowance_ternary_merge@14"
    },
    "2946": {
      "block": "verifyAllowance_ternary_false@2",
      "stack_in": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "to_encode%1#0"
      ]
    },
    "2948": {
      "op": "itob",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "allowed#0",
        "amount\u2081#0",
        "spent\u2081#0",
        "key%out#0",
        "fundRequest%out#0",
        "allowance#0",
        "ternary_result%0#0"
      ]
    },
    "2949": {
      "op": "b verifyAllowance_ternary_merge@3"
    },
    "2952": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.getLatestWindowStart",
      "params": {
        "useRounds#0": "uint64",
        "start#0": "uint64",
        "interval#0": "uint64"
      },
      "block": "getLatestWindowStart",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2955": {
      "block": "getLatestWindowStart_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "useRounds#0 (copy)"
      ]
    },
    "2957": {
      "op": "bz getLatestWindowStart_after_if_else@2",
      "stack_out": []
    },
    "2960": {
      "block": "getLatestWindowStart_if_body@1",
      "stack_in": [],
      "op": "global Round",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2962": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2963": {
      "op": "frame_dig -2",
      "defined_out": [
        "start#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "start#0 (copy)"
      ]
    },
    "2965": {
      "op": "-",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2966": {
      "op": "frame_dig -1",
      "defined_out": [
        "interval#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "interval#0 (copy)"
      ]
    },
    "2968": {
      "op": "%",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "2969": {
      "op": "-",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2970": {
      "retsub": true,
      "op": "retsub"
    },
    "2971": {
      "block": "getLatestWindowStart_after_if_else@2",
      "stack_in": [],
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2973": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2974": {
      "op": "frame_dig -2",
      "defined_out": [
        "start#0 (copy)",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "start#0 (copy)"
      ]
    },
    "2976": {
      "op": "-",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "2977": {
      "op": "frame_dig -1",
      "defined_out": [
        "interval#0 (copy)",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0",
        "interval#0 (copy)"
      ]
    },
    "2979": {
      "op": "%",
      "defined_out": [
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%8#0"
      ]
    },
    "2980": {
      "op": "-",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2981": {
      "retsub": true,
      "op": "retsub"
    },
    "2982": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.getAuthAddr",
      "params": {},
      "block": "getAuthAddr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2983": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "2985": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2986": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2987": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "2989": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2990": {
      "op": "bz getAuthAddr_ternary_false@2",
      "stack_out": []
    },
    "2993": {
      "block": "getAuthAddr_ternary_true@1",
      "stack_in": [],
      "op": "global ZeroAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "2995": {
      "block": "getAuthAddr_ternary_merge@3",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "ternary_result%0#0"
      ]
    },
    "2996": {
      "block": "getAuthAddr_ternary_false@2",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "2998": {
      "op": "b getAuthAddr_ternary_merge@3"
    },
    "3001": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.createApplication",
      "params": {
        "controlledAddress#0": "bytes",
        "admin#0": "bytes"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3004": {
      "block": "createApplication_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3006": {
      "op": "frame_dig -2",
      "defined_out": [
        "controlledAddress#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAddress#0 (copy)"
      ]
    },
    "3008": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3009": {
      "op": "bnz createApplication_bool_true@2",
      "stack_out": []
    },
    "3012": {
      "block": "createApplication_or_contd@1",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3014": {
      "op": "frame_dig -1",
      "defined_out": [
        "admin#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "admin#0 (copy)"
      ]
    },
    "3016": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3017": {
      "op": "bz createApplication_bool_false@3",
      "stack_out": []
    },
    "3020": {
      "block": "createApplication_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "3021": {
      "block": "createApplication_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "sender must be either controlledAddress or admin",
      "op": "assert // sender must be either controlledAddress or admin",
      "defined_out": [],
      "stack_out": []
    },
    "3022": {
      "op": "frame_dig -1",
      "defined_out": [
        "admin#0 (copy)"
      ],
      "stack_out": [
        "admin#0 (copy)"
      ]
    },
    "3024": {
      "op": "frame_dig -2",
      "defined_out": [
        "admin#0 (copy)",
        "controlledAddress#0 (copy)"
      ],
      "stack_out": [
        "admin#0 (copy)",
        "controlledAddress#0 (copy)"
      ]
    },
    "3026": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3027": {
      "op": "assert",
      "stack_out": []
    },
    "3028": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "3030": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"admin\"",
        "admin#0 (copy)"
      ]
    },
    "3032": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3033": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3035": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%5#0",
        "controlledAddress#0 (copy)"
      ]
    },
    "3037": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "3038": {
      "op": "bz createApplication_ternary_false@6",
      "stack_out": []
    },
    "3041": {
      "block": "createApplication_ternary_true@5",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "3043": {
      "block": "createApplication_ternary_merge@7",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\""
      ],
      "stack_out": [
        "ternary_result%0#0",
        "\"controlled_address\""
      ]
    },
    "3045": {
      "op": "swap",
      "defined_out": [
        "\"controlled_address\"",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "\"controlled_address\"",
        "ternary_result%0#0"
      ]
    },
    "3046": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3047": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3050": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3053": {
      "retsub": true,
      "op": "retsub"
    },
    "3054": {
      "block": "createApplication_ternary_false@6",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "3056": {
      "op": "b createApplication_ternary_merge@7"
    },
    "3059": {
      "block": "createApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "3060": {
      "op": "b createApplication_bool_merge@4"
    },
    "3063": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_changeAdmin",
      "params": {
        "newAdmin#0": "bytes"
      },
      "block": "arc58_changeAdmin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3066": {
      "block": "arc58_changeAdmin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3068": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3069": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3071": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3072": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3073": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3074": {
      "error": "only admin can change the admin account",
      "op": "assert // only admin can change the admin account",
      "stack_out": []
    },
    "3075": {
      "op": "bytec 4 // \"admin\"",
      "stack_out": [
        "\"admin\""
      ]
    },
    "3077": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "newAdmin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "newAdmin#0 (copy)"
      ]
    },
    "3079": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3080": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3083": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3086": {
      "retsub": true,
      "op": "retsub"
    },
    "3087": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_pluginChangeAdmin",
      "params": {
        "plugin#0": "bytes",
        "allowedCaller#0": "bytes",
        "newAdmin#0": "bytes"
      },
      "block": "arc58_pluginChangeAdmin",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3090": {
      "block": "arc58_pluginChangeAdmin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3092": {
      "op": "frame_dig -3",
      "defined_out": [
        "plugin#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "plugin#0 (copy)"
      ]
    },
    "3094": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3095": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3097": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "value%0#0"
      ]
    },
    "3098": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3099": {
      "error": "sender must be admin plugin",
      "op": "assert // sender must be admin plugin",
      "stack_out": []
    },
    "3100": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3101": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "3103": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3104": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3105": {
      "op": "acct_params_get AcctAuthAddr",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "check%1#0"
      ]
    },
    "3107": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%1#0"
      ]
    },
    "3108": {
      "op": "frame_dig -3",
      "stack_out": [
        "value%1#0",
        "plugin#0 (copy)"
      ]
    },
    "3110": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "tmp%3#0"
      ]
    },
    "3111": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%2#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "value%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3113": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%1#0",
        "value%2#0"
      ]
    },
    "3114": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3115": {
      "error": "This plugin is not in control of the account",
      "op": "assert // This plugin is not in control of the account",
      "stack_out": []
    },
    "3116": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "3117": {
      "op": "frame_dig -3",
      "stack_out": [
        "0x",
        "plugin#0 (copy)"
      ]
    },
    "3119": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3120": {
      "op": "frame_dig -2",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3122": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "3123": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0"
      ]
    },
    "3124": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "\"p\""
      ]
    },
    "3125": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3126": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "3127": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3128": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%1#0"
      ]
    },
    "3130": {
      "op": "bz arc58_pluginChangeAdmin_bool_false@3",
      "stack_out": [
        "key#0"
      ]
    },
    "3133": {
      "block": "arc58_pluginChangeAdmin_and_contd@1",
      "stack_in": [
        "key#0"
      ],
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3134": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3136": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0"
      ]
    },
    "3137": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3138": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "key#0",
        "maybe_value%2#0"
      ]
    },
    "3139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3140": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "is_true%0#0"
      ]
    },
    "3141": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3142": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3143": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3145": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_bool%0#0"
      ]
    },
    "3146": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3147": {
      "op": "getbit",
      "defined_out": [
        "key#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%7#0"
      ]
    },
    "3148": {
      "op": "bz arc58_pluginChangeAdmin_bool_false@3",
      "stack_out": [
        "key#0"
      ]
    },
    "3151": {
      "block": "arc58_pluginChangeAdmin_bool_true@2",
      "stack_in": [
        "key#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "and_result%0#0"
      ]
    },
    "3152": {
      "block": "arc58_pluginChangeAdmin_bool_merge@4",
      "stack_in": [
        "key#0",
        "and_result%0#0"
      ],
      "error": "This plugin does not have admin privileges",
      "op": "assert // This plugin does not have admin privileges",
      "defined_out": [],
      "stack_out": [
        "key#0"
      ]
    },
    "3153": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "key#0",
        "\"admin\""
      ]
    },
    "3155": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "newAdmin#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "\"admin\"",
        "newAdmin#0 (copy)"
      ]
    },
    "3157": {
      "op": "app_global_put",
      "stack_out": [
        "key#0"
      ]
    },
    "3158": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3159": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3161": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%8#0"
      ]
    },
    "3162": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3163": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "key#0",
        "maybe_value%3#0"
      ]
    },
    "3164": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "3165": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "1",
        "1"
      ]
    },
    "3166": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0"
      ]
    },
    "3167": {
      "op": "bytec 9 // 0x01",
      "defined_out": [
        "0x01",
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "0x01"
      ]
    },
    "3169": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%10#0"
      ]
    },
    "3170": {
      "op": "bz arc58_pluginChangeAdmin_after_if_else@6",
      "stack_out": [
        "key#0"
      ]
    },
    "3173": {
      "block": "arc58_pluginChangeAdmin_if_body@5",
      "stack_in": [
        "key#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3176": {
      "block": "arc58_pluginChangeAdmin_after_if_else@6",
      "stack_in": [
        "key#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3179": {
      "retsub": true,
      "op": "retsub"
    },
    "3180": {
      "block": "arc58_pluginChangeAdmin_bool_false@3",
      "stack_in": [
        "key#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "and_result%0#0"
      ]
    },
    "3181": {
      "op": "b arc58_pluginChangeAdmin_bool_merge@4"
    },
    "3184": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_getAdmin",
      "params": {},
      "block": "arc58_getAdmin_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3185": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"admin\""
      ]
    },
    "3187": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3188": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3189": {
      "retsub": true,
      "op": "retsub"
    },
    "3190": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_verifyAuthAddr",
      "params": {},
      "block": "arc58_verifyAuthAddr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3191": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"spending_address\""
      ]
    },
    "3193": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3194": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3195": {
      "op": "acct_params_get AcctAuthAddr",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3197": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3198": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.getAuthAddr",
      "op": "callsub getAuthAddr",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "3201": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3202": {
      "op": "assert",
      "stack_out": []
    },
    "3203": {
      "op": "global ZeroAddress",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "3205": {
      "op": "bytec 6 // \"spending_address\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"spending_address\""
      ]
    },
    "3207": {
      "op": "swap",
      "stack_out": [
        "\"spending_address\"",
        "new_state_value%0#0"
      ]
    },
    "3208": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3209": {
      "retsub": true,
      "op": "retsub"
    },
    "3210": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyTo",
      "params": {
        "address#0": "bytes",
        "flash#0": "bytes"
      },
      "block": "arc58_rekeyTo",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3213": {
      "block": "arc58_rekeyTo_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3215": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3216": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3218": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3219": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3220": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3221": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "3222": {
      "op": "itxn_begin"
    },
    "3223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3224": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "3226": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3227": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3228": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3230": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "3231": {
      "op": "pushbytes \"rekeying abstracted account\"",
      "defined_out": [
        "\"rekeying abstracted account\"",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "\"rekeying abstracted account\""
      ]
    },
    "3260": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "3262": {
      "op": "itxn_field RekeyTo",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3264": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3266": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "3268": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3269": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3271": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3272": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3274": {
      "block": "arc58_rekeyTo_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "3275": {
      "op": "frame_dig -1",
      "defined_out": [
        "flash#0 (copy)"
      ],
      "stack_out": [
        "flash#0 (copy)"
      ]
    },
    "3277": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "flash#0 (copy)"
      ],
      "stack_out": [
        "flash#0 (copy)",
        "0"
      ]
    },
    "3278": {
      "op": "getbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3279": {
      "op": "bz arc58_rekeyTo_after_if_else@3",
      "stack_out": []
    },
    "3282": {
      "block": "arc58_rekeyTo_if_body@2",
      "stack_in": [],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertRekeysBack",
      "op": "callsub assertRekeysBack"
    },
    "3285": {
      "block": "arc58_rekeyTo_after_if_else@3",
      "stack_in": [],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3288": {
      "retsub": true,
      "op": "retsub"
    },
    "3289": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_canCall",
      "params": {
        "plugin#0": "bytes",
        "global#0": "uint64",
        "address#0": "bytes",
        "method#0": "bytes"
      },
      "block": "arc58_canCall",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "3292": {
      "block": "arc58_canCall_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "global#0 (copy)"
      ],
      "stack_out": [
        "global#0 (copy)"
      ]
    },
    "3294": {
      "op": "bz arc58_canCall_after_if_else@2",
      "stack_out": []
    },
    "3297": {
      "block": "arc58_canCall_if_body@1",
      "stack_in": [],
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3299": {
      "op": "frame_dig -4",
      "defined_out": [
        "plugin#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "plugin#0 (copy)"
      ]
    },
    "3301": {
      "op": "swap",
      "stack_out": [
        "plugin#0 (copy)",
        "tmp%0#0"
      ]
    },
    "3302": {
      "op": "frame_dig -1",
      "defined_out": [
        "method#0 (copy)",
        "plugin#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "plugin#0 (copy)",
        "tmp%0#0",
        "method#0 (copy)"
      ]
    },
    "3304": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCallAllowed",
      "op": "callsub pluginCallAllowed",
      "defined_out": [
        "{pluginCallAllowed}"
      ],
      "stack_out": [
        "{pluginCallAllowed}"
      ]
    },
    "3307": {
      "op": "pop",
      "stack_out": []
    },
    "3308": {
      "block": "arc58_canCall_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -4",
      "defined_out": [
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)"
      ]
    },
    "3310": {
      "op": "frame_dig -2",
      "defined_out": [
        "address#0 (copy)",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)",
        "address#0 (copy)"
      ]
    },
    "3312": {
      "op": "frame_dig -1",
      "defined_out": [
        "address#0 (copy)",
        "method#0 (copy)",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)",
        "address#0 (copy)",
        "method#0 (copy)"
      ]
    },
    "3314": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCallAllowed",
      "op": "callsub pluginCallAllowed",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3317": {
      "retsub": true,
      "op": "retsub"
    },
    "3318": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToPlugin",
      "params": {
        "plugin#0": "bytes",
        "global#0": "uint64",
        "methodOffsets#0": "bytes",
        "fundsRequest#0": "bytes"
      },
      "block": "arc58_rekeyToPlugin",
      "stack_in": [],
      "op": "proto 4 2"
    },
    "3321": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0"
      ]
    },
    "3322": {
      "op": "dupn 2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0"
      ]
    },
    "3324": {
      "block": "arc58_rekeyToPlugin_block@0",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0"
      ]
    },
    "3326": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0"
      ]
    },
    "3328": {
      "op": "frame_dig -4",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "plugin#0 (copy)"
      ]
    },
    "3330": {
      "op": "btoi",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3331": {
      "op": "frame_dig -3",
      "defined_out": [
        "fundsRequest%out#0",
        "global#0 (copy)",
        "methodOffsets%out#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "global#0 (copy)"
      ]
    },
    "3333": {
      "op": "bz arc58_rekeyToPlugin_ternary_false@2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3336": {
      "block": "arc58_rekeyToPlugin_ternary_true@1",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "global ZeroAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "ternary_result%0#0"
      ]
    },
    "3338": {
      "block": "arc58_rekeyToPlugin_ternary_merge@3",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "ternary_result%0#0"
      ],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "ternary_result%0#0",
        "0x"
      ]
    },
    "3339": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "ternary_result%0#0",
        "0x",
        "plugin#0 (copy)"
      ]
    },
    "3341": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "ternary_result%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3342": {
      "op": "swap",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "encoded_tuple_buffer%1#0",
        "ternary_result%0#0"
      ]
    },
    "3343": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0"
      ]
    },
    "3344": {
      "op": "dup",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0",
        "key#0"
      ]
    },
    "3345": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0"
      ]
    },
    "3347": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0",
        "\"p\""
      ]
    },
    "3348": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3349": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%0#0"
      ]
    },
    "3350": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3351": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%0#0"
      ]
    },
    "3352": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "key#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "3354": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "key#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%0#0",
        "2",
        "8"
      ]
    },
    "3355": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%1#0"
      ]
    },
    "3356": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%2#0"
      ]
    },
    "3357": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%2#0",
        "0"
      ]
    },
    "3358": {
      "op": "!=",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%3#0"
      ]
    },
    "3359": {
      "op": "bz arc58_rekeyToPlugin_else_body@5",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3362": {
      "block": "arc58_rekeyToPlugin_if_body@4",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "pluginApp#0"
      ]
    },
    "3364": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "pluginApp#0",
        "value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3366": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "value%0#0"
      ]
    },
    "3367": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "pluginApp#0",
        "value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "value%0#0",
        "\"spending_address\""
      ]
    },
    "3369": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "\"spending_address\"",
        "value%0#0"
      ]
    },
    "3370": {
      "op": "app_global_put",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3371": {
      "block": "arc58_rekeyToPlugin_after_if_else@6",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0"
      ]
    },
    "3373": {
      "op": "frame_dig -2",
      "defined_out": [
        "key#0",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "3375": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertValidGroup",
      "op": "callsub assertValidGroup",
      "defined_out": [
        "assertValidGroup%0#0",
        "assertValidGroup%1#0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "assertValidGroup%0#0",
        "assertValidGroup%1#0"
      ]
    },
    "3378": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "assertValidGroup%1#0",
        "assertValidGroup%0#0"
      ]
    },
    "3379": {
      "op": "frame_bury 0",
      "defined_out": [
        "assertValidGroup%0#0",
        "assertValidGroup%1#0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "assertValidGroup%1#0"
      ]
    },
    "3381": {
      "op": "frame_bury -2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3383": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "assertValidGroup%0#0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "1"
      ]
    },
    "3384": {
      "op": "bz arc58_rekeyToPlugin_after_if_else@8",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3387": {
      "block": "arc58_rekeyToPlugin_if_body@7",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "methodOffsets%out#0"
      ]
    },
    "3389": {
      "op": "frame_bury 3",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3391": {
      "block": "arc58_rekeyToPlugin_after_if_else@8",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0"
      ]
    },
    "3393": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0",
        "fundsRequest#0 (copy)"
      ]
    },
    "3395": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.transferFunds",
      "op": "callsub transferFunds",
      "defined_out": [
        "key#0",
        "transferFunds%0#0",
        "transferFunds%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "transferFunds%0#0",
        "transferFunds%1#0"
      ]
    },
    "3398": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "transferFunds%1#0",
        "transferFunds%0#0"
      ]
    },
    "3399": {
      "op": "frame_bury 2",
      "defined_out": [
        "key#0",
        "transferFunds%0#0",
        "transferFunds%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "transferFunds%1#0"
      ]
    },
    "3401": {
      "op": "frame_bury -1",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3403": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "transferFunds%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "1"
      ]
    },
    "3404": {
      "op": "bz arc58_rekeyToPlugin_after_if_else@10",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3407": {
      "block": "arc58_rekeyToPlugin_if_body@9",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "fundsRequest%out#0"
      ]
    },
    "3409": {
      "op": "frame_bury 4",
      "defined_out": [
        "fundsRequest%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3411": {
      "block": "arc58_rekeyToPlugin_after_if_else@10",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "key#0"
      ]
    },
    "3413": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3415": {
      "op": "itxn_begin"
    },
    "3416": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "0"
      ]
    },
    "3417": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "0",
        "\"spending_address\""
      ]
    },
    "3419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3420": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3421": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "3422": {
      "op": "bytec 6 // \"spending_address\"",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"spending_address\""
      ]
    },
    "3424": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3425": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3426": {
      "op": "frame_dig 5",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "pluginApp#0"
      ]
    },
    "3428": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0",
        "pluginApp#0",
        "value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3430": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "3431": {
      "op": "pushbytes \"rekeying to plugin app\"",
      "defined_out": [
        "\"rekeying to plugin app\"",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "\"rekeying to plugin app\""
      ]
    },
    "3455": {
      "op": "itxn_field Note",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "3457": {
      "op": "itxn_field RekeyTo",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3459": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3461": {
      "op": "itxn_field Sender",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3463": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "1"
      ]
    },
    "3464": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3466": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "0"
      ]
    },
    "3467": {
      "op": "itxn_field Fee",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3469": {
      "block": "arc58_rekeyToPlugin_next_txn@11",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "itxn_submit"
    },
    "3470": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "\"p\""
      ]
    },
    "3471": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3473": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%4#0"
      ]
    },
    "3474": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3475": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%4#0"
      ]
    },
    "3476": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "3477": {
      "op": "dup",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%4#0",
        "1",
        "1"
      ]
    },
    "3478": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%5#0"
      ]
    },
    "3479": {
      "op": "bytec 9 // 0x01",
      "defined_out": [
        "0x01",
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%5#0",
        "0x01"
      ]
    },
    "3481": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "tmp%6#0"
      ]
    },
    "3482": {
      "op": "bz arc58_rekeyToPlugin_after_if_else@13",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3485": {
      "block": "arc58_rekeyToPlugin_if_body@12",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3488": {
      "block": "arc58_rekeyToPlugin_after_if_else@13",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "methodOffsets%out#0"
      ]
    },
    "3490": {
      "op": "frame_dig 4",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0"
      ]
    },
    "3492": {
      "op": "frame_bury 1"
    },
    "3494": {
      "op": "frame_bury 0"
    },
    "3496": {
      "retsub": true,
      "op": "retsub"
    },
    "3497": {
      "block": "arc58_rekeyToPlugin_else_body@5",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "0"
      ]
    },
    "3498": {
      "op": "bytec 5 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3500": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3501": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%1#0"
      ]
    },
    "3502": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "maybe_value%1#0",
        "\"spending_address\""
      ]
    },
    "3504": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "\"spending_address\"",
        "maybe_value%1#0"
      ]
    },
    "3505": {
      "op": "app_global_put",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3506": {
      "op": "b arc58_rekeyToPlugin_after_if_else@6"
    },
    "3509": {
      "block": "arc58_rekeyToPlugin_ternary_false@2",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "ternary_result%0#0"
      ]
    },
    "3511": {
      "op": "b arc58_rekeyToPlugin_ternary_merge@3"
    },
    "3514": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToNamedPlugin",
      "params": {
        "name#0": "bytes",
        "global#0": "uint64",
        "methodOffsets#0": "bytes",
        "fundsRequest#0": "bytes"
      },
      "block": "arc58_rekeyToNamedPlugin",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "3517": {
      "block": "arc58_rekeyToNamedPlugin_block@0",
      "stack_in": [],
      "op": "bytec 7 // \"n\"",
      "defined_out": [
        "\"n\""
      ],
      "stack_out": [
        "\"n\""
      ]
    },
    "3519": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"n\"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "3521": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3522": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3523": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3524": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3525": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "8"
      ]
    },
    "3526": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3527": {
      "op": "frame_dig -3",
      "defined_out": [
        "global#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "global#0 (copy)"
      ]
    },
    "3529": {
      "op": "frame_dig -2",
      "defined_out": [
        "global#0 (copy)",
        "methodOffsets#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "global#0 (copy)",
        "methodOffsets#0 (copy)"
      ]
    },
    "3531": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest#0 (copy)",
        "global#0 (copy)",
        "methodOffsets#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "global#0 (copy)",
        "methodOffsets#0 (copy)",
        "fundsRequest#0 (copy)"
      ]
    },
    "3533": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToPlugin",
      "op": "callsub arc58_rekeyToPlugin",
      "defined_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ],
      "stack_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ]
    },
    "3536": {
      "op": "popn 2",
      "stack_out": []
    },
    "3538": {
      "retsub": true,
      "op": "retsub"
    },
    "3539": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addPlugin",
      "params": {
        "app#0": "bytes",
        "allowedCaller#0": "bytes",
        "admin#0": "bytes",
        "delegationType#0": "bytes",
        "lastValid#0": "bytes",
        "cooldown#0": "bytes",
        "methods#0": "bytes",
        "useAllowance#0": "bytes",
        "useRounds#0": "bytes"
      },
      "block": "arc58_addPlugin",
      "stack_in": [],
      "op": "proto 9 0"
    },
    "3542": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0"
      ]
    },
    "3543": {
      "op": "dupn 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0"
      ]
    },
    "3545": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0"
      ]
    },
    "3546": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3547": {
      "block": "arc58_addPlugin_block@0",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "3549": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3550": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3552": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3553": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3554": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "3555": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3556": {
      "op": "frame_dig -6",
      "defined_out": [
        "delegationType#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "delegationType#0 (copy)"
      ]
    },
    "3558": {
      "op": "bytec 9 // 0x01",
      "defined_out": [
        "0x01",
        "delegationType#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "delegationType#0 (copy)",
        "0x01"
      ]
    },
    "3560": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3561": {
      "op": "bz arc58_addPlugin_bool_false@3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3564": {
      "block": "arc58_addPlugin_and_contd@1",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3566": {
      "op": "frame_dig -8",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%3#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3568": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3569": {
      "op": "bz arc58_addPlugin_bool_false@3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3572": {
      "block": "arc58_addPlugin_bool_true@2",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "and_result%0#0"
      ]
    },
    "3573": {
      "block": "arc58_addPlugin_bool_merge@4",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "and_result%0#0"
      ],
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3574": {
      "error": "delegation type must not be self for global plugins",
      "op": "assert // delegation type must not be self for global plugins",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3575": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x"
      ]
    },
    "3576": {
      "op": "frame_dig -9",
      "defined_out": [
        "0x",
        "app#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x",
        "app#0 (copy)"
      ]
    },
    "3578": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3579": {
      "op": "frame_dig -8",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3581": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "key#0"
      ]
    },
    "3582": {
      "op": "frame_bury 0",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3584": {
      "op": "bytec 12 // 0x0000",
      "defined_out": [
        "0x0000",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x0000"
      ]
    },
    "3586": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "3587": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3588": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3590": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0"
      ]
    },
    "3591": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3593": {
      "block": "arc58_addPlugin_while_top@5",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "3595": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methods#0 (copy)",
        "0"
      ]
    },
    "3596": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "3597": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%6#0",
        "i#0"
      ]
    },
    "3599": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "3600": {
      "op": "bz arc58_addPlugin_after_while@7",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3603": {
      "block": "arc58_addPlugin_while_body@6",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3605": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "3608": {
      "op": "frame_dig -3",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "methods#0 (copy)"
      ]
    },
    "3610": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3613": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "3615": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "3616": {
      "op": "cover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "3618": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "3620": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3621": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "12"
      ]
    },
    "3623": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "3624": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "0"
      ]
    },
    "3625": {
      "op": "intc_3 // 4",
      "defined_out": [
        "0",
        "4",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "0",
        "4"
      ]
    },
    "3626": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3627": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "3628": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "3630": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3633": {
      "op": "dig 1",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3635": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "3637": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%1#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3638": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "12"
      ]
    },
    "3640": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "3641": {
      "op": "intc_3 // 4",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3642": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%10#0",
        "4",
        "8"
      ]
    },
    "3643": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "3644": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%11#0",
        "0x"
      ]
    },
    "3645": {
      "op": "uncover 3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%11#0",
        "0x",
        "tmp%9#0"
      ]
    },
    "3647": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3648": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%4#0",
        "tmp%11#0"
      ]
    },
    "3649": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3650": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "3652": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3653": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0",
        "0x"
      ]
    },
    "3654": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3655": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "3656": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "3657": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "3658": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded%0#0"
      ]
    },
    "3659": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "3661": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "3662": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "3663": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "3664": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "3665": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "20"
      ]
    },
    "3667": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "3668": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "3669": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "3672": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "3673": {
      "op": "concat",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3674": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0"
      ]
    },
    "3676": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3677": {
      "op": "+",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0"
      ]
    },
    "3678": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3680": {
      "op": "b arc58_addPlugin_while_top@5"
    },
    "3683": {
      "block": "arc58_addPlugin_after_while@7",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "useRounds#0 (copy)"
      ]
    },
    "3685": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "useRounds#0 (copy)",
        "0"
      ]
    },
    "3686": {
      "op": "getbit",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "3687": {
      "op": "bz arc58_addPlugin_ternary_false@9",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3690": {
      "block": "arc58_addPlugin_ternary_true@8",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "3692": {
      "block": "arc58_addPlugin_ternary_merge@10",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "ternary_result%0#0"
      ],
      "op": "frame_bury 3",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3694": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "3696": {
      "op": "frame_bury 2",
      "defined_out": [
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3698": {
      "op": "frame_dig -2",
      "defined_out": [
        "epochRef#0",
        "spendingApp#0",
        "useAllowance#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "useAllowance#0 (copy)"
      ]
    },
    "3700": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "useAllowance#0 (copy)",
        "0"
      ]
    },
    "3701": {
      "op": "getbit",
      "defined_out": [
        "epochRef#0",
        "spendingApp#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "3702": {
      "op": "bz arc58_addPlugin_after_if_else@13",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3705": {
      "block": "arc58_addPlugin_if_body@11",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "3706": {
      "op": "frame_dig -9",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "app#0 (copy)"
      ]
    },
    "3708": {
      "op": "btoi",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "to_encode%0#0"
      ]
    },
    "3709": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3710": {
      "op": "bytec 13 // method \"createApplication(uint64)void\"",
      "defined_out": [
        "Method(createApplication(uint64)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(createApplication(uint64)void)"
      ]
    },
    "3712": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3714": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3716": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3717": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3719": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3720": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3722": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3723": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3725": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3726": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3728": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "1"
      ]
    },
    "3729": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3731": {
      "op": "bytec 14 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "CoEBQw=="
      ]
    },
    "3733": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3735": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        ""
      ]
    },
    "3736": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3738": {
      "op": "bytec 15 // base64(CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ==)",
      "defined_out": [
        "CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ=="
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ=="
      ]
    },
    "3740": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3742": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        ""
      ]
    },
    "3743": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3746": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3748": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "appl"
      ]
    },
    "3750": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3752": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3753": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3755": {
      "block": "arc58_addPlugin_next_txn@12",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "3756": {
      "op": "gitxn 0 CreatedApplicationID",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "to_encode%1#0"
      ]
    },
    "3759": {
      "op": "itob",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "3760": {
      "op": "frame_bury 2",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3762": {
      "block": "arc58_addPlugin_after_if_else@13",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "copy%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0"
      ]
    },
    "3764": {
      "op": "frame_dig 3",
      "defined_out": [
        "copy%0#0",
        "epochRef#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "epochRef#0"
      ]
    },
    "3766": {
      "op": "itob",
      "defined_out": [
        "copy%0#0",
        "epochRef#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0"
      ]
    },
    "3767": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "copy%0#0",
        "epochRef#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "0x"
      ]
    },
    "3768": {
      "op": "frame_dig -7",
      "defined_out": [
        "0x",
        "admin#0 (copy)",
        "copy%0#0",
        "epochRef#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "0x",
        "admin#0 (copy)"
      ]
    },
    "3770": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%8#0",
        "epochRef#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3771": {
      "op": "frame_dig -6",
      "defined_out": [
        "copy%0#0",
        "delegationType#0 (copy)",
        "encoded_tuple_buffer%8#0",
        "epochRef#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0",
        "delegationType#0 (copy)"
      ]
    },
    "3773": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%9#0",
        "epochRef#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3774": {
      "op": "frame_dig 2",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%9#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%9#0",
        "spendingApp#0"
      ]
    },
    "3776": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%10#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3777": {
      "op": "frame_dig -5",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%10#0",
        "epochRef#0",
        "lastValid#0 (copy)",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%10#0",
        "lastValid#0 (copy)"
      ]
    },
    "3779": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%11#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3780": {
      "op": "frame_dig -4",
      "defined_out": [
        "cooldown#0 (copy)",
        "copy%0#0",
        "encoded_tuple_buffer%11#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%11#0",
        "cooldown#0 (copy)"
      ]
    },
    "3782": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3783": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "copy%0#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0",
        "45"
      ]
    },
    "3785": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "copy%0#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0",
        "as_bytes%1#0"
      ]
    },
    "3786": {
      "op": "extract 6 2",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "offset_as_uint16%0#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0",
        "offset_as_uint16%0#0"
      ]
    },
    "3789": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%13#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3790": {
      "op": "frame_dig -2",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%13#0",
        "epochRef#0",
        "spendingApp#0",
        "useAllowance#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%13#0",
        "useAllowance#0 (copy)"
      ]
    },
    "3792": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3793": {
      "op": "frame_dig -1",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "spendingApp#0",
        "useRounds#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "useRounds#0 (copy)"
      ]
    },
    "3795": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "spendingApp#0",
        "useRounds#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "useRounds#0 (copy)",
        "0"
      ]
    },
    "3796": {
      "op": "getbit",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0"
      ]
    },
    "3797": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3798": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0",
        "225"
      ]
    },
    "3800": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "225",
        "is_true%0#0"
      ]
    },
    "3802": {
      "op": "setbit",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%15#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3803": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "copy%0#0",
        "encoded_tuple_buffer%15#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%15#0",
        "0x0000000000000000"
      ]
    },
    "3805": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%16#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3806": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%2#0"
      ]
    },
    "3807": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%17#0",
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3808": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%17#0",
        "copy%0#0"
      ]
    },
    "3809": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3810": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\""
      ]
    },
    "3811": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3813": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%14#0"
      ]
    },
    "3814": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "3815": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0",
        "tmp%14#0",
        "{box_del}"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%14#0",
        "{box_del}"
      ]
    },
    "3816": {
      "op": "pop",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%14#0"
      ]
    },
    "3817": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%14#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3818": {
      "op": "box_put",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3819": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3822": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3825": {
      "retsub": true,
      "op": "retsub"
    },
    "3826": {
      "block": "arc58_addPlugin_ternary_false@9",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "3828": {
      "op": "b arc58_addPlugin_ternary_merge@10"
    },
    "3831": {
      "block": "arc58_addPlugin_bool_false@3",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "and_result%0#0"
      ]
    },
    "3832": {
      "op": "b arc58_addPlugin_bool_merge@4"
    },
    "3835": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removePlugin",
      "params": {
        "app#0": "bytes",
        "allowedCaller#0": "bytes"
      },
      "block": "arc58_removePlugin",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3838": {
      "block": "arc58_removePlugin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3840": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3841": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3843": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3844": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3845": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3846": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "3847": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "3848": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "app#0 (copy)"
      ],
      "stack_out": [
        "0x",
        "app#0 (copy)"
      ]
    },
    "3850": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3851": {
      "op": "frame_dig -1",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3853": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "3854": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3855": {
      "op": "dig 1",
      "defined_out": [
        "\"p\"",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "3857": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%2#0"
      ]
    },
    "3858": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3859": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%1#0"
      ]
    },
    "3861": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "key#0"
      ]
    },
    "3862": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3863": {
      "op": "swap",
      "stack_out": [
        "\"p\"",
        "key#0"
      ]
    },
    "3864": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3865": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "3866": {
      "op": "pop",
      "stack_out": []
    },
    "3867": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3870": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3873": {
      "retsub": true,
      "op": "retsub"
    },
    "3874": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addNamedPlugin",
      "params": {
        "name#0": "bytes",
        "app#0": "bytes",
        "allowedCaller#0": "bytes",
        "admin#0": "bytes",
        "delegationType#0": "bytes",
        "lastValid#0": "bytes",
        "cooldown#0": "bytes",
        "methods#0": "bytes",
        "useAllowance#0": "bytes",
        "useRounds#0": "bytes"
      },
      "block": "arc58_addNamedPlugin",
      "stack_in": [],
      "op": "proto 10 0"
    },
    "3877": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0"
      ]
    },
    "3878": {
      "block": "arc58_addNamedPlugin_block@0",
      "stack_in": [
        "spendingApp#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0"
      ]
    },
    "3880": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3881": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3883": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3884": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3885": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%1#0"
      ]
    },
    "3886": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": [
        "spendingApp#0"
      ]
    },
    "3887": {
      "op": "frame_dig -10",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "name#0 (copy)"
      ]
    },
    "3889": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%2#0"
      ]
    },
    "3892": {
      "op": "bytec 7 // \"n\"",
      "defined_out": [
        "\"n\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%2#0",
        "\"n\""
      ]
    },
    "3894": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "\"n\"",
        "tmp%2#0"
      ]
    },
    "3895": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%3#0"
      ]
    },
    "3896": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3897": {
      "op": "bury 1",
      "stack_out": [
        "spendingApp#0",
        "maybe_exists%1#0"
      ]
    },
    "3899": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%4#0"
      ]
    },
    "3900": {
      "op": "assert",
      "stack_out": [
        "spendingApp#0"
      ]
    },
    "3901": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "spendingApp#0",
        "0x"
      ]
    },
    "3902": {
      "op": "frame_dig -9",
      "defined_out": [
        "0x",
        "app#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "0x",
        "app#0 (copy)"
      ]
    },
    "3904": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3905": {
      "op": "frame_dig -8",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3907": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0"
      ]
    },
    "3908": {
      "op": "dup",
      "defined_out": [
        "copy%0#0",
        "key#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0"
      ]
    },
    "3909": {
      "op": "frame_dig -10",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "name#0 (copy)"
      ]
    },
    "3911": {
      "op": "extract 2 0",
      "defined_out": [
        "copy%0#0",
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "tmp%5#0"
      ]
    },
    "3914": {
      "op": "bytec 7 // \"n\"",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "tmp%5#0",
        "\"n\""
      ]
    },
    "3916": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "\"n\"",
        "tmp%5#0"
      ]
    },
    "3917": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "tmp%6#0"
      ]
    },
    "3918": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "tmp%6#0",
        "copy%0#0"
      ]
    },
    "3919": {
      "op": "box_put",
      "stack_out": [
        "spendingApp#0",
        "key#0"
      ]
    },
    "3920": {
      "op": "bytec 12 // 0x0000",
      "defined_out": [
        "0x0000",
        "key#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "0x0000"
      ]
    },
    "3922": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "0x0000",
        "0x"
      ]
    },
    "3923": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0"
      ]
    },
    "3924": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "3925": {
      "block": "arc58_addNamedPlugin_while_top@1",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "3927": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "methods#0 (copy)",
        "0"
      ]
    },
    "3928": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "3929": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%7#0",
        "i#0"
      ]
    },
    "3931": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "3932": {
      "op": "bz arc58_addNamedPlugin_after_while@3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "3935": {
      "block": "arc58_addNamedPlugin_while_body@2",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3937": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "3940": {
      "op": "frame_dig -3",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "methods#0 (copy)"
      ]
    },
    "3942": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3945": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "3947": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "3948": {
      "op": "cover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "3950": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "3952": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3953": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "12"
      ]
    },
    "3955": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3956": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0",
        "0"
      ]
    },
    "3957": {
      "op": "intc_3 // 4",
      "defined_out": [
        "0",
        "4",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0",
        "0",
        "4"
      ]
    },
    "3958": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "3959": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0"
      ]
    },
    "3960": {
      "op": "frame_dig -3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "3962": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3965": {
      "op": "dig 1",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3967": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "3969": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%1#0",
        "methodInfos#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3970": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "12"
      ]
    },
    "3972": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "3973": {
      "op": "intc_3 // 4",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "tmp%11#0",
        "4"
      ]
    },
    "3974": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "tmp%11#0",
        "4",
        "8"
      ]
    },
    "3975": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "3976": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%10#0",
        "i#0",
        "tmp%12#0",
        "0x"
      ]
    },
    "3977": {
      "op": "uncover 3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%12#0",
        "0x",
        "tmp%10#0"
      ]
    },
    "3979": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%12#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3980": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%4#0",
        "tmp%12#0"
      ]
    },
    "3981": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3982": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "3984": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3985": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0",
        "0x"
      ]
    },
    "3986": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3987": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "3988": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "3989": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "3990": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded%0#0"
      ]
    },
    "3991": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "3993": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "3994": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "3995": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "3996": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "3997": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "20"
      ]
    },
    "3999": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "4000": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "4001": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "4004": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "4005": {
      "op": "concat",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "4006": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0"
      ]
    },
    "4008": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4009": {
      "op": "+",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0"
      ]
    },
    "4010": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4012": {
      "op": "b arc58_addNamedPlugin_while_top@1"
    },
    "4015": {
      "block": "arc58_addNamedPlugin_after_while@3",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "4017": {
      "op": "frame_bury 0",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4019": {
      "op": "frame_dig -2",
      "defined_out": [
        "spendingApp#0",
        "useAllowance#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "useAllowance#0 (copy)"
      ]
    },
    "4021": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "useAllowance#0 (copy)",
        "0"
      ]
    },
    "4022": {
      "op": "getbit",
      "defined_out": [
        "spendingApp#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "4023": {
      "op": "bz arc58_addNamedPlugin_after_if_else@6",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4026": {
      "block": "arc58_addNamedPlugin_if_body@4",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "4027": {
      "op": "frame_dig -9",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "app#0 (copy)"
      ]
    },
    "4029": {
      "op": "btoi",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "to_encode%0#0"
      ]
    },
    "4030": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4031": {
      "op": "bytec 13 // method \"createApplication(uint64)void\"",
      "defined_out": [
        "Method(createApplication(uint64)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(createApplication(uint64)void)"
      ]
    },
    "4033": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4035": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4037": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4038": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4040": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4041": {
      "op": "itxn_field LocalNumUint",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4043": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4044": {
      "op": "itxn_field LocalNumByteSlice",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4046": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4047": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4049": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "1"
      ]
    },
    "4050": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4052": {
      "op": "bytec 14 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "CoEBQw=="
      ]
    },
    "4054": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4056": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        ""
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        ""
      ]
    },
    "4057": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4059": {
      "op": "bytec 15 // base64(CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ==)",
      "defined_out": [
        "CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ=="
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "CiACAAEmAQlwbHVnaW5faWQxGyITQQCANhoAgASXO2FvgASPFbWCgAQ+oRgygAQkh8MsTwSOBABEADMAFAACIkMxGYEFEkQxGCITRIgArSNC/+0xGSISRDEYIhNEMRYjCUk4ECMSRDYaAReIAEsjQv/OMRkiEkQxGCITRIgAJCNC/70xGSISRDEYIhJENhoBF4gAByNC/6hC/6SKAQAoi/9niTEAMgkSRLEyCbIgIrIII7IQIrIBs4mKAgAxADIJEkAADTEAIihlRHIIRBJBACcjRIv+OAcyChJEi/44CDIQEkSxMgqL/7IRIrISshSBBLIQIrIBs4kiQv/WiQ=="
      ]
    },
    "4061": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4063": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        ""
      ]
    },
    "4064": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4066": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4067": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4069": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "appl"
      ]
    },
    "4071": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4074": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4076": {
      "block": "arc58_addNamedPlugin_next_txn@5",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "4077": {
      "op": "gitxn 0 CreatedApplicationID",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "to_encode%1#0"
      ]
    },
    "4080": {
      "op": "itob",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "4081": {
      "op": "frame_bury 0",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4083": {
      "block": "arc58_addNamedPlugin_after_if_else@6",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "useRounds#0 (copy)"
      ]
    },
    "4085": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "useRounds#0 (copy)",
        "0"
      ]
    },
    "4086": {
      "op": "getbit",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "4087": {
      "op": "bz arc58_addNamedPlugin_ternary_false@8",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4090": {
      "block": "arc58_addNamedPlugin_ternary_true@7",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "4092": {
      "block": "arc58_addNamedPlugin_ternary_merge@9",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "copy%1#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "copy%1#0"
      ]
    },
    "4094": {
      "op": "swap",
      "defined_out": [
        "copy%1#0",
        "epochRef#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "epochRef#0"
      ]
    },
    "4095": {
      "op": "itob",
      "defined_out": [
        "copy%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "4096": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "copy%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "0x"
      ]
    },
    "4097": {
      "op": "frame_dig -7",
      "defined_out": [
        "0x",
        "admin#0 (copy)",
        "copy%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "0x",
        "admin#0 (copy)"
      ]
    },
    "4099": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "4100": {
      "op": "frame_dig -6",
      "defined_out": [
        "copy%1#0",
        "delegationType#0 (copy)",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0",
        "delegationType#0 (copy)"
      ]
    },
    "4102": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "4103": {
      "op": "frame_dig 0",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%9#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%9#0",
        "spendingApp#0"
      ]
    },
    "4105": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%10#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "4106": {
      "op": "frame_dig -5",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%10#0",
        "lastValid#0 (copy)",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%10#0",
        "lastValid#0 (copy)"
      ]
    },
    "4108": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%11#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "4109": {
      "op": "frame_dig -4",
      "defined_out": [
        "cooldown#0 (copy)",
        "copy%1#0",
        "encoded_tuple_buffer%11#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%11#0",
        "cooldown#0 (copy)"
      ]
    },
    "4111": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%12#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "4112": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "copy%1#0",
        "encoded_tuple_buffer%12#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0",
        "45"
      ]
    },
    "4114": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "copy%1#0",
        "encoded_tuple_buffer%12#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0",
        "as_bytes%1#0"
      ]
    },
    "4115": {
      "op": "extract 6 2",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%12#0",
        "offset_as_uint16%0#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%12#0",
        "offset_as_uint16%0#0"
      ]
    },
    "4118": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%13#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "4119": {
      "op": "frame_dig -2",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%13#0",
        "spendingApp#0",
        "useAllowance#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%13#0",
        "useAllowance#0 (copy)"
      ]
    },
    "4121": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "4122": {
      "op": "frame_dig -1",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "spendingApp#0",
        "useRounds#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "useRounds#0 (copy)"
      ]
    },
    "4124": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "spendingApp#0",
        "useRounds#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "useRounds#0 (copy)",
        "0"
      ]
    },
    "4125": {
      "op": "getbit",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0"
      ]
    },
    "4126": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "4127": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0",
        "225"
      ]
    },
    "4129": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%14#0",
        "225",
        "is_true%0#0"
      ]
    },
    "4131": {
      "op": "setbit",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%15#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "4132": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "copy%1#0",
        "encoded_tuple_buffer%15#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%15#0",
        "0x0000000000000000"
      ]
    },
    "4134": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%16#0",
        "spendingApp#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "4135": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%2#0"
      ]
    },
    "4136": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%17#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "4137": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%17#0",
        "copy%1#0"
      ]
    },
    "4138": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "4139": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\""
      ]
    },
    "4140": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\"",
        "key#0"
      ]
    },
    "4142": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%15#0"
      ]
    },
    "4143": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0",
        "tmp%15#0",
        "tmp%15#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%15#0",
        "tmp%15#0 (copy)"
      ]
    },
    "4144": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0",
        "tmp%15#0",
        "{box_del}"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%15#0",
        "{box_del}"
      ]
    },
    "4145": {
      "op": "pop",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%15#0"
      ]
    },
    "4146": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%15#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "4147": {
      "op": "box_put",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4148": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4151": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4154": {
      "retsub": true,
      "op": "retsub"
    },
    "4155": {
      "block": "arc58_addNamedPlugin_ternary_false@8",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "4157": {
      "op": "b arc58_addNamedPlugin_ternary_merge@9"
    },
    "4160": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removeNamedPlugin",
      "params": {
        "name#0": "bytes"
      },
      "block": "arc58_removeNamedPlugin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4163": {
      "block": "arc58_removeNamedPlugin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4165": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "4166": {
      "op": "bytec 4 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "4168": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4169": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "4170": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4171": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "4172": {
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "4174": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4177": {
      "op": "bytec 7 // \"n\"",
      "defined_out": [
        "\"n\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"n\""
      ]
    },
    "4179": {
      "op": "swap",
      "stack_out": [
        "\"n\"",
        "tmp%2#0"
      ]
    },
    "4180": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "4181": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4182": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "4184": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": []
    },
    "4185": {
      "op": "frame_dig -1",
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "4187": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4190": {
      "op": "bytec 7 // \"n\"",
      "stack_out": [
        "tmp%4#0",
        "\"n\""
      ]
    },
    "4192": {
      "op": "swap",
      "stack_out": [
        "\"n\"",
        "tmp%4#0"
      ]
    },
    "4193": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "4194": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4195": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "4196": {
      "op": "bytec_1 // \"p\"",
      "defined_out": [
        "\"p\"",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "\"p\""
      ]
    },
    "4197": {
      "op": "dig 1",
      "defined_out": [
        "\"p\"",
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "\"p\"",
        "app#0 (copy)"
      ]
    },
    "4199": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#0"
      ]
    },
    "4200": {
      "op": "box_len",
      "defined_out": [
        "app#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "app#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4201": {
      "op": "bury 1",
      "stack_out": [
        "app#0",
        "maybe_exists%3#0"
      ]
    },
    "4203": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "app#0"
      ]
    },
    "4204": {
      "op": "frame_dig -1",
      "stack_out": [
        "app#0",
        "name#0 (copy)"
      ]
    },
    "4206": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0"
      ]
    },
    "4209": {
      "op": "bytec 7 // \"n\"",
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "\"n\""
      ]
    },
    "4211": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "\"n\"",
        "tmp%7#0"
      ]
    },
    "4212": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#0"
      ]
    },
    "4213": {
      "op": "box_del",
      "defined_out": [
        "app#0",
        "{box_del}"
      ],
      "stack_out": [
        "app#0",
        "{box_del}"
      ]
    },
    "4214": {
      "op": "pop",
      "stack_out": [
        "app#0"
      ]
    },
    "4215": {
      "op": "bytec_1 // \"p\"",
      "stack_out": [
        "app#0",
        "\"p\""
      ]
    },
    "4216": {
      "op": "swap",
      "stack_out": [
        "\"p\"",
        "app#0"
      ]
    },
    "4217": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "4218": {
      "op": "box_del",
      "stack_out": [
        "{box_del}"
      ]
    },
    "4219": {
      "op": "pop",
      "stack_out": []
    },
    "4220": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4223": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4226": {
      "retsub": true,
      "op": "retsub"
    }
  }
}