{
  "version": 3,
  "sources": [
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/abstracted_account.algo.ts",
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/constants.ts",
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/types.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAg7BE;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAh7BF;;;AAAA;AAAA;;;AAAA;;;AAAA;AAg7BE;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAhDA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAh4BF;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAg4BE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AArCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA31BF;;;AAAA;;;AA21BE;;;AAAA;;;;AAvFA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApwBF;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;;;AAAA;AAowBE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAtDA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA9sBF;;;AAAA;AAAA;;;AA8sBE;;;AAAA;;;;AA3FA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnnBF;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;;;AAAA;AAmnBE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAtBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7lBF;;;AAAA;;;AAAA;;;;AAAA;AAAA;;;AAAA;;;AA6lBE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AA7DA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhiBF;;;AAAA;AAAA;;;;AAAA;AAAA;;;AAAA;;;AAgiBE;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;;;AAtBC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1gBH;;;AAAA;AAAA;;;;AAAA;AAAA;;;AAAA;;;AA0gBG;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA1BD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhfF;;;AAAA;;;;AAAA;AAgfE;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AARC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA7BD;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhcF;;;AAAA;AAAA;;;AAAA;;;AAgcE;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjbF;;;AAibE;;;AAAA;;;;AAtBC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3ZH;;;AAAA;;;AAAA;;;AAAA;AAAA;;AA2ZG;;AAAA;;AAAA;;AAAA;;;AAAA;;;;;;;AAxXyC;;AC1CqB;;;;;;;;;;;;;;;;;;;;;;;AD0C7D;AAAA;;AAI+B;;AC7CqB;;;;;;;;;;;;;AD6CpD;AAAA;;AAGF;;;;;;;AAEiB;;AAAA;AADH;AAAA;AAAA;AAAA;;AAAA;AAAN;AC5CqC;AAAA;AAAA;ADiDpB;AAAA;;AAAnB;;;AACK;AAAP;;AAAA;AClDyC;AAAA;;AAAA;ADqDT;AAAA;AAAM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAlC;AAAA;;AACsB;AAAA;AAAS;AAAjB;AAA6B;AAAR;AAArB;;AAAA;AAAhB;;AACiB;AAAZ;;AAA2B;;AAAA;AAAA;AAAZ;;AAAA;AAAxB;;;AACM;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAX;;AAAA;AAAJ;;;AACkB;AAAhB;;ACzDuC;AAAA;;AAAA;AD8DQ;AAAA;AAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAJ;;AAAA;;AAAA;;AACW;;;AAAqB;;AAAhC;AAAA;;AAGJ;;AAAA;AAAA;;;AACC;;AAAA;;AAAA;AAAD;;AAAA;AADA;;;;AAAA;;AAAA;AADF;;AAAA;;;;;AAFqD;;;;;AART;;AAAK;AAAL;AAAA;;;;;;;;AAiB9C;;;AAGQ;;AAAA;;AClFqD;AAAA;AAAA;AAAA;ADkFzD;AAAA;;;AACI;;AAAA;;AAAmB;;AAAvB;AADA;;;AAGO;AAAP;AAII;;AAAA;;AAAyB;;AAA7B;AAAA;;;AACO;;AAAA;;AAAiB;;AAArB;AADH;;;AAEO;;AAAA;;AAAe;AAAnB;AAFH;;;AAGO;;AAAA;;AAAkC;AAAtC;AAHH;;;AAIG;;AAAY;AAAZ;;AAAmB;;AAAnB;AAJH;;;;AADF;;;;;AASF;;;AACmB;AACS;;AAAa;AAAjB;AAAgC;;AAAX;;AAAA;AAA3C;;;AACQ;;AAEF;;;AAAJ;;;AACe;AAAb;;AAKJ;;AAAA;;AATiE;;AAAK;AAAL;AAAA;;;;;;;;AAYnE;;;;;;;ACxG6C;AAAA;;AAAA;AD0GV;AAAA;;AAA3B;AACF;;;AAEQ;AACC;AACI;;AAEU;AAChB;AANT;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AC5GyC;AAAA;;AAAA;ADsHiB;AAAA;AAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAb;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACW;;;AAA8B;;AAEzC;AAAA;;AAAU;AAAV;;AACA;;AAAA;AAAA;;AAAoC;AAAtB;AAAd;;AACc;;AAAA;AAAD;AAAb;;AAC2C;;AAAA;AAAA;AAAS;AAA5B;AAAxB;;AAEQ;;AAAA;;;AAAU;;AAAA;;;AAAY;;AAAA;;;;AAEpC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;AAT8D;;;;;AAmBhE;;;;;;;AAOgB;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;;;AAAR;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;;AACF;;AAAA;;AAAA;;AAAA;;AAAA;;AAEiB;AACI;AACD;AAJpB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AASe;;AAAA;AAAA;AADb;;AAEiB;AAFjB;;AAGgB;AAHhB;;;;;;AAMJ;;;AACqC;;AAAA;AAAA;AAA5B;;AAAA;AAAP;AACoC;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA2B;AAAtD;;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;AAAT;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAMO;;AAAA;;;AAAA;;AAAA;;;;AAHT;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;AAaF;;;;;;;;;;;ACpL6C;AAAA;;AAAA;ADsLR;AAAA;AAAM;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAU;AAAlC;;;AACN;;AADL;;AAIe;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAAf;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAEN;AACO;AAAP;AACO;AAAP;AAEiB;AAAb;;AACsB;AAAtB;;AAEsB;;AAAa;AAAjB;AAAb;;AAA6C;;AAAX;;AAAA;AAA3C;;;AACQ;;AAAA;AAAA;;AAEF;;;AAAJ;;;AACe;AAAb;;AA2BJ;;AAAA;;;;;;;;;;AAvBU;;AAAA;;AAAyB;;AAA7B;AAAJ;;;AAR+D;;AAAK;AAAL;AAAA;;;;;AAYpD;;AAAA;AAAA;;AAAiB;;AAAA;AAAA;AAAA;AAAY;AAAjC;AAAP;AACW;AAAA;;AAAkC;AAAtC;AAAP;AAGW;AAAA;;AAAa;AAAjB;AAAP;AACwB;AAAY;AAAZ;;AAAL;AAAiC;;AAA7C;AAAP;AAEc;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;AAAA;;AAAA;;;;;;;;;;AAAR;;AAAA;;AAAA;AAEC;AAAP;AACA;AAEA;;AAAA;;;AACuC;;AAAA;AC5NE;AAAA;;AAAA;AD4NrB;AAAA;AAAA;AAAlB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAGF;;AAAe;AAAf;AAAA;;;;;;;;AAvCS;;;;;AAqDb;;;;AAEa;;AAAY;AAAZ;;AAAJ;AAAwB;AAAxB;AAAP;AACuC;;AAAY;AAAZ;;AAAnB;AAAA;AAAA;AAAA;AAAA;AChPuB;AAAA;;AAAA;ADkPT;AAAA;AAAM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAlC;AACgB;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAhB;AAE4B;AAAA;AAAA;AAAS;AAAS;AAAhC;ACrPuB;AAAA;;AAAA;ADuPP;AAAA;AAAM;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAU;AAA9C;AAEW;;;AAAmB;;AACS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAW;AAApC;AAA4D;;AAAA;AAAA;AAAA;AAAS;AAAtE;AAAb;;AAEY;AAAA;AAAA;AAAd;;AAAA;AAAA;;;AAA2C;;AAAA;;;AAAgB;;AAAA;;;AAE7D;;AAAA;;;AACqB;;AAAA;;;AACI;;AAAnB;AAGJ;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;ACnQuC;AAAA;;AAAA;ADsQhB;AAAA;AADsB;AAAA;AAAA;;AAAA;AAAA;;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;AAAA;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;AAAA;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;AAAA;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;AAAA;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;AAAA;AAAA;ACrQN;AAAA;;AAAA;ADsQhB;AAAA;AADsB;;AAAA;AAAA;AAAnB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;ACrQa;AAAA;;AAAA;ADqQvC;AAAA;;AAAA;AAAA;AAOe;AADjB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAVyB;;AAAnB;;;;AAkBS;AACI;AACD;AAHpB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAzBmD;;;;;AAgCrD;;;;;;;;AACuB;AAAqB;;AAAA;AAAA;AAAlB;;AAAA;AAAxB;;;AAC2C;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AC3RmC;AAAA;;AAAA;AD4RmB;AAAA;AAAzC;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAGE;;AAAA;AAAA;;AAAA;AACF;;AAAA;AAAA;AAAA;AACV;;AAAA;AAAA;AAHY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMrB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAOsB;AAAlB;AAAJ;;;AACE;ACnTuD;AAAA;AAAA;AAAA;AAIF;AAAA;;AAAA;AAAA;AD8RjD;;AAAA;;;;;;;;;;AAiBJ;;;AAMS;;;AANT;AAlB8C;;AAAK;AAAL;AAAA;;;;;AA4B9C;AC7TuD;AAAA;AAAA;AAAA;AAIF;AAAA;;AAAA;AAAA;AD8RjD;;;;;;;;AA2BJ;;;AAKS;;;AALT;;;;;;;;;;;;;AAYN;;;;;;;AChUgD;AAAA;;AAAA;ADsUlB;AAAA;;AAA5B;ACtU8C;AAAA;;AAAA;ADuUuD;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAhD;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AACe;;AAAA;;;AACE;;AAAnB;AADE;;AAIF;;AElUkD;;AFkUlD;AAAJ;;;AACQ;;AAAA;;AAAA;AAAA;;AAAmB;AACnB;;AAEC;AAAA;;AAAA;AAAP;AAE+C;AAAZ;AClVS;AAAA;;AAAA;ADkVvB;AAAA;AAAA;AAArB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;;;;AACS;;AExU6C;;;AFwU7C;AAAJ;;;AACC;;AAAA;;AAAA;;AAAqB;;;AACrB;;AAAA;;AAEF;;AAAA;AAAJ;;;AACS;;AAAA;;AAAA;AAAP;AAO2B;;AAAA;;AAAA;AAAZ;AC/V2B;AAAA;;AAAA;ADkWlB;AAAA;AADyB;AAAA;AAAA;ACjWP;AAAA;;AAAA;ADkWlB;AAAA;AADyB;AAAA;AAAA;ACjWP;AAAA;;AAAA;ADkWlB;AAAA;AADyB;;AAAA;AAAA;ACjWP;AAAA;;AAAA;ADkWlB;AAAA;AADyB;;AAAA;AAAA;AAAtB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;ACjWe;AAAA;;AAAA;ADiW5C;AAAA;;;;AANQ;;AAAA;;AAAmB;AAClB;;AAAA;AAAP;;;;AAWO;;AE3V2C;;;AF2V3C;AAAJ;;;AACY;;AAAA;;;AAAmB;;AAE9B;;AAAA;AACA;;AAAA;AACA;;AAAA;;AAEA;;AAAiB;AACkB;;AAAA;AAAD;AAAhB;AAEE;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEnB;AAAA;;AAAA;AAAP;AAE6B;AAAA;AAAZ;ACrX2B;AAAA;;AAAA;ADwXlB;AAAA;AADyB;AAAA;AAAA;ACvXP;AAAA;;AAAA;ADwXlB;AAAA;AADyB;AAAA;AAAA;ACvXP;AAAA;;AAAA;ADwXlB;AAAA;AADyB;;AAAA;AAAA;ACvXP;AAAA;;AAAA;ADwXlB;AAAA;AADyB;;AAAA;AAAA;AAAtB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;ACvXe;AAAA;;AAAA;ADuX5C;AAAA;;;;AAfmD;;;;;AA9B9B;;AAAnB;;;;AAqDN;;;AACE;;AAAA;;;AACgB;;AAAiB;AAAP;;AAAA;AAAD;;AAAA;AAAhB;AAAP;AAEY;;AAA2B;AAAP;;AAAA;AAAD;;AAAA;AAA1B;AAAP;ACxYyD;AAAA;;AAAA;AAAA;AAJE;AAAA;AAAA;AAAA;ADoZpD;AAAA;;;ACpZoD;AAAA;AAAA;AAAA;ADqZf;;AAAxC;AAAA;;;AACS;;;;;AAFb;AAGa;;;;;AACF;;;;;AAWb;;;AAGQ;;AAAJ;;AAAA;AAAA;;;AACO;;AAAJ;;AAAA;AADH;;;;AADF;AAKO;;AAAA;;AAAA;AAAP;AC3a+C;;AD6a/C;;AAAA;AACmE;;AAApC;;AAAA;AAAA;;;AAAyD;;AC7a7B;AD6a3D;AAAA;AC1amE;;AD2anE;;AAAA;AACoC;;AC3aqB;;AD2azD;AAAA;AACA;;;AACA;;;;AAJsI;;;;;;;;;AAYxI;;;AACa;;AC3boC;AAAA;;AAAA;AAAA;AD2bxC;AAAP;AC3b+C;;AD4b/C;;AAAA;AACA;;;AACA;;;;AAWF;;;AACa;;AAA+B;;AAAA;;AAAA;AAAnC;AAAP;ACzc2D;AAAA;AAAA;AAAA;AD2c5B;;AAAA;AAAoC;;AAAA;;AAAA;AAAjE;AADF;AAMe;;AAAA;AADH;AAAA;AAAA;AAAA;;AAAA;AAAN;ACxcqC;AAAA;AAAA;AD8cvB;AAAA;;AAAlB;;;AC9cyC;AAAA;;AAAA;AD8cK;AAAA;AAAM;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAM;AAA1D;;;;AADF;ACrd+C;;AD0d/C;;AAAA;ACld2C;AAAA;;AAAA;ADmdrB;AAAA;AAAM;AAAA;AAAA;AErZE;;AFqZ1B;AAAJ;;;AACE;;;AAEF;;;;;;;;AC9d+C;AAAA;;AAAA;AAAA;ADwe/C;ACneyD;AAAA;;AAAA;AAAA;AD0evB;;AAAA;AAAgB;;;AAA3C;AAAP;AACoC;;AC3eqB;;AD2ezD;AAAA;;AASF;;;AACa;;AC1foC;AAAA;;AAAA;AAAA;AD0fxC;AAAP;AAEA;AC3f2D;AAAA;AAAA;AAAA;AD8f7C;;AACD;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALV;;;AAMS;;;AANT;AAUA;;AAAA;;;AAAW;;;AAEX;;;;AAWF;;;AAOE;;AAAA;;;AACwC;;AAAtC;;AAAA;AAAA;;AAAA;;;;AAEK;;AAAA;;AAAA;;AAAA;;;AAAP;AAYF;;;;;;;;;;;AAMQ;;AAGS;AAAA;AACE;;AAAA;;;AACQ;;AAHb;AAAA;;AAAA;AAAA;AAAA;ACziB+B;AAAA;;AAAA;ADgjBlB;AAAA;;AAAzB;AAEA;;AAAA;;;AAAA;AAAA;;AAAA;;;;;;;;;;AAAA;;AAAA;AAAA;;ACljB2C;AAAA;AAAA;ADojBrB;AAAA;AAAM;;AAAA;AAAA;AAAY;AAAW;AAA/C;AAAJ;;;ACpjB2C;AAAA;;AAAA;AAAA;;AAAA;ADqjBS;AAAA;AAAM;;AAAA;AAAA;AAAY;AAA9D;AAAA;;AACmC;;AAAA;ACzjBc;;ADyjBvD;AAAA;AACA;;AAAA;;;AAAA;AAAA;;AAAA;;;;;;;;;;AAAA;;AAAA;;AAEA;AAGW;;AACsB;;AAAA;;AAAA;AAJjC;;;;;;;;;;;;AAAA;;;;AAKS;;;AALT;ACzjByC;AAAA;;AAAA;AD+kBrB;AAAA;AAAM;AAAA;AAAA;AEjhBE;;AFihB1B;AAAJ;;;AACE;;;;;;;;;;;;ACvlByD;AAAA;AAAA;AAAA;AAIF;;ADqkBvD;AAAA;AAEA;ACvkBuD;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AD2kBhC;;AAAA;;AAAA;AACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALV;;;AAMS;;;AANT;;;;AAvBoB;;;;;AAiDxB;;;AC7lBkD;;AAAA;;AAAA;AD+lBtB;AAAA;AAAM;AAAA;AAAA;AAAY;AAD5C;;AAAA;;AAAA;;AAAA;;;AAAA;;;AAqBF;;;;;;;;AAWa;;ACvoBoC;AAAA;;AAAA;AAAA;ADuoBxC;AAAP;AAEE;;AEnkB4B;;AFmkB5B;AAAA;;;AACgC;;AAAhC;;AAAA;AADA;;;;AAGK;AAAP;AAEe;;AAAA;AADH;AAAA;AAAA;AAAA;;AAAA;AAAN;;AAKY;;AAAA;AAAA;AAAd;;AACiB;AAAZ;;AAA2B;;AAAA;AAAA;AAAZ;;AAAA;AAAxB;;;AACE;;AAAA;;;AACY;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAA;AACX;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAFN;AAAA;;AAAA;AAAA;AAAA;AAGH;;AAHG;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAD+C;AAAL;AAAA;;;;;AAQ3B;;AAAA;;;AAAmB;;AAA9B;;AC1pBqD;AAAA;AAAA;AAAA;AD4pBf;;AAAxC;AAAJ;;;AACE;AC7pByD;AAAA;AAAA;AAAA;ADgqBpC;;AACqB;;AAAA;AAApB;;AAAA;AAAV;;AAAA;;;;;;;AAJZ;;;AAKS;;;AALT;AAUgB;;AAAd;;AACJ;;AAAA;;;AAEI;ACvqB+D;AAAA;;AAAA;AAAA;AD+qBR;;AAAA;;;AADvC;;;;;;AADV;;;AAGO;;;AATb;AC1qBuD;AAAA;AAAA;AAAA;AAGQ;AAAA;;AAAA;AAAA;ADkrBzD;;AAAA;AAXN;;;;;;;;;;AAAA;;;;AAaS;;;AAbT;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AADY;AAAd;;AAqBO;;AAAA;AAAA;;AAAA;AAGI;;AAAA;AAAA;AACD;;AAAA;AAAA;;AACD;;AAAA;;AACK;;AAAA;AAAA;;AAAA;AAAA;;AACH;;AAAA;AAAA;;AAAA;AAAA;;AAEJ;;AAAA;AAAA;;AAViB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASZ;;AATY;AAAA;AAAA;AAAA;AAAA;ACtrBiB;AAAA;;AAAA;ADsrB3C;AAAA;;AAAA;AAAA;AAaA;;;AACA;;;;AAjDmD;;;;;;;;;AA4DrD;;;AACa;;ACxtBoC;AAAA;;AAAA;AAAA;ADwtBxC;AAAP;AAGe;;AAAA;AADH;AAAA;AAAA;AAAA;;AAAA;ACltB+B;AAAA;;AAAA;ADutBlB;AAAA;;AAAzB;ACvtB2C;AAAA;;AAAA;ADytBL;AAAA;AAAM;;AAAA;AAAA;AAAY;AAAlD;ACztBqC;AAAA;;AAAA;AD0tBT;AAAA;AAAM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAlC;AC1tBqC;AAAA;AAAA;AD4tBzB;;ACnuByC;AAAA;AAAA;AAAA;ADquBf;;AAAxC;AAAJ;;;AACE;ACtuByD;AAAA;AAAA;AAAA;ADyuBf;;AAAA;AAApB;;AAAA;AAAV;;AAAA;;;;;AAHZ;;;AAIS;;;AAJT;AASE;;AAAgB;AAAhB;AAAJ;;;AACE;AC7uBiE;AAAA;;AAAA;AAAA;ADivBtD;;AAAA;AAJX;;;;;;;;AAAA;;;;AAKS;;;AALT;AAUF;;;AACA;;;;AAiBF;;;;AAYa;;ACzxBoC;AAAA;;AAAA;AAAA;ADyxBxC;AAAP;AChxBgD;;AAAA;;AAAA;ADixBhB;AAAA;;AAAzB;AAAP;AAGe;;AAAA;AADH;AAAA;AAAA;AAAA;;AAAA;AAAN;ACnxB0C;;AAAA;;AAAA;ADuxBhD;AAAA;AAEkB;;AAAA;AAAA;AACG;AAAe;;AAAA;AAAA;AAAZ;;AAAA;AAAxB;;;AACE;;AAAA;;;AACY;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAA;AACX;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAA;AAAA;AAFN;AAAA;;AAAA;AAAA;AAAA;AAGH;;AAHG;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAD+C;AAAL;AAAA;;;;;AClyBe;AAAA;AAAA;AAAA;AD0yBf;;AAAxC;AAAJ;;;AACE;AC3yByD;AAAA;AAAA;AAAA;AD8yBpC;;AACsB;;AAAA;AAAqB;;AAAA;AAAnC;AAAP;;AAAA;AAAV;;AAAA;;;;;;;AAJZ;;;AAKS;;;AALT;AAUgB;;AAAd;;AACJ;;AAAA;;;AAEI;ACxzBuD;AAAA;AAAA;AAAA;AAGQ;AAAA;;AAAA;AAAA;AD6zBR;;AAAA;;;AADvC;;;;;;;AAFV;;;AAIO;;;AATb;ACrzB+D;AAAA;;AAAA;AAAA;ADg0BzD;AAAA;AAXN;;;;;;;;AAAA;;;;AAaS;;;AAbT;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AADY;AAAd;;AAoBe;;AAAA;;;AAAmB;;AAG3B;;AAAA;AAAA;;AAAA;AAGI;;AAAA;AAAA;;AACD;;AAAA;AAAA;;AACD;;AAAA;;AACK;;AAAA;AAAA;;AAAA;AAAA;;AACH;;AAAA;AAAA;;AAAA;AAAA;;AAEJ;AAAA;AAAA;;AAViB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASZ;;AATY;AAAA;AAAA;AAAA;AAAA;ACt0BiB;AAAA;;AAAA;ADs0B3C;AAAA;;AAAA;AAAA;AAaA;;;AACA;;;;AAhBmD;;;;;AAwBrD;;;AACa;;ACr2BoC;AAAA;;AAAA;AAAA;ADq2BxC;AAAP;AC51BgD;;AAAA;;AAAA;AD61BjB;AAAA;;AAA/B;AC71BgD;;AAAA;;AAAA;AD81BZ;AAAA;AC/1BO;AAAA;;AAAA;ADg2BlB;AAAA;;AAAzB;ACh2B2C;AAAA;;AAAA;ADk2BL;AAAA;AAAM;;AAAA;AAAA;AAAY;AAAlD;ACl2BqC;AAAA;;AAAA;ADm2BT;AAAA;AAAM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAlC;ACl2B0C;;AAAA;;AAAA;ADo2BxB;;ACr2BmB;AAAA;AAAA;ADs2BzB;;AC72ByC;AAAA;AAAA;AAAA;AD+2Bf;;AAAxC;AAAJ;;;AACE;ACh3ByD;AAAA;AAAA;AAAA;ADm3Bd;;AAAA;AAAqB;;AAAA;AAAnC;AAAP;;AAAA;AAAV;;AAAA;;;;;AAHZ;;;AAIS;;;AAJT;AASE;;AAAgB;AAAhB;AAAJ;;;AACE;ACv3BiE;AAAA;;AAAA;AAAA;AD23BtD;;AAAA;AAJX;;;;;;;;AAAA;;;;AAKS;;;AALT;AAUF;;;AACA;;;;AAGF;;;AASa;;ACl5BoC;AAAA;;AAAA;AAAA;ADk5BxC;AAAP;AAGe;;AAAA;AADF;AAAA;AAAA;AAAA;;AAAA;AAOJ;;AAAA;AAAA;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAN;AAAA;;ACj5BqC;AAAA;;AAAA;ADs5BjB;AAAA;;AAA1B;ACp5B8C;AAAA;AAAA;ADq5BjB;AAAA;;AAAtB;AAAP;AC95B2D;AAAA;AAAA;AAAA;ADg6Bf;;AAAxC;AAAJ;;;AACE;ACj6ByD;AAAA;AAAA;AAAA;ADo6BpC;;AACT;;;;;;;;AAJZ;;;AAKS;;;AALT;AAaS;;AAAA;AAEJ;;AAAA;AACK;;AAAA;AAAA;;AANiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpB;;AAFoB;AAAA;AAAA;AAIrB;;AAJqB;ACl6BiB;AAAA;;AAAA;ADk6B9C;AAAA;AASA;;;AACA;;;;AAGF;;;AACa;;AC17BoC;AAAA;;AAAA;AAAA;AD07BxC;AAAP;AAGe;;AAAA;AADF;AAAA;AAAA;AAAA;;AAAA;AAOJ;;AAAA;AAAA;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;ACz7B+B;AAAA;;AAAA;AD87BjB;AAAA;;AAA1B;AC57B8C;AAAA;;AAAA;AD67BlB;AAAA;;AAA5B;AC77B8C;AAAA;AAAA;AD+7BzB;;ACx8BsC;AAAA;AAAA;AAAA;AD08Bf;;AAAxC;AAAJ;;;AACE;AC38ByD;AAAA;AAAA;AAAA;AD88B7C;;;;;;AAHZ;;;AAIS;;;AAJT;AASF;;;AACA;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 4 225 400 36500 55400 38500"
    },
    "20": {
      "op": "bytecblock \"p\" 0x \"controlled_address\" \"a\" 0x00 \"admin\" \"spending_address\" 0x0000000000000000 \"spend_factory\" \"n\" 0x151f7c75 0x01 0x0f885493 0x0000 0x47c79d5f 0x8a39e79f"
    },
    "121": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "124": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "125": {
      "op": "bz main_bare_routing@20",
      "stack_out": []
    },
    "128": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "131": {
      "op": "pushbytes 0xbb139508 // method \"createApplication(address,address,application)void\"",
      "defined_out": [
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)"
      ]
    },
    "137": {
      "op": "pushbytes 0xd24b7556 // method \"arc58_changeAdmin(address)void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)"
      ]
    },
    "143": {
      "op": "pushbytes 0x5fa449c6 // method \"arc58_pluginChangeAdmin(uint64,address,address)void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)"
      ]
    },
    "149": {
      "op": "pushbytes 0x13bc44e4 // method \"arc58_getAdmin()address\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)"
      ]
    },
    "155": {
      "op": "bytec 12 // method \"arc58_verifyAuthAddr()void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)"
      ]
    },
    "157": {
      "op": "pushbytes 0xc95a5d3d // method \"arc58_rekeyTo(address,bool)void\"",
      "defined_out": [
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)"
      ]
    },
    "163": {
      "op": "pushbytes 0x682fdbf8 // method \"arc58_canCall(uint64,bool,address,byte[4])bool\"",
      "defined_out": [
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)"
      ]
    },
    "169": {
      "op": "pushbytes 0xde300fe9 // method \"arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void\"",
      "defined_out": [
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)"
      ]
    },
    "175": {
      "op": "pushbytes 0xbe39d3c8 // method \"arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void\"",
      "defined_out": [
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)"
      ]
    },
    "181": {
      "op": "pushbytes 0x9ac5b48d // method \"arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void\"",
      "defined_out": [
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)"
      ]
    },
    "187": {
      "op": "pushbytes 0x4d372355 // method \"arc58_removePlugin(uint64,address)void\"",
      "defined_out": [
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)"
      ]
    },
    "193": {
      "op": "pushbytes 0x0e1c77d2 // method \"arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void\"",
      "defined_out": [
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)"
      ]
    },
    "199": {
      "op": "pushbytes 0xe350b9d4 // method \"arc58_removeNamedPlugin(string)void\"",
      "defined_out": [
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removeNamedPlugin(string)void)"
      ]
    },
    "205": {
      "op": "pushbytes 0x5f08dfc7 // method \"arc58_addAllowance(uint64,address,uint64,uint8,uint64,uint64,uint64)void\"",
      "defined_out": [
        "Method(arc58_addAllowance(uint64,address,uint64,uint8,uint64,uint64,uint64)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_addAllowance(uint64,address,uint64,uint8,uint64,uint64,uint64)void)"
      ]
    },
    "211": {
      "op": "pushbytes 0x3f66056f // method \"arc58_removeAllowance(uint64,address,uint64)void\"",
      "defined_out": [
        "Method(arc58_addAllowance(uint64,address,uint64,uint8,uint64,uint64,uint64)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_removeAllowance(uint64,address,uint64)void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(createApplication(address,address,application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_addAllowance(uint64,address,uint64,uint8,uint64,uint64,uint64)void)",
        "Method(arc58_removeAllowance(uint64,address,uint64)void)"
      ]
    },
    "217": {
      "op": "uncover 15",
      "stack_out": [
        "Method(createApplication(address,address,application)void)",
        "Method(arc58_changeAdmin(address)void)",
        "Method(arc58_pluginChangeAdmin(uint64,address,address)void)",
        "Method(arc58_getAdmin()address)",
        "Method(arc58_verifyAuthAddr()void)",
        "Method(arc58_rekeyTo(address,bool)void)",
        "Method(arc58_canCall(uint64,bool,address,byte[4])bool)",
        "Method(arc58_rekeyToPlugin(uint64,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_rekeyToNamedPlugin(string,bool,uint64[],(uint64,uint64)[])void)",
        "Method(arc58_addPlugin(uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removePlugin(uint64,address)void)",
        "Method(arc58_addNamedPlugin(string,uint64,address,bool,uint8,uint64,uint64,(byte[4],uint64)[],bool,bool)void)",
        "Method(arc58_removeNamedPlugin(string)void)",
        "Method(arc58_addAllowance(uint64,address,uint64,uint8,uint64,uint64,uint64)void)",
        "Method(arc58_removeAllowance(uint64,address,uint64)void)",
        "tmp%2#0"
      ]
    },
    "219": {
      "op": "match main_createApplication_route@3 main_arc58_changeAdmin_route@4 main_arc58_pluginChangeAdmin_route@5 main_arc58_getAdmin_route@6 main_arc58_verifyAuthAddr_route@7 main_arc58_rekeyTo_route@8 main_arc58_canCall_route@9 main_arc58_rekeyToPlugin_route@10 main_arc58_rekeyToNamedPlugin_route@11 main_arc58_addPlugin_route@12 main_arc58_removePlugin_route@13 main_arc58_addNamedPlugin_route@14 main_arc58_removeNamedPlugin_route@15 main_arc58_addAllowance_route@16 main_arc58_removeAllowance_route@17",
      "stack_out": []
    },
    "251": {
      "block": "main_after_if_else@21",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "252": {
      "block": "main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "253": {
      "block": "main_arc58_removeAllowance_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "255": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0",
        "NoOp"
      ]
    },
    "256": {
      "op": "==",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "257": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "258": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "260": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "0"
      ]
    },
    "261": {
      "op": "!=",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "262": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "263": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%15#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "266": {
      "op": "btoi",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "267": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%11#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "reinterpret_bytes[32]%11#0"
      ]
    },
    "270": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%11#0",
        "reinterpret_bytes[8]%16#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "reinterpret_bytes[32]%11#0",
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "273": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[32]%11#0",
        "tmp%105#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "reinterpret_bytes[32]%11#0",
        "tmp%106#0"
      ]
    },
    "274": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%11#0",
        "tmp%106#0",
        "tmp%105#0"
      ]
    },
    "276": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%106#0",
        "tmp%105#0",
        "reinterpret_bytes[32]%11#0"
      ]
    },
    "278": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%105#0",
        "reinterpret_bytes[32]%11#0",
        "tmp%106#0"
      ]
    },
    "280": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removeAllowance",
      "op": "callsub arc58_removeAllowance",
      "stack_out": []
    },
    "283": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "284": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "287": {
      "block": "main_arc58_addAllowance_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "289": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "NoOp"
      ]
    },
    "290": {
      "op": "==",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "291": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "292": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "294": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0",
        "0"
      ]
    },
    "295": {
      "op": "!=",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "296": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "297": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "300": {
      "op": "btoi",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "301": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0"
      ]
    },
    "304": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%11#0",
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "307": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[32]%10#0",
        "tmp%96#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0"
      ]
    },
    "308": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%96#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0"
      ]
    },
    "311": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%12#0",
        "tmp%96#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "314": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0"
      ]
    },
    "315": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%13#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "318": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%98#0",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0"
      ]
    },
    "319": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "reinterpret_bytes[8]%14#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%98#0",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "322": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%13#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%100#0",
        "tmp%96#0",
        "tmp%97#0",
        "tmp%98#0",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0",
        "tmp%100#0"
      ]
    },
    "323": {
      "op": "uncover 6",
      "stack_out": [
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0",
        "tmp%100#0",
        "tmp%96#0"
      ]
    },
    "325": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0",
        "tmp%100#0",
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0"
      ]
    },
    "327": {
      "op": "uncover 6",
      "stack_out": [
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0",
        "tmp%100#0",
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0"
      ]
    },
    "329": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%98#0",
        "tmp%99#0",
        "tmp%100#0",
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0"
      ]
    },
    "331": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%99#0",
        "tmp%100#0",
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0"
      ]
    },
    "333": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%100#0",
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0"
      ]
    },
    "335": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%96#0",
        "reinterpret_bytes[32]%10#0",
        "tmp%97#0",
        "reinterpret_bytes[1]%13#0",
        "tmp%98#0",
        "tmp%99#0",
        "tmp%100#0"
      ]
    },
    "337": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addAllowance",
      "op": "callsub arc58_addAllowance",
      "stack_out": []
    },
    "340": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "341": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "344": {
      "block": "main_arc58_removeNamedPlugin_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "346": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0",
        "NoOp"
      ]
    },
    "347": {
      "op": "==",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "348": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "349": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "351": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0",
        "0"
      ]
    },
    "352": {
      "op": "!=",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "353": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "354": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "357": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "360": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removeNamedPlugin",
      "op": "callsub arc58_removeNamedPlugin",
      "stack_out": []
    },
    "363": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "364": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "367": {
      "block": "main_arc58_addNamedPlugin_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "369": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "NoOp"
      ]
    },
    "370": {
      "op": "==",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "371": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "372": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "374": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0",
        "0"
      ]
    },
    "375": {
      "op": "!=",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "376": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "377": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "380": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "383": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%7#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "386": {
      "op": "btoi",
      "defined_out": [
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0"
      ]
    },
    "387": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0"
      ]
    },
    "390": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%9#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[1]%9#0",
        "0"
      ]
    },
    "394": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0"
      ]
    },
    "395": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "398": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%8#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "401": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0"
      ]
    },
    "402": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "reinterpret_bytes[8]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "405": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0"
      ]
    },
    "406": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ]
    },
    "409": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%11#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "reinterpret_bytes[1]%11#0"
      ]
    },
    "412": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "reinterpret_bytes[1]%11#0",
        "0"
      ]
    },
    "413": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0"
      ]
    },
    "414": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[1]%12#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "reinterpret_bytes[1]%12#0"
      ]
    },
    "417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "reinterpret_bytes[1]%12#0",
        "0"
      ]
    },
    "418": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[1]%10#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%78#0",
        "tmp%79#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0"
      ]
    },
    "419": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0"
      ]
    },
    "421": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0"
      ]
    },
    "423": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0"
      ]
    },
    "425": {
      "op": "uncover 9",
      "stack_out": [
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0"
      ]
    },
    "427": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "429": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0"
      ]
    },
    "431": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0"
      ]
    },
    "433": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%84#0",
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ]
    },
    "435": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%85#0",
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0"
      ]
    },
    "437": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%78#0",
        "tmp%79#0",
        "reinterpret_bytes[32]%9#0",
        "tmp%80#0",
        "reinterpret_bytes[1]%10#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "tmp%84#0",
        "tmp%85#0"
      ]
    },
    "439": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addNamedPlugin",
      "op": "callsub arc58_addNamedPlugin",
      "stack_out": []
    },
    "442": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "443": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "446": {
      "block": "main_arc58_removePlugin_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "448": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "NoOp"
      ]
    },
    "449": {
      "op": "==",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "450": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "451": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "453": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0",
        "0"
      ]
    },
    "454": {
      "op": "!=",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "455": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "456": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "459": {
      "op": "btoi",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "460": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%8#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0",
        "reinterpret_bytes[32]%8#0"
      ]
    },
    "463": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removePlugin",
      "op": "callsub arc58_removePlugin",
      "stack_out": []
    },
    "466": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "467": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "470": {
      "block": "main_arc58_addPlugin_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "472": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "NoOp"
      ]
    },
    "473": {
      "op": "==",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "474": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "475": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "477": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0",
        "0"
      ]
    },
    "478": {
      "op": "!=",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "479": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "480": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "483": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "484": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0"
      ]
    },
    "487": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%5#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "490": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[1]%5#0",
        "0"
      ]
    },
    "491": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0"
      ]
    },
    "492": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "495": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "498": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0"
      ]
    },
    "499": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "502": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0"
      ]
    },
    "503": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "506": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "509": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "reinterpret_bytes[1]%7#0",
        "0"
      ]
    },
    "510": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "511": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "514": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "reinterpret_bytes[1]%8#0",
        "0"
      ]
    },
    "515": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "516": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0"
      ]
    },
    "518": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0"
      ]
    },
    "520": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0"
      ]
    },
    "522": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "524": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0"
      ]
    },
    "526": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0"
      ]
    },
    "528": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%66#0",
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "530": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%67#0",
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "532": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[32]%7#0",
        "tmp%62#0",
        "reinterpret_bytes[1]%6#0",
        "tmp%63#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "534": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addPlugin",
      "op": "callsub arc58_addPlugin",
      "stack_out": []
    },
    "537": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "538": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "541": {
      "block": "main_arc58_rekeyToNamedPlugin_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "543": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "NoOp"
      ]
    },
    "544": {
      "op": "==",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "545": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "546": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "548": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "0"
      ]
    },
    "549": {
      "op": "!=",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "550": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "551": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "554": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "557": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "560": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%53#0",
        "reinterpret_bytes[1]%4#0",
        "0"
      ]
    },
    "561": {
      "op": "getbit",
      "defined_out": [
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "562": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0"
      ]
    },
    "565": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "568": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%53#0"
      ]
    },
    "570": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0",
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "572": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%56#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0"
      ]
    },
    "574": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "576": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToNamedPlugin",
      "op": "callsub arc58_rekeyToNamedPlugin",
      "stack_out": []
    },
    "579": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "580": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "583": {
      "block": "main_arc58_rekeyToPlugin_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "585": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "NoOp"
      ]
    },
    "586": {
      "op": "==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "587": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "588": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "590": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "0"
      ]
    },
    "591": {
      "op": "!=",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "592": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "593": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "596": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "597": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "600": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%44#0",
        "reinterpret_bytes[1]%3#0",
        "0"
      ]
    },
    "601": {
      "op": "getbit",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "602": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0"
      ]
    },
    "605": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "608": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%44#0"
      ]
    },
    "610": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%46#0",
        "tmp%47#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "612": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%47#0",
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0"
      ]
    },
    "614": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "616": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToPlugin",
      "op": "callsub arc58_rekeyToPlugin",
      "defined_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ],
      "stack_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ]
    },
    "619": {
      "op": "popn 2",
      "stack_out": []
    },
    "621": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "622": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "625": {
      "block": "main_arc58_canCall_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "627": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "NoOp"
      ]
    },
    "628": {
      "op": "==",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "629": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "630": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "632": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "0"
      ]
    },
    "633": {
      "op": "!=",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "634": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "635": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "638": {
      "op": "btoi",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "639": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "642": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%37#0",
        "reinterpret_bytes[1]%2#0",
        "0"
      ]
    },
    "643": {
      "op": "getbit",
      "defined_out": [
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "644": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%6#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "tmp%38#0",
        "reinterpret_bytes[32]%6#0"
      ]
    },
    "647": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "tmp%38#0",
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0"
      ]
    },
    "650": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%38#0",
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0",
        "tmp%37#0"
      ]
    },
    "652": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "654": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_bytes[4]%0#0",
        "tmp%37#0",
        "tmp%38#0",
        "reinterpret_bytes[32]%6#0"
      ]
    },
    "656": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%37#0",
        "tmp%38#0",
        "reinterpret_bytes[32]%6#0",
        "reinterpret_bytes[4]%0#0"
      ]
    },
    "658": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_canCall",
      "op": "callsub arc58_canCall",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "661": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "0x00"
      ]
    },
    "663": {
      "op": "intc_0 // 0",
      "stack_out": [
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "664": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "666": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "667": {
      "op": "bytec 10 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "669": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "670": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "671": {
      "op": "log",
      "stack_out": []
    },
    "672": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "673": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "676": {
      "block": "main_arc58_rekeyTo_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "678": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0",
        "NoOp"
      ]
    },
    "679": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "680": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "681": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "683": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0",
        "0"
      ]
    },
    "684": {
      "op": "!=",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "685": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "686": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0"
      ]
    },
    "689": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "reinterpret_bytes[32]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "692": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[32]%5#0",
        "reinterpret_bytes[1]%1#0",
        "0"
      ]
    },
    "693": {
      "op": "getbit",
      "defined_out": [
        "reinterpret_bytes[32]%5#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%5#0",
        "tmp%32#0"
      ]
    },
    "694": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyTo",
      "op": "callsub arc58_rekeyTo",
      "stack_out": []
    },
    "697": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "698": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "701": {
      "block": "main_arc58_verifyAuthAddr_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "703": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "NoOp"
      ]
    },
    "704": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "705": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "706": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "708": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "0"
      ]
    },
    "709": {
      "op": "!=",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "710": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "711": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_verifyAuthAddr",
      "op": "callsub arc58_verifyAuthAddr"
    },
    "714": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "715": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "718": {
      "block": "main_arc58_getAdmin_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "720": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "NoOp"
      ]
    },
    "721": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "722": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "723": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "725": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0"
      ]
    },
    "726": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "727": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "728": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_getAdmin",
      "op": "callsub arc58_getAdmin",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "731": {
      "op": "bytec 10 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0x151f7c75"
      ]
    },
    "733": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%22#0"
      ]
    },
    "734": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "735": {
      "op": "log",
      "stack_out": []
    },
    "736": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "737": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "740": {
      "block": "main_arc58_pluginChangeAdmin_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "742": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "NoOp"
      ]
    },
    "743": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "744": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "745": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "747": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0"
      ]
    },
    "748": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "749": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "750": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "753": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "754": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "757": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "760": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0",
        "tmp%17#0"
      ]
    },
    "762": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%4#0",
        "tmp%17#0",
        "reinterpret_bytes[32]%3#0"
      ]
    },
    "764": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "reinterpret_bytes[32]%3#0",
        "reinterpret_bytes[32]%4#0"
      ]
    },
    "766": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_pluginChangeAdmin",
      "op": "callsub arc58_pluginChangeAdmin",
      "stack_out": []
    },
    "769": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "770": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "773": {
      "block": "main_arc58_changeAdmin_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "775": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "NoOp"
      ]
    },
    "776": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "777": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "778": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "780": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "781": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "782": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "783": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%2#0"
      ]
    },
    "786": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_changeAdmin",
      "op": "callsub arc58_changeAdmin",
      "stack_out": []
    },
    "789": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "790": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "793": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "795": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "796": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "797": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "798": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "800": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "801": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "802": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "803": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "806": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "809": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "812": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%7#0"
      ]
    },
    "813": {
      "op": "txnas Applications",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0"
      ]
    },
    "815": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "817": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "819": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%1#0",
        "tmp%8#0"
      ]
    },
    "821": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "824": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "825": {
      "op": "b main_after_inlined_contracts/abstracted_account.algo.ts::AbstractedAccount.__puya_arc4_router__@22"
    },
    "828": {
      "block": "main_bare_routing@20",
      "stack_in": [],
      "op": "b main_after_if_else@21"
    },
    "831": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "params": {},
      "block": "updateLastUserInteraction_block@0",
      "stack_in": [],
      "op": "global LatestTimestamp",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "833": {
      "op": "pushbytes \"last_user_interaction\"",
      "defined_out": [
        "\"last_user_interaction\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"last_user_interaction\""
      ]
    },
    "856": {
      "op": "swap",
      "stack_out": [
        "\"last_user_interaction\"",
        "new_state_value%0#0"
      ]
    },
    "857": {
      "op": "app_global_put",
      "stack_out": []
    },
    "858": {
      "retsub": true,
      "op": "retsub"
    },
    "859": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "params": {},
      "block": "updateLastChange_block@0",
      "stack_in": [],
      "op": "global LatestTimestamp",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "861": {
      "op": "pushbytes \"last_change\"",
      "defined_out": [
        "\"last_change\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"last_change\""
      ]
    },
    "874": {
      "op": "swap",
      "stack_out": [
        "\"last_change\"",
        "new_state_value%0#0"
      ]
    },
    "875": {
      "op": "app_global_put",
      "stack_out": []
    },
    "876": {
      "retsub": true,
      "op": "retsub"
    },
    "877": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCallAllowed",
      "params": {
        "app#0": "uint64",
        "caller#0": "bytes",
        "method#0": "bytes"
      },
      "block": "pluginCallAllowed",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "880": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0"
      ]
    },
    "881": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "methods#0",
        "epochRef#0"
      ]
    },
    "882": {
      "op": "dupn 4",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0"
      ]
    },
    "884": {
      "block": "pluginCallAllowed_block@0",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "app#0 (copy)"
      ]
    },
    "886": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "val_as_bytes%0#0"
      ]
    },
    "887": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "888": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "889": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "890": {
      "op": "frame_dig -2",
      "defined_out": [
        "caller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "encoded_tuple_buffer%1#0",
        "caller#0 (copy)"
      ]
    },
    "892": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "893": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "key#0"
      ]
    },
    "894": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "key#0",
        "\"p\""
      ]
    },
    "895": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "896": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%0#0"
      ]
    },
    "897": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "898": {
      "op": "bury 1",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_exists%0#0"
      ]
    },
    "900": {
      "op": "bnz pluginCallAllowed_after_if_else@2",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "903": {
      "block": "pluginCallAllowed_if_body@1",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "0"
      ]
    },
    "904": {
      "op": "frame_bury 0"
    },
    "906": {
      "retsub": true,
      "op": "retsub"
    },
    "907": {
      "block": "pluginCallAllowed_after_if_else@2",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "\"p\""
      ]
    },
    "908": {
      "op": "frame_dig 6",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "910": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%1#0"
      ]
    },
    "911": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "912": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%1#0"
      ]
    },
    "913": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "914": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "26"
      ]
    },
    "916": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "key#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%1#0",
        "item_start_offset%0#0"
      ]
    },
    "917": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "918": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "919": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "key#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "item_end_offset%0#0"
      ]
    },
    "920": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "921": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item_end_offset%0#0",
        "maybe_value%1#0",
        "item_start_offset%0#0"
      ]
    },
    "923": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "925": {
      "op": "substring3",
      "defined_out": [
        "key#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0"
      ]
    },
    "926": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0",
        "methods#0"
      ]
    },
    "927": {
      "op": "frame_bury 0",
      "defined_out": [
        "key#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0"
      ]
    },
    "929": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0",
        "0"
      ]
    },
    "930": {
      "op": "extract_uint16",
      "defined_out": [
        "key#0",
        "methods#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%3#0"
      ]
    },
    "931": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%3#0",
        "0"
      ]
    },
    "932": {
      "op": ">",
      "defined_out": [
        "key#0",
        "methods#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%4#0"
      ]
    },
    "933": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "methods#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%4#0",
        "1"
      ]
    },
    "934": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%4#0",
        "1",
        "0"
      ]
    },
    "935": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "1",
        "0",
        "tmp%4#0"
      ]
    },
    "937": {
      "op": "select",
      "defined_out": [
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methodAllowed#0"
      ]
    },
    "938": {
      "op": "frame_bury 3",
      "defined_out": [
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "940": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "i#0"
      ]
    },
    "941": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0",
        "key#0",
        "methodAllowed#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "943": {
      "block": "pluginCallAllowed_while_top@3",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0"
      ]
    },
    "945": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0",
        "0"
      ]
    },
    "946": {
      "op": "extract_uint16",
      "defined_out": [
        "methods#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%5#0"
      ]
    },
    "947": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%5#0",
        "i#0"
      ]
    },
    "949": {
      "op": ">",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%6#0"
      ]
    },
    "950": {
      "op": "bz pluginCallAllowed_after_while@7",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "953": {
      "block": "pluginCallAllowed_while_body@4",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methods#0"
      ]
    },
    "955": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "array_head_and_tail%0#0"
      ]
    },
    "958": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "960": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "array_head_and_tail%0#0",
        "i#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "array_head_and_tail%0#0",
        "i#0",
        "20"
      ]
    },
    "962": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "methods#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "963": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "20"
      ]
    },
    "965": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%7#0"
      ]
    },
    "966": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "methods#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%7#0",
        "0"
      ]
    },
    "967": {
      "op": "intc_3 // 4",
      "defined_out": [
        "0",
        "4",
        "i#0",
        "methods#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%7#0",
        "0",
        "4"
      ]
    },
    "968": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%8#0"
      ]
    },
    "969": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "method#0 (copy)",
        "methods#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%8#0",
        "method#0 (copy)"
      ]
    },
    "971": {
      "op": "==",
      "defined_out": [
        "i#0",
        "methods#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%9#0"
      ]
    },
    "972": {
      "op": "bz pluginCallAllowed_after_if_else@6",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "975": {
      "block": "pluginCallAllowed_if_body@5",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "methodAllowed#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "methodAllowed#0"
      ]
    },
    "976": {
      "op": "frame_bury 3",
      "defined_out": [
        "methodAllowed#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "978": {
      "block": "pluginCallAllowed_block@8",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "\"p\""
      ]
    },
    "979": {
      "op": "frame_dig 6",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "981": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%10#0"
      ]
    },
    "982": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "983": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "copy%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "copy%1#0"
      ]
    },
    "984": {
      "op": "dup",
      "defined_out": [
        "copy%1#0",
        "copy%1#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "copy%1#0",
        "copy%1#0 (copy)"
      ]
    },
    "985": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "copy%1#0",
        "copy%1#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "copy%1#0",
        "copy%1#0 (copy)",
        "18"
      ]
    },
    "987": {
      "op": "intc_2 // 8",
      "defined_out": [
        "18",
        "8",
        "copy%1#0",
        "copy%1#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "copy%1#0",
        "copy%1#0 (copy)",
        "18",
        "8"
      ]
    },
    "988": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%1#0",
        "item4%0#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "copy%1#0",
        "item4%0#0"
      ]
    },
    "989": {
      "op": "btoi",
      "defined_out": [
        "copy%1#0",
        "item4%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "copy%1#0",
        "item4%1#0"
      ]
    },
    "990": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0"
      ]
    },
    "991": {
      "op": "dup",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "copy%1#0 (copy)"
      ]
    },
    "992": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%1#0",
        "copy%1#0 (copy)",
        "item4%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "copy%1#0 (copy)",
        "225"
      ]
    },
    "994": {
      "op": "getbit",
      "defined_out": [
        "copy%1#0",
        "is_true%2#0",
        "item4%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "is_true%2#0"
      ]
    },
    "995": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "copy%1#0",
        "is_true%2#0",
        "item4%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "997": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "copy%1#0",
        "is_true%2#0",
        "item4%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "998": {
      "op": "uncover 2",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1000": {
      "op": "setbit",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%2#0",
        "item4%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "encoded_bool%2#0"
      ]
    },
    "1001": {
      "op": "intc_0 // 0",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "1002": {
      "op": "getbit",
      "defined_out": [
        "copy%1#0",
        "item4%1#0",
        "item7%0#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "copy%1#0",
        "item7%0#0"
      ]
    },
    "1003": {
      "op": "swap",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "item7%0#0",
        "copy%1#0"
      ]
    },
    "1004": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "copy%1#0",
        "item4%1#0",
        "item7%0#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "item7%0#0",
        "copy%1#0",
        "29"
      ]
    },
    "1006": {
      "op": "intc_2 // 8",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "item7%0#0",
        "copy%1#0",
        "29",
        "8"
      ]
    },
    "1007": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item4%1#0",
        "item7%0#0",
        "item8%0#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "item7%0#0",
        "item8%0#0"
      ]
    },
    "1008": {
      "op": "btoi",
      "defined_out": [
        "item4%1#0",
        "item7%0#0",
        "item8%1#0",
        "key#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item4%1#0",
        "item7%0#0",
        "item8%1#0"
      ]
    },
    "1009": {
      "op": "uncover 2",
      "defined_out": [
        "item7%0#0",
        "item8%1#0",
        "key#0",
        "p.cooldown#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "item7%0#0",
        "item8%1#0",
        "p.cooldown#0"
      ]
    },
    "1011": {
      "op": "frame_bury 4",
      "defined_out": [
        "key#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "p.useRounds#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "p.useRounds#0",
        "p.lastCalled#0"
      ]
    },
    "1013": {
      "op": "frame_bury 5",
      "defined_out": [
        "key#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "p.useRounds#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "p.useRounds#0"
      ]
    },
    "1015": {
      "op": "bz pluginCallAllowed_ternary_false@10",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "1018": {
      "block": "pluginCallAllowed_ternary_true@9",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "ternary_result%0#0"
      ]
    },
    "1020": {
      "block": "pluginCallAllowed_ternary_merge@11",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "ternary_result%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "epochRef#0",
        "epochRef#0"
      ]
    },
    "1021": {
      "op": "frame_bury 1",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "epochRef#0"
      ]
    },
    "1023": {
      "op": "frame_dig 5",
      "defined_out": [
        "epochRef#0",
        "p.lastCalled#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "epochRef#0",
        "p.lastCalled#0"
      ]
    },
    "1025": {
      "op": "<=",
      "defined_out": [
        "epochRef#0",
        "p.lastCalled#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%11#0"
      ]
    },
    "1026": {
      "op": "bz pluginCallAllowed_bool_false@14",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "1029": {
      "block": "pluginCallAllowed_and_contd@12",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "epochRef#0"
      ]
    },
    "1031": {
      "op": "frame_dig 5",
      "defined_out": [
        "epochRef#0",
        "p.lastCalled#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "epochRef#0",
        "p.lastCalled#0"
      ]
    },
    "1033": {
      "op": "-",
      "defined_out": [
        "epochRef#0",
        "p.lastCalled#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%12#0"
      ]
    },
    "1034": {
      "op": "frame_dig 4",
      "defined_out": [
        "epochRef#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%12#0",
        "p.cooldown#0"
      ]
    },
    "1036": {
      "op": ">=",
      "defined_out": [
        "epochRef#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%13#0"
      ]
    },
    "1037": {
      "op": "bz pluginCallAllowed_bool_false@14",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "1040": {
      "block": "pluginCallAllowed_bool_true@13",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "and_result%0#0"
      ]
    },
    "1041": {
      "block": "pluginCallAllowed_bool_merge@15",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "and_result%0#0",
        "methodAllowed#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "and_result%0#0",
        "methodAllowed#0"
      ]
    },
    "1043": {
      "op": "&&",
      "defined_out": [
        "methodAllowed#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "tmp%14#0"
      ]
    },
    "1044": {
      "op": "frame_bury 0"
    },
    "1046": {
      "retsub": true,
      "op": "retsub"
    },
    "1047": {
      "block": "pluginCallAllowed_bool_false@14",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "and_result%0#0"
      ]
    },
    "1048": {
      "op": "b pluginCallAllowed_bool_merge@15"
    },
    "1051": {
      "block": "pluginCallAllowed_ternary_false@10",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "ternary_result%0#0"
      ]
    },
    "1053": {
      "op": "b pluginCallAllowed_ternary_merge@11"
    },
    "1056": {
      "block": "pluginCallAllowed_after_if_else@6",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "i#0"
      ]
    },
    "1058": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "i#0",
        "1"
      ]
    },
    "1059": {
      "op": "+",
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0",
        "i#0"
      ]
    },
    "1060": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ]
    },
    "1062": {
      "op": "b pluginCallAllowed_while_top@3"
    },
    "1065": {
      "block": "pluginCallAllowed_after_while@7",
      "stack_in": [
        "methods#0",
        "epochRef#0",
        "i#0",
        "methodAllowed#0",
        "p.cooldown#0",
        "p.lastCalled#0",
        "key#0"
      ],
      "op": "b pluginCallAllowed_block@8"
    },
    "1068": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.txnRekeysBack",
      "params": {
        "txn#0": "uint64"
      },
      "block": "txnRekeysBack",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1071": {
      "block": "txnRekeysBack_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1073": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1075": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1076": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "1077": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1078": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1079": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1080": {
      "op": "bz txnRekeysBack_after_if_else@3",
      "stack_out": []
    },
    "1083": {
      "block": "txnRekeysBack_and_contd@1",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1085": {
      "op": "gtxns RekeyTo",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1087": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1089": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1090": {
      "op": "bz txnRekeysBack_after_if_else@3",
      "stack_out": []
    },
    "1093": {
      "block": "txnRekeysBack_if_body@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1094": {
      "retsub": true,
      "op": "retsub"
    },
    "1095": {
      "block": "txnRekeysBack_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1097": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1099": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "6"
      ]
    },
    "1101": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1102": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1105": {
      "block": "txnRekeysBack_and_contd@4",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1107": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1109": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1111": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1112": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1115": {
      "block": "txnRekeysBack_and_contd@5",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1117": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1119": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "1"
      ]
    },
    "1120": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1121": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1124": {
      "block": "txnRekeysBack_and_contd@6",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1126": {
      "op": "gtxns OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1128": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "1129": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1130": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1133": {
      "block": "txnRekeysBack_and_contd@7",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1135": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)",
        "0"
      ]
    },
    "1136": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1138": {
      "op": "bytec 12 // method \"arc58_verifyAuthAddr()void\"",
      "defined_out": [
        "Method(arc58_verifyAuthAddr()void)",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "Method(arc58_verifyAuthAddr()void)"
      ]
    },
    "1140": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1141": {
      "op": "bz txnRekeysBack_bool_false@9",
      "stack_out": []
    },
    "1144": {
      "block": "txnRekeysBack_bool_true@8",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1145": {
      "block": "txnRekeysBack_bool_merge@10",
      "stack_in": [
        "and_result%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "and_result%0#0"
      ]
    },
    "1146": {
      "block": "txnRekeysBack_bool_false@9",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1147": {
      "op": "b txnRekeysBack_bool_merge@10"
    },
    "1150": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertRekeysBack",
      "params": {},
      "block": "assertRekeysBack",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1153": {
      "block": "assertRekeysBack_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0"
      ]
    },
    "1154": {
      "op": "txn GroupIndex",
      "defined_out": [
        "rekeysBack#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "tmp%0#0"
      ]
    },
    "1156": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "rekeysBack#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "tmp%0#0",
        "1"
      ]
    },
    "1157": {
      "op": "+",
      "defined_out": [
        "i#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1158": {
      "block": "assertRekeysBack_while_top@1",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1160": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%1#0",
        "i#0"
      ]
    },
    "1162": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1163": {
      "op": "bz assertRekeysBack_after_while@5",
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1166": {
      "block": "assertRekeysBack_while_body@2",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "txn#0"
      ]
    },
    "1168": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.txnRekeysBack",
      "op": "callsub txnRekeysBack",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1171": {
      "op": "bz assertRekeysBack_after_if_else@4",
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1174": {
      "block": "assertRekeysBack_if_body@3",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "rekeysBack#0"
      ]
    },
    "1175": {
      "op": "frame_bury 0",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1177": {
      "block": "assertRekeysBack_block@6",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "rekeysBack#0"
      ]
    },
    "1179": {
      "error": "missing rekey back",
      "op": "assert // missing rekey back",
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1180": {
      "retsub": true,
      "op": "retsub"
    },
    "1181": {
      "block": "assertRekeysBack_after_if_else@4",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "i#0"
      ]
    },
    "1183": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1184": {
      "op": "+",
      "stack_out": [
        "rekeysBack#0",
        "i#0",
        "i#0"
      ]
    },
    "1185": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "rekeysBack#0",
        "i#0"
      ]
    },
    "1187": {
      "op": "b assertRekeysBack_while_top@1"
    },
    "1190": {
      "block": "assertRekeysBack_after_while@5",
      "stack_in": [
        "rekeysBack#0",
        "i#0"
      ],
      "op": "b assertRekeysBack_block@6"
    },
    "1193": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCheck",
      "params": {
        "key#0": "bytes"
      },
      "block": "pluginCheck",
      "stack_in": [],
      "op": "proto 1 7"
    },
    "1196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo.methods#0"
      ]
    },
    "1197": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0"
      ]
    },
    "1198": {
      "op": "dupn 6",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0"
      ]
    },
    "1200": {
      "block": "pluginCheck_block@0",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "\"p\""
      ]
    },
    "1201": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1203": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "tmp%0#0"
      ]
    },
    "1204": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1205": {
      "op": "bury 1",
      "defined_out": [
        "exists#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1207": {
      "op": "dup",
      "defined_out": [
        "exists#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "exists#0"
      ]
    },
    "1208": {
      "op": "bnz pluginCheck_after_if_else@2",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1211": {
      "block": "pluginCheck_if_body@1",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "0"
      ]
    },
    "1212": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "0",
        "1"
      ]
    },
    "1213": {
      "op": "dupn 2",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1"
      ]
    },
    "1215": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1",
        "0"
      ]
    },
    "1216": {
      "op": "dup",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1",
        "0",
        "0"
      ]
    },
    "1217": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "1",
        "key#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "0",
        "1",
        "1",
        "1",
        "0",
        "0",
        "key#0 (copy)"
      ]
    },
    "1219": {
      "op": "frame_bury 6"
    },
    "1221": {
      "op": "frame_bury 5"
    },
    "1223": {
      "op": "frame_bury 4"
    },
    "1225": {
      "op": "frame_bury 3"
    },
    "1227": {
      "op": "frame_bury 2"
    },
    "1229": {
      "op": "frame_bury 1"
    },
    "1231": {
      "op": "frame_bury 0"
    },
    "1233": {
      "retsub": true,
      "op": "retsub"
    },
    "1234": {
      "block": "pluginCheck_after_if_else@2",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "\"p\""
      ]
    },
    "1235": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1237": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "tmp%1#0"
      ]
    },
    "1238": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1239": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "copy%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "copy%0#0"
      ]
    },
    "1240": {
      "op": "dup",
      "defined_out": [
        "copy%0#0",
        "copy%0#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "1241": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "copy%0#0",
        "copy%0#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "10"
      ]
    },
    "1243": {
      "op": "intc_2 // 8",
      "defined_out": [
        "10",
        "8",
        "copy%0#0",
        "copy%0#0 (copy)"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "10",
        "8"
      ]
    },
    "1244": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item3%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "copy%0#0",
        "item3%0#0"
      ]
    },
    "1245": {
      "op": "btoi",
      "defined_out": [
        "copy%0#0",
        "item3%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "copy%0#0",
        "item3%1#0"
      ]
    },
    "1246": {
      "op": "swap",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "copy%0#0"
      ]
    },
    "1247": {
      "op": "dup",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "1248": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item3%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "18"
      ]
    },
    "1250": {
      "op": "intc_2 // 8",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "18",
        "8"
      ]
    },
    "1251": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item3%1#0",
        "item4%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "copy%0#0",
        "item4%0#0"
      ]
    },
    "1252": {
      "op": "btoi",
      "defined_out": [
        "copy%0#0",
        "item3%1#0",
        "item4%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "copy%0#0",
        "item4%1#0"
      ]
    },
    "1253": {
      "op": "swap",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "copy%0#0"
      ]
    },
    "1254": {
      "op": "dup",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "1255": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item3%1#0",
        "item4%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "26"
      ]
    },
    "1257": {
      "op": "extract_uint16",
      "defined_out": [
        "copy%0#0",
        "item3%1#0",
        "item4%1#0",
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "copy%0#0",
        "item_start_offset%0#0"
      ]
    },
    "1258": {
      "op": "swap",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item_start_offset%0#0",
        "copy%0#0"
      ]
    },
    "1259": {
      "op": "dup",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item_start_offset%0#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "1260": {
      "op": "len",
      "defined_out": [
        "copy%0#0",
        "item3%1#0",
        "item4%1#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item_start_offset%0#0",
        "copy%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1261": {
      "op": "swap",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "copy%0#0"
      ]
    },
    "1262": {
      "op": "dup",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "1263": {
      "op": "uncover 3",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item_end_offset%0#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "1265": {
      "op": "uncover 3",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1267": {
      "op": "substring3",
      "defined_out": [
        "copy%0#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "copy%0#0",
        "item5%0#0"
      ]
    },
    "1268": {
      "op": "swap",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0"
      ]
    },
    "1269": {
      "op": "dup",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "1270": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "225"
      ]
    },
    "1272": {
      "op": "getbit",
      "defined_out": [
        "copy%0#0",
        "is_true%2#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "is_true%2#0"
      ]
    },
    "1273": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "copy%0#0",
        "is_true%2#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "1275": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "copy%0#0",
        "is_true%2#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "1276": {
      "op": "uncover 2",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "1278": {
      "op": "setbit",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%2#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "encoded_bool%2#0"
      ]
    },
    "1279": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "1280": {
      "op": "getbit",
      "defined_out": [
        "copy%0#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "copy%0#0",
        "item7%0#0"
      ]
    },
    "1281": {
      "op": "swap",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "copy%0#0"
      ]
    },
    "1282": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "copy%0#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "copy%0#0",
        "29"
      ]
    },
    "1284": {
      "op": "intc_2 // 8",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "copy%0#0",
        "29",
        "8"
      ]
    },
    "1285": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%0#0"
      ]
    },
    "1286": {
      "op": "btoi",
      "defined_out": [
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0"
      ]
    },
    "1287": {
      "op": "uncover 4",
      "defined_out": [
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.lastValid#0"
      ]
    },
    "1289": {
      "op": "frame_bury 7",
      "defined_out": [
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item4%1#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0"
      ]
    },
    "1291": {
      "op": "uncover 3",
      "defined_out": [
        "item5%0#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.cooldown#0"
      ]
    },
    "1293": {
      "op": "frame_bury 5",
      "defined_out": [
        "item5%0#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item5%0#0",
        "item7%0#0",
        "item8%1#0"
      ]
    },
    "1295": {
      "op": "uncover 2",
      "defined_out": [
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "item7%0#0",
        "item8%1#0",
        "pluginInfo.methods#0"
      ]
    },
    "1297": {
      "op": "frame_bury 0",
      "defined_out": [
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0",
        "pluginInfo.useRounds#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.lastCalled#0"
      ]
    },
    "1299": {
      "op": "frame_bury 6",
      "defined_out": [
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0",
        "pluginInfo.useRounds#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.useRounds#0"
      ]
    },
    "1301": {
      "op": "bz pluginCheck_ternary_false@4",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1304": {
      "block": "pluginCheck_ternary_true@3",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0"
      ]
    },
    "1306": {
      "block": "pluginCheck_ternary_merge@5",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "epochRef#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0",
        "epochRef#0 (copy)"
      ]
    },
    "1307": {
      "op": "frame_dig 7",
      "defined_out": [
        "epochRef#0 (copy)",
        "pluginInfo.lastValid#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0",
        "epochRef#0 (copy)",
        "pluginInfo.lastValid#0"
      ]
    },
    "1309": {
      "op": ">",
      "defined_out": [
        "expired#0",
        "pluginInfo.lastValid#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0",
        "expired#0"
      ]
    },
    "1310": {
      "op": "frame_bury 1",
      "defined_out": [
        "expired#0",
        "pluginInfo.lastValid#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0"
      ]
    },
    "1312": {
      "op": "frame_dig 5",
      "defined_out": [
        "expired#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastValid#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0",
        "pluginInfo.cooldown#0"
      ]
    },
    "1314": {
      "op": "dup",
      "defined_out": [
        "expired#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.cooldown#0 (copy)",
        "pluginInfo.lastValid#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0",
        "pluginInfo.cooldown#0 (copy)",
        "pluginInfo.cooldown#0 (copy)"
      ]
    },
    "1315": {
      "op": "cover 2",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.cooldown#0",
        "ternary_result%0#0",
        "pluginInfo.cooldown#0 (copy)"
      ]
    },
    "1317": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.cooldown#0",
        "ternary_result%0#0",
        "pluginInfo.cooldown#0 (copy)",
        "0"
      ]
    },
    "1318": {
      "op": ">",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastValid#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.cooldown#0",
        "ternary_result%0#0",
        "hasCooldown#0"
      ]
    },
    "1319": {
      "op": "frame_bury 2",
      "defined_out": [
        "epochRef#0",
        "expired#0",
        "hasCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.cooldown#0",
        "epochRef#0"
      ]
    },
    "1321": {
      "op": "frame_dig 6",
      "defined_out": [
        "epochRef#0",
        "expired#0",
        "hasCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.cooldown#0",
        "epochRef#0",
        "pluginInfo.lastCalled#0"
      ]
    },
    "1323": {
      "op": "-",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.cooldown#0",
        "tmp%2#0"
      ]
    },
    "1324": {
      "op": ">",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "onCooldown#0"
      ]
    },
    "1325": {
      "op": "frame_bury 4",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1327": {
      "op": "frame_dig 0",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.methods#0"
      ]
    },
    "1329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "pluginInfo.methods#0",
        "0"
      ]
    },
    "1330": {
      "op": "extract_uint16",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "tmp%3#0"
      ]
    },
    "1331": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1332": {
      "op": ">",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "hasMethodRestrictions#0"
      ]
    },
    "1333": {
      "op": "frame_bury 3",
      "defined_out": [
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1335": {
      "op": "frame_dig 8",
      "defined_out": [
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "pluginInfo.methods#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "exists#0"
      ]
    },
    "1337": {
      "op": "bz pluginCheck_bool_false@9",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1340": {
      "block": "pluginCheck_and_contd@6",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "expired#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "expired#0"
      ]
    },
    "1342": {
      "op": "bnz pluginCheck_bool_false@9",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1345": {
      "block": "pluginCheck_and_contd@7",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "onCooldown#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "onCooldown#0"
      ]
    },
    "1347": {
      "op": "bnz pluginCheck_bool_false@9",
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ]
    },
    "1350": {
      "block": "pluginCheck_bool_true@8",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0"
      ]
    },
    "1351": {
      "block": "pluginCheck_bool_merge@10",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "and_result%0#0",
        "exists#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0",
        "exists#0"
      ]
    },
    "1353": {
      "op": "frame_dig 1",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0"
      ]
    },
    "1355": {
      "op": "frame_dig 2",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0"
      ]
    },
    "1357": {
      "op": "frame_dig 4",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0"
      ]
    },
    "1359": {
      "op": "frame_dig 3",
      "defined_out": [
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "hasMethodRestrictions#0"
      ]
    },
    "1361": {
      "op": "uncover 5",
      "defined_out": [
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "valid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "hasMethodRestrictions#0",
        "valid#0"
      ]
    },
    "1363": {
      "op": "frame_dig -1",
      "defined_out": [
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "key#0 (copy)",
        "onCooldown#0",
        "valid#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "exists#0",
        "expired#0",
        "hasCooldown#0",
        "onCooldown#0",
        "hasMethodRestrictions#0",
        "valid#0",
        "key#0 (copy)"
      ]
    },
    "1365": {
      "op": "frame_bury 6"
    },
    "1367": {
      "op": "frame_bury 5"
    },
    "1369": {
      "op": "frame_bury 4"
    },
    "1371": {
      "op": "frame_bury 3"
    },
    "1373": {
      "op": "frame_bury 2"
    },
    "1375": {
      "op": "frame_bury 1"
    },
    "1377": {
      "op": "frame_bury 0"
    },
    "1379": {
      "retsub": true,
      "op": "retsub"
    },
    "1380": {
      "block": "pluginCheck_bool_false@9",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "and_result%0#0"
      ]
    },
    "1381": {
      "op": "b pluginCheck_bool_merge@10"
    },
    "1384": {
      "block": "pluginCheck_ternary_false@4",
      "stack_in": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "pluginInfo.methods#0",
        "expired#0",
        "hasCooldown#0",
        "hasMethodRestrictions#0",
        "onCooldown#0",
        "pluginInfo.cooldown#0",
        "pluginInfo.lastCalled#0",
        "pluginInfo.lastValid#0",
        "exists#0",
        "ternary_result%0#0"
      ]
    },
    "1386": {
      "op": "b pluginCheck_ternary_merge@5"
    },
    "1389": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.fullPluginCheck",
      "params": {
        "key#0": "bytes",
        "txn#0": "uint64",
        "methodOffsets#0": "bytes",
        "methodIndex#0": "uint64"
      },
      "block": "fullPluginCheck",
      "stack_in": [],
      "op": "proto 4 11"
    },
    "1392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#8"
      ]
    },
    "1393": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "key#8",
        "check.exists#0"
      ]
    },
    "1394": {
      "op": "dupn 11",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0"
      ]
    },
    "1396": {
      "block": "fullPluginCheck_block@0",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "key#0 (copy)"
      ]
    },
    "1398": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCheck",
      "op": "callsub pluginCheck",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ]
    },
    "1401": {
      "op": "cover 6",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0"
      ]
    },
    "1403": {
      "op": "cover 6",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0"
      ]
    },
    "1405": {
      "op": "cover 5",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0"
      ]
    },
    "1407": {
      "op": "cover 4",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0"
      ]
    },
    "1409": {
      "op": "cover 3",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0"
      ]
    },
    "1411": {
      "op": "cover 2",
      "defined_out": [
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0"
      ]
    },
    "1413": {
      "op": "swap",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "pluginCheck%6#0"
      ]
    },
    "1414": {
      "op": "frame_bury -4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1416": {
      "op": "intc_1 // 1",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "1"
      ]
    },
    "1417": {
      "op": "bz fullPluginCheck_after_if_else@2",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1420": {
      "block": "fullPluginCheck_after_if_else@2",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 18",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0"
      ]
    },
    "1422": {
      "op": "frame_bury 1",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1424": {
      "op": "frame_dig 17",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.expired#0"
      ]
    },
    "1426": {
      "op": "frame_bury 2",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1428": {
      "op": "frame_dig 16",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasCooldown#0"
      ]
    },
    "1430": {
      "op": "frame_bury 3",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1432": {
      "op": "frame_dig 15",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.onCooldown#0"
      ]
    },
    "1434": {
      "op": "frame_bury 5",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1436": {
      "op": "frame_dig 14",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1438": {
      "op": "frame_bury 4",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1440": {
      "op": "frame_dig 13",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0"
      ]
    },
    "1442": {
      "op": "dup",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0",
        "check.valid#0"
      ]
    },
    "1443": {
      "op": "frame_bury 6",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0"
      ]
    },
    "1445": {
      "op": "bnz fullPluginCheck_after_if_else@4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1448": {
      "block": "fullPluginCheck_if_body@3",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0"
      ]
    },
    "1450": {
      "op": "frame_dig 2",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0"
      ]
    },
    "1452": {
      "op": "frame_dig 3",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ]
    },
    "1454": {
      "op": "frame_dig 5",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ]
    },
    "1456": {
      "op": "frame_dig 4",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1458": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0"
      ]
    },
    "1459": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1"
      ]
    },
    "1460": {
      "op": "dup",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1"
      ]
    },
    "1461": {
      "op": "frame_dig 6",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1",
        "check.valid#0"
      ]
    },
    "1463": {
      "op": "frame_dig -4",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1",
        "check.valid#0",
        "key#0 (copy)"
      ]
    },
    "1465": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "1",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "key#0 (copy)",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "0",
        "1",
        "1",
        "check.valid#0",
        "key#0 (copy)",
        "methodOffsets#0 (copy)"
      ]
    },
    "1467": {
      "op": "frame_bury 10"
    },
    "1469": {
      "op": "frame_bury 9"
    },
    "1471": {
      "op": "frame_bury 8"
    },
    "1473": {
      "op": "frame_bury 7"
    },
    "1475": {
      "op": "frame_bury 6"
    },
    "1477": {
      "op": "frame_bury 5"
    },
    "1479": {
      "op": "frame_bury 4"
    },
    "1481": {
      "op": "frame_bury 3"
    },
    "1483": {
      "op": "frame_bury 2"
    },
    "1485": {
      "op": "frame_bury 1"
    },
    "1487": {
      "op": "frame_bury 0"
    },
    "1489": {
      "retsub": true,
      "op": "retsub"
    },
    "1490": {
      "block": "fullPluginCheck_after_if_else@4",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "check.hasMethodRestrictions#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1492": {
      "op": "dup",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "check.hasMethodRestrictions#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "check.hasMethodRestrictions#0 (copy)"
      ]
    },
    "1493": {
      "op": "!",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1494": {
      "op": "frame_bury 7",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1496": {
      "op": "intc_0 // 0",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodHasCooldown#0"
      ]
    },
    "1497": {
      "op": "frame_bury 8",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1499": {
      "op": "intc_0 // 0",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodOnCooldown#0"
      ]
    },
    "1500": {
      "op": "frame_bury 9",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1502": {
      "op": "frame_dig -4",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0",
        "key#8"
      ]
    },
    "1504": {
      "op": "frame_bury 0",
      "defined_out": [
        "check.hasMethodRestrictions#0",
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1506": {
      "op": "bz fullPluginCheck_after_if_else@8",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1509": {
      "block": "fullPluginCheck_if_body@5",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "1511": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodOffsets#0 (copy)",
        "0"
      ]
    },
    "1512": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%1#0"
      ]
    },
    "1513": {
      "op": "frame_dig -1",
      "defined_out": [
        "methodIndex#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%1#0",
        "methodIndex#0 (copy)"
      ]
    },
    "1515": {
      "op": ">",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%2#0"
      ]
    },
    "1516": {
      "error": "malformed method offsets",
      "op": "assert // malformed method offsets",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1517": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "1519": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1522": {
      "op": "frame_dig -1",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "methodIndex#0 (copy)"
      ]
    },
    "1524": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "methodIndex#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "methodIndex#0 (copy)",
        "8"
      ]
    },
    "1525": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1526": {
      "op": "intc_2 // 8",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "1527": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%3#0"
      ]
    },
    "1528": {
      "op": "btoi",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%4#0"
      ]
    },
    "1529": {
      "op": "frame_dig -4",
      "defined_out": [
        "key#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%4#0",
        "key#0 (copy)"
      ]
    },
    "1531": {
      "op": "frame_dig -3",
      "defined_out": [
        "key#0 (copy)",
        "tmp%4#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "tmp%4#0",
        "key#0 (copy)",
        "txn#0 (copy)"
      ]
    },
    "1533": {
      "op": "uncover 2",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "key#0 (copy)",
        "txn#0 (copy)",
        "tmp%4#0"
      ]
    },
    "1535": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.methodCheck",
      "op": "callsub methodCheck",
      "defined_out": [
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ]
    },
    "1538": {
      "op": "cover 3",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0"
      ]
    },
    "1540": {
      "op": "frame_bury 12",
      "defined_out": [
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0",
        "methodCheck%0#0",
        "methodCheck%1#0"
      ]
    },
    "1542": {
      "op": "frame_bury 11",
      "defined_out": [
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "methodCheck%3#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0",
        "methodCheck%0#0"
      ]
    },
    "1544": {
      "op": "frame_bury 10",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "methodCheck%3#0"
      ]
    },
    "1546": {
      "op": "frame_bury -4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1548": {
      "op": "intc_1 // 1",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "1"
      ]
    },
    "1549": {
      "op": "bz fullPluginCheck_after_if_else@7",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1552": {
      "block": "fullPluginCheck_after_if_else@7",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1554": {
      "op": "frame_bury 7",
      "defined_out": [
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1556": {
      "op": "frame_dig 11",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodHasCooldown#0"
      ]
    },
    "1558": {
      "op": "frame_bury 8",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1560": {
      "op": "frame_dig 12",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodOnCooldown#0"
      ]
    },
    "1562": {
      "op": "frame_bury 9",
      "defined_out": [
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1564": {
      "op": "frame_dig -4",
      "defined_out": [
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "key#8"
      ]
    },
    "1566": {
      "op": "frame_bury 0",
      "defined_out": [
        "key#8",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1568": {
      "block": "fullPluginCheck_after_if_else@8",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "key#8"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "key#8"
      ]
    },
    "1570": {
      "op": "frame_bury -4",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1572": {
      "op": "frame_dig 6",
      "defined_out": [
        "check.valid#0",
        "key#8"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.valid#0"
      ]
    },
    "1574": {
      "op": "bz fullPluginCheck_bool_false@11",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1577": {
      "block": "fullPluginCheck_and_contd@9",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1579": {
      "op": "bz fullPluginCheck_bool_false@11",
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ]
    },
    "1582": {
      "block": "fullPluginCheck_bool_true@10",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0"
      ]
    },
    "1583": {
      "block": "fullPluginCheck_bool_merge@12",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "check.exists#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0"
      ]
    },
    "1585": {
      "op": "frame_dig 2",
      "defined_out": [
        "check.exists#0",
        "check.expired#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0"
      ]
    },
    "1587": {
      "op": "frame_dig 3",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0"
      ]
    },
    "1589": {
      "op": "frame_dig 5",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0"
      ]
    },
    "1591": {
      "op": "frame_dig 4",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0"
      ]
    },
    "1593": {
      "op": "frame_dig 7",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0"
      ]
    },
    "1595": {
      "op": "frame_dig 8",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0"
      ]
    },
    "1597": {
      "op": "frame_dig 9",
      "defined_out": [
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ]
    },
    "1599": {
      "op": "uncover 8",
      "defined_out": [
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "and_result%0#0"
      ]
    },
    "1601": {
      "op": "frame_dig -4",
      "defined_out": [
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "key#0 (copy)",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "and_result%0#0",
        "key#0 (copy)"
      ]
    },
    "1603": {
      "op": "frame_dig -2",
      "defined_out": [
        "and_result%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "key#0 (copy)",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodOffsets#0 (copy)"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.onCooldown#0",
        "check.hasMethodRestrictions#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "and_result%0#0",
        "key#0 (copy)",
        "methodOffsets#0 (copy)"
      ]
    },
    "1605": {
      "op": "frame_bury 10"
    },
    "1607": {
      "op": "frame_bury 9"
    },
    "1609": {
      "op": "frame_bury 8"
    },
    "1611": {
      "op": "frame_bury 7"
    },
    "1613": {
      "op": "frame_bury 6"
    },
    "1615": {
      "op": "frame_bury 5"
    },
    "1617": {
      "op": "frame_bury 4"
    },
    "1619": {
      "op": "frame_bury 3"
    },
    "1621": {
      "op": "frame_bury 2"
    },
    "1623": {
      "op": "frame_bury 1"
    },
    "1625": {
      "op": "frame_bury 0"
    },
    "1627": {
      "retsub": true,
      "op": "retsub"
    },
    "1628": {
      "block": "fullPluginCheck_bool_false@11",
      "stack_in": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#8",
        "check.exists#0",
        "check.expired#0",
        "check.hasCooldown#0",
        "check.hasMethodRestrictions#0",
        "check.onCooldown#0",
        "check.valid#0",
        "mCheck.methodAllowed#0",
        "mCheck.methodHasCooldown#0",
        "mCheck.methodOnCooldown#0",
        "methodCheck%0#0",
        "methodCheck%1#0",
        "methodCheck%2#0",
        "pluginCheck%5#0",
        "pluginCheck%4#0",
        "pluginCheck%3#0",
        "pluginCheck%2#0",
        "pluginCheck%1#0",
        "pluginCheck%0#0",
        "and_result%0#0"
      ]
    },
    "1629": {
      "op": "b fullPluginCheck_bool_merge@12"
    },
    "1632": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertValidGroup",
      "params": {
        "key#0": "bytes",
        "methodOffsets#0": "bytes"
      },
      "block": "assertValidGroup",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "1635": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0"
      ]
    },
    "1636": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0"
      ]
    },
    "1637": {
      "op": "dupn 11",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0"
      ]
    },
    "1639": {
      "block": "assertValidGroup_block@0",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0"
      ]
    },
    "1641": {
      "op": "frame_dig -1",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1643": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "\"p\""
      ]
    },
    "1644": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1646": {
      "op": "concat",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%0#0"
      ]
    },
    "1647": {
      "op": "box_get",
      "defined_out": [
        "key%out#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1648": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "maybe_value%0#0"
      ]
    },
    "1649": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "key%out#0",
        "maybe_value%0#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "maybe_value%0#0",
        "225"
      ]
    },
    "1651": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "is_true%0#0"
      ]
    },
    "1652": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1654": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1655": {
      "op": "uncover 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1657": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "encoded_bool%0#0"
      ]
    },
    "1658": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1659": {
      "op": "getbit",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%1#0"
      ]
    },
    "1660": {
      "op": "bz assertValidGroup_ternary_false@2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1663": {
      "block": "assertValidGroup_ternary_true@1",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "ternary_result%0#0"
      ]
    },
    "1665": {
      "block": "assertValidGroup_ternary_merge@3",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "ternary_result%0#0"
      ],
      "op": "frame_bury 1",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1667": {
      "op": "frame_dig -2",
      "defined_out": [
        "epochRef#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)"
      ]
    },
    "1669": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCheck",
      "op": "callsub pluginCheck",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0",
        "pluginCheck%6#0"
      ]
    },
    "1672": {
      "op": "cover 6",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%4#0",
        "pluginCheck%5#0"
      ]
    },
    "1674": {
      "op": "popn 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0"
      ]
    },
    "1676": {
      "op": "frame_bury 10",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0"
      ]
    },
    "1678": {
      "op": "frame_bury 9",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0"
      ]
    },
    "1680": {
      "op": "frame_bury 8",
      "defined_out": [
        "epochRef#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "pluginCheck%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0",
        "pluginCheck%0#0"
      ]
    },
    "1682": {
      "op": "frame_bury 7",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "pluginCheck%6#0"
      ]
    },
    "1684": {
      "op": "frame_bury -2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1686": {
      "op": "intc_1 // 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "1"
      ]
    },
    "1687": {
      "op": "bz assertValidGroup_after_if_else@5",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1690": {
      "block": "assertValidGroup_if_body@4",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0"
      ]
    },
    "1692": {
      "op": "frame_bury 13",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1694": {
      "block": "assertValidGroup_after_if_else@5",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "initialCheck.exists#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.exists#0"
      ]
    },
    "1696": {
      "op": "frame_dig 8",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.exists#0",
        "initialCheck.expired#0"
      ]
    },
    "1698": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0"
      ]
    },
    "1699": {
      "op": "frame_dig 9",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0",
        "initialCheck.hasCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0",
        "initialCheck.hasCooldown#0"
      ]
    },
    "1701": {
      "op": "frame_bury 5",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0",
        "initialCheck.hasCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0"
      ]
    },
    "1703": {
      "op": "frame_dig 10",
      "defined_out": [
        "initialCheck.exists#0",
        "initialCheck.expired#0",
        "initialCheck.hasCooldown#0",
        "initialCheck.onCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0",
        "initialCheck.onCooldown#0"
      ]
    },
    "1705": {
      "op": "cover 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0",
        "initialCheck.expired#0",
        "initialCheck.exists#0"
      ]
    },
    "1707": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0",
        "initialCheck.expired#0"
      ]
    },
    "1708": {
      "op": "!",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "initialCheck.onCooldown#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0",
        "tmp%2#0"
      ]
    },
    "1709": {
      "error": "plugin expired",
      "op": "assert // plugin expired",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.onCooldown#0"
      ]
    },
    "1710": {
      "op": "!",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%3#0"
      ]
    },
    "1711": {
      "error": "plugin on cooldown",
      "op": "assert // plugin on cooldown",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1712": {
      "op": "intc_0 // 0",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ]
    },
    "1713": {
      "op": "frame_bury 11",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1715": {
      "op": "intc_0 // 0",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0"
      ]
    },
    "1716": {
      "op": "frame_bury 6",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1718": {
      "op": "txn GroupIndex",
      "defined_out": [
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%4#0"
      ]
    },
    "1720": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%4#0",
        "1"
      ]
    },
    "1721": {
      "op": "+",
      "defined_out": [
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0"
      ]
    },
    "1722": {
      "op": "frame_bury 4",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1724": {
      "block": "assertValidGroup_while_top@6",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "global GroupSize",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%5#0"
      ]
    },
    "1726": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%5#0",
        "i#0"
      ]
    },
    "1728": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%6#0"
      ]
    },
    "1729": {
      "op": "bz assertValidGroup_after_while@19",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1732": {
      "block": "assertValidGroup_while_body@7",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1734": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0"
      ]
    },
    "1735": {
      "op": "frame_bury 12",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1737": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.txnRekeysBack",
      "op": "callsub txnRekeysBack",
      "defined_out": [
        "tmp%7#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%7#0"
      ]
    },
    "1740": {
      "op": "bz assertValidGroup_after_if_else@9",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1743": {
      "block": "assertValidGroup_if_body@8",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ]
    },
    "1744": {
      "op": "frame_bury 11",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1746": {
      "block": "assertValidGroup_block@20",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ]
    },
    "1748": {
      "error": "missing rekey back",
      "op": "assert // missing rekey back",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1749": {
      "op": "frame_dig 13",
      "defined_out": [
        "key%out#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0"
      ]
    },
    "1751": {
      "op": "frame_dig 14",
      "defined_out": [
        "key%out#0",
        "methodOffsets%out#0",
        "rekeysBack#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1753": {
      "op": "frame_bury 1"
    },
    "1755": {
      "op": "frame_bury 0"
    },
    "1757": {
      "retsub": true,
      "op": "retsub"
    },
    "1758": {
      "block": "assertValidGroup_after_if_else@9",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1760": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "tmp%8#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%8#0"
      ]
    },
    "1762": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%8#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%8#0",
        "6"
      ]
    },
    "1764": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%9#0"
      ]
    },
    "1765": {
      "op": "bz assertValidGroup_after_if_else@11",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1768": {
      "block": "assertValidGroup_block@18",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0"
      ]
    },
    "1770": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0",
        "1"
      ]
    },
    "1771": {
      "op": "+",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "i#0"
      ]
    },
    "1772": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1774": {
      "op": "b assertValidGroup_while_top@6"
    },
    "1777": {
      "block": "assertValidGroup_after_if_else@11",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1779": {
      "op": "dup",
      "defined_out": [
        "txn#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1780": {
      "op": "gtxns ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0"
      ]
    },
    "1782": {
      "op": "frame_dig -2",
      "defined_out": [
        "key#0 (copy)",
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "key#0 (copy)"
      ]
    },
    "1784": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0 (copy)",
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "key#0 (copy)",
        "0"
      ]
    },
    "1785": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "key#0 (copy)",
        "tmp%10#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "key#0 (copy)",
        "0",
        "8"
      ]
    },
    "1786": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1787": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1788": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%13#0"
      ]
    },
    "1789": {
      "error": "cannot call other apps during rekey",
      "op": "assert // cannot call other apps during rekey",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1790": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1791": {
      "op": "gtxns OnCompletion",
      "defined_out": [
        "tmp%14#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%14#0"
      ]
    },
    "1793": {
      "op": "intc_0 // 0",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%14#0",
        "0"
      ]
    },
    "1794": {
      "op": "==",
      "defined_out": [
        "tmp%15#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%15#0"
      ]
    },
    "1795": {
      "error": "invalid oncomplete must be no op",
      "op": "assert // invalid oncomplete must be no op",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1796": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1797": {
      "op": "gtxns NumAppArgs",
      "defined_out": [
        "tmp%16#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%16#0"
      ]
    },
    "1799": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%16#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1800": {
      "op": ">",
      "defined_out": [
        "tmp%17#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%17#0"
      ]
    },
    "1801": {
      "error": "invalid sender must be this app id",
      "op": "assert // invalid sender must be this app id",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1802": {
      "op": "dup",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)"
      ]
    },
    "1803": {
      "op": "intc_1 // 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "txn#0 (copy)",
        "1"
      ]
    },
    "1804": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%18#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%18#0"
      ]
    },
    "1806": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%19#0"
      ]
    },
    "1807": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1809": {
      "op": "==",
      "defined_out": [
        "tmp%21#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "tmp%21#0"
      ]
    },
    "1810": {
      "error": "invalid sender app id",
      "op": "assert // invalid sender app id",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0"
      ]
    },
    "1811": {
      "op": "frame_dig -2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "txn#0",
        "key#0 (copy)"
      ]
    },
    "1813": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)",
        "txn#0"
      ]
    },
    "1814": {
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)",
        "methodOffsets#0 (copy)",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)",
        "txn#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "1816": {
      "op": "frame_dig 6",
      "defined_out": [
        "key#0 (copy)",
        "methodIndex#0",
        "methodOffsets#0 (copy)",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key#0 (copy)",
        "txn#0",
        "methodOffsets#0 (copy)",
        "methodIndex#0"
      ]
    },
    "1818": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.fullPluginCheck",
      "op": "callsub fullPluginCheck",
      "defined_out": [
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "methodIndex#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "fullPluginCheck%10#0"
      ]
    },
    "1821": {
      "op": "cover 10",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0"
      ]
    },
    "1823": {
      "op": "frame_bury 0",
      "defined_out": [
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "methodIndex#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0"
      ]
    },
    "1825": {
      "op": "frame_bury 3",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0"
      ]
    },
    "1827": {
      "op": "frame_bury 2",
      "defined_out": [
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "fullPluginCheck%9#0",
        "methodIndex#0",
        "txn#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0",
        "fullPluginCheck%0#0",
        "fullPluginCheck%1#0",
        "fullPluginCheck%2#0",
        "fullPluginCheck%3#0",
        "fullPluginCheck%4#0",
        "fullPluginCheck%5#0",
        "fullPluginCheck%6#0"
      ]
    },
    "1829": {
      "op": "popn 7",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%10#0"
      ]
    },
    "1831": {
      "op": "frame_bury -1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1833": {
      "op": "intc_1 // 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "1"
      ]
    },
    "1834": {
      "op": "bz assertValidGroup_after_if_else@13",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1837": {
      "block": "assertValidGroup_if_body@12",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1839": {
      "op": "frame_bury 14",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1841": {
      "block": "assertValidGroup_after_if_else@13",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "fullPluginCheck%9#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "fullPluginCheck%9#0"
      ]
    },
    "1843": {
      "op": "frame_bury -2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1845": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "fullPluginCheck%9#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "1"
      ]
    },
    "1846": {
      "op": "bz assertValidGroup_after_if_else@15",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1849": {
      "block": "assertValidGroup_if_body@14",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "key%out#0"
      ]
    },
    "1851": {
      "op": "frame_bury 13",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1853": {
      "block": "assertValidGroup_after_if_else@15",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "check.methodOnCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.methodOnCooldown#0"
      ]
    },
    "1855": {
      "op": "frame_dig 3",
      "defined_out": [
        "check.methodOnCooldown#0",
        "check.valid#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.methodOnCooldown#0",
        "check.valid#0"
      ]
    },
    "1857": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.valid#0",
        "check.methodOnCooldown#0"
      ]
    },
    "1858": {
      "op": "!",
      "defined_out": [
        "check.valid#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.valid#0",
        "tmp%22#0"
      ]
    },
    "1859": {
      "error": "method on cooldown",
      "op": "assert // method on cooldown",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "check.valid#0"
      ]
    },
    "1860": {
      "error": "invalid plugin call",
      "op": "assert // invalid plugin call",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1861": {
      "op": "frame_dig 5",
      "defined_out": [
        "initialCheck.hasCooldown#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "initialCheck.hasCooldown#0"
      ]
    },
    "1863": {
      "op": "bz assertValidGroup_after_if_else@17",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1866": {
      "block": "assertValidGroup_if_body@16",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "epochRef#0"
      ]
    },
    "1868": {
      "op": "itob",
      "defined_out": [
        "epochRef#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0"
      ]
    },
    "1869": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "epochRef#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "\"p\""
      ]
    },
    "1870": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"p\"",
        "epochRef#0",
        "key#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1872": {
      "op": "concat",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0"
      ]
    },
    "1873": {
      "op": "dup",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1874": {
      "op": "box_get",
      "defined_out": [
        "epochRef#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%23#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1875": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "maybe_value%1#0"
      ]
    },
    "1876": {
      "op": "uncover 2",
      "defined_out": [
        "assigned_value%0#0",
        "epochRef#0",
        "maybe_value%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "maybe_value%1#0",
        "assigned_value%0#0"
      ]
    },
    "1878": {
      "op": "swap",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "assigned_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "1879": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "assigned_value%0#0",
        "epochRef#0",
        "maybe_value%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "assigned_value%0#0",
        "maybe_value%1#0",
        "29"
      ]
    },
    "1881": {
      "op": "uncover 2",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "maybe_value%1#0",
        "29",
        "assigned_value%0#0"
      ]
    },
    "1883": {
      "op": "replace3",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0"
      ]
    },
    "1884": {
      "op": "dig 1",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1886": {
      "op": "box_del",
      "defined_out": [
        "epochRef#0",
        "tmp%23#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "1887": {
      "op": "pop",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "tmp%23#0",
        "updated_data%0#0"
      ]
    },
    "1888": {
      "op": "box_put",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1889": {
      "block": "assertValidGroup_after_if_else@17",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "methodIndex#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0"
      ]
    },
    "1891": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "methodIndex#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0",
        "1"
      ]
    },
    "1892": {
      "op": "+",
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "methodIndex#0"
      ]
    },
    "1893": {
      "op": "frame_bury 6",
      "defined_out": [
        "methodIndex#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ]
    },
    "1895": {
      "op": "b assertValidGroup_block@18"
    },
    "1898": {
      "block": "assertValidGroup_after_while@19",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "b assertValidGroup_block@20"
    },
    "1901": {
      "block": "assertValidGroup_ternary_false@2",
      "stack_in": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "fullPluginCheck%9#0",
        "epochRef#0",
        "fullPluginCheck%7#0",
        "fullPluginCheck%8#0",
        "i#0",
        "initialCheck.hasCooldown#0",
        "methodIndex#0",
        "pluginCheck%0#0",
        "pluginCheck%1#0",
        "pluginCheck%2#0",
        "pluginCheck%3#0",
        "rekeysBack#0",
        "txn#0",
        "key%out#0",
        "methodOffsets%out#0",
        "ternary_result%0#0"
      ]
    },
    "1903": {
      "op": "b assertValidGroup_ternary_merge@3"
    },
    "1906": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.methodCheck",
      "params": {
        "key#0": "bytes",
        "txn#0": "uint64",
        "offset#0": "uint64"
      },
      "block": "methodCheck",
      "stack_in": [],
      "op": "proto 3 4"
    },
    "1909": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "onCooldown#0"
      ]
    },
    "1910": {
      "block": "methodCheck_block@0",
      "stack_in": [
        "onCooldown#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)"
      ]
    },
    "1912": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)",
        "0"
      ]
    },
    "1913": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%0#0"
      ]
    },
    "1915": {
      "op": "len",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%1#0"
      ]
    },
    "1916": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "tmp%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%1#0",
        "4"
      ]
    },
    "1917": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "tmp%2#0"
      ]
    },
    "1918": {
      "error": "invalid method signature length",
      "op": "assert // invalid method signature length",
      "stack_out": [
        "onCooldown#0"
      ]
    },
    "1919": {
      "op": "frame_dig -2",
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)"
      ]
    },
    "1921": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "txn#0 (copy)",
        "0"
      ]
    },
    "1922": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0"
      ]
    },
    "1924": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "1925": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "1926": {
      "op": "intc_3 // 4",
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "length%0#0",
        "4"
      ]
    },
    "1927": {
      "op": "==",
      "defined_out": [
        "lengths_equal%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "to_encode%0#0",
        "lengths_equal%0#0"
      ]
    },
    "1928": {
      "error": "invalid size",
      "op": "assert // invalid size",
      "defined_out": [
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0"
      ]
    },
    "1929": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "\"p\""
      ]
    },
    "1930": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"p\"",
        "key#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1932": {
      "op": "concat",
      "defined_out": [
        "selectorArg#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "tmp%3#0"
      ]
    },
    "1933": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1934": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0"
      ]
    },
    "1935": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1936": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "26"
      ]
    },
    "1938": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "1939": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "maybe_value%0#0"
      ]
    },
    "1940": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1941": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1942": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%0#0"
      ]
    },
    "1943": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "item_end_offset%0#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "1945": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1947": {
      "op": "substring3",
      "defined_out": [
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0"
      ]
    },
    "1948": {
      "op": "dup",
      "defined_out": [
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "methods#0"
      ]
    },
    "1949": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1952": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "methods#0",
        "offset#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "offset#0 (copy)"
      ]
    },
    "1954": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "array_head_and_tail%0#0",
        "methods#0",
        "offset#0 (copy)",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "offset#0 (copy)",
        "20"
      ]
    },
    "1956": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1957": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "20"
      ]
    },
    "1959": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0"
      ]
    },
    "1960": {
      "op": "dup",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "allowedMethod#0"
      ]
    },
    "1961": {
      "op": "intc_3 // 4",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "allowedMethod#0",
        "4"
      ]
    },
    "1962": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "allowedMethod#0",
        "4",
        "8"
      ]
    },
    "1963": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "tmp%6#0"
      ]
    },
    "1964": {
      "op": "btoi",
      "defined_out": [
        "allowedMethod#0",
        "methods#0",
        "selectorArg#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "tmp%7#0"
      ]
    },
    "1965": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "tmp%7#0",
        "0"
      ]
    },
    "1966": {
      "op": ">",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0"
      ]
    },
    "1967": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "\"p\""
      ]
    },
    "1968": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "1970": {
      "op": "concat",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "tmp%8#0"
      ]
    },
    "1971": {
      "op": "box_get",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1972": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0"
      ]
    },
    "1973": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "maybe_value%1#0",
        "225"
      ]
    },
    "1975": {
      "op": "getbit",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0"
      ]
    },
    "1976": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "1978": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "1979": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "1981": {
      "op": "setbit",
      "defined_out": [
        "allowedMethod#0",
        "encoded_bool%0#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "encoded_bool%0#0"
      ]
    },
    "1982": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "1983": {
      "op": "getbit",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0",
        "useRounds#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "1984": {
      "op": "dup",
      "defined_out": [
        "allowedMethod#0",
        "hasCooldown#0",
        "methods#0",
        "selectorArg#0",
        "useRounds#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "useRounds#0"
      ]
    },
    "1985": {
      "op": "bz methodCheck_ternary_false@2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "1988": {
      "block": "methodCheck_ternary_true@1",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0"
      ]
    },
    "1990": {
      "block": "methodCheck_ternary_merge@3",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "allowedMethod#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0",
        "allowedMethod#0"
      ]
    },
    "1992": {
      "op": "dup",
      "defined_out": [
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)",
        "allowedMethod#0 (copy)"
      ]
    },
    "1993": {
      "op": "cover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)"
      ]
    },
    "1995": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)",
        "12"
      ]
    },
    "1997": {
      "op": "intc_2 // 8",
      "defined_out": [
        "12",
        "8",
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "allowedMethod#0 (copy)",
        "12",
        "8"
      ]
    },
    "1998": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "ternary_result%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "ternary_result%0#0",
        "tmp%9#0"
      ]
    },
    "1999": {
      "op": "btoi",
      "defined_out": [
        "allowedMethod#0",
        "epochRef#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "epochRef#0",
        "tmp%10#0"
      ]
    },
    "2000": {
      "op": "-",
      "defined_out": [
        "allowedMethod#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0"
      ]
    },
    "2001": {
      "op": "dig 1",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "allowedMethod#0 (copy)"
      ]
    },
    "2003": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "allowedMethod#0",
        "allowedMethod#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "allowedMethod#0 (copy)",
        "4"
      ]
    },
    "2004": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "allowedMethod#0 (copy)",
        "4",
        "8"
      ]
    },
    "2005": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2006": {
      "op": "btoi",
      "defined_out": [
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2007": {
      "op": "<",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "onCooldown#0"
      ]
    },
    "2008": {
      "op": "frame_bury 0",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0"
      ]
    },
    "2010": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "0"
      ]
    },
    "2011": {
      "op": "intc_3 // 4",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "allowedMethod#0",
        "0",
        "4"
      ]
    },
    "2012": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%14#0"
      ]
    },
    "2013": {
      "op": "frame_dig 1",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0",
        "selectorArg#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%14#0",
        "selectorArg#0"
      ]
    },
    "2015": {
      "op": "==",
      "defined_out": [
        "allowedMethod#0",
        "onCooldown#0",
        "selectorArg#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%15#0"
      ]
    },
    "2016": {
      "op": "bz methodCheck_after_if_else@12",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2019": {
      "block": "methodCheck_and_contd@4",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "hasCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "hasCooldown#0"
      ]
    },
    "2021": {
      "op": "bz methodCheck_if_body@6",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2024": {
      "block": "methodCheck_or_contd@5",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "onCooldown#0"
      ]
    },
    "2026": {
      "op": "bnz methodCheck_after_if_else@12",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2029": {
      "block": "methodCheck_if_body@6",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "hasCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "hasCooldown#0"
      ]
    },
    "2031": {
      "op": "bz methodCheck_after_if_else@11",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2034": {
      "block": "methodCheck_if_body@7",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "useRounds#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "useRounds#0"
      ]
    },
    "2036": {
      "op": "bz methodCheck_ternary_false@9",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2039": {
      "block": "methodCheck_ternary_true@8",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global Round",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "to_encode%1#0"
      ]
    },
    "2041": {
      "op": "itob",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0"
      ]
    },
    "2042": {
      "block": "methodCheck_ternary_merge@10",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "methods#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0",
        "methods#0"
      ]
    },
    "2044": {
      "op": "dup",
      "defined_out": [
        "methods#0",
        "methods#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0",
        "methods#0 (copy)",
        "methods#0 (copy)"
      ]
    },
    "2045": {
      "op": "cover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "methods#0 (copy)"
      ]
    },
    "2047": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "methods#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0"
      ]
    },
    "2050": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "methods#0",
        "offset#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "offset#0 (copy)"
      ]
    },
    "2052": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "array_head_and_tail%1#0",
        "methods#0",
        "offset#0 (copy)",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "offset#0 (copy)",
        "20"
      ]
    },
    "2054": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "methods#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "2055": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "ternary_result%1#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "20"
      ]
    },
    "2057": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "assigned_value%0#0",
        "methods#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "assigned_value%0#0",
        "tmp%16#0"
      ]
    },
    "2058": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "assigned_value%0#0",
        "methods#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "assigned_value%0#0",
        "tmp%16#0",
        "12"
      ]
    },
    "2060": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "tmp%16#0",
        "12",
        "assigned_value%0#0"
      ]
    },
    "2062": {
      "op": "replace3",
      "defined_out": [
        "assigned_value%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "assigned_value%1#0"
      ]
    },
    "2063": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0"
      ]
    },
    "2064": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "methods#0 (copy)"
      ]
    },
    "2065": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "assigned_value%1#0",
        "methods#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "methods#0 (copy)",
        "0"
      ]
    },
    "2066": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%0#0",
        "assigned_value%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "array_length%0#0"
      ]
    },
    "2067": {
      "op": "frame_dig -1",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "array_length%0#0",
        "offset#0 (copy)"
      ]
    },
    "2069": {
      "op": ">",
      "defined_out": [
        "assigned_value%1#0",
        "index_is_in_bounds%0#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "2070": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0"
      ]
    },
    "2071": {
      "op": "frame_dig -1",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "offset#0 (copy)"
      ]
    },
    "2073": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "offset#0 (copy)",
        "20"
      ]
    },
    "2075": {
      "op": "*",
      "defined_out": [
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ]
    },
    "2076": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0",
        "2"
      ]
    },
    "2078": {
      "op": "+",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "assigned_value%1#0",
        "methods#0",
        "write_offset%0#0"
      ]
    },
    "2079": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "methods#0",
        "write_offset%0#0",
        "assigned_value%1#0"
      ]
    },
    "2081": {
      "op": "replace3",
      "defined_out": [
        "copy%2#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0"
      ]
    },
    "2082": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "copy%2#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "\"p\""
      ]
    },
    "2083": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"p\"",
        "copy%2#0",
        "key#0 (copy)",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2085": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "methods#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%17#0"
      ]
    },
    "2086": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2087": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "maybe_value%2#0"
      ]
    },
    "2088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "2089": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "is_true%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "is_true%1#0"
      ]
    },
    "2090": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "copy%2#0",
        "is_true%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "is_true%1#0",
        "0x00"
      ]
    },
    "2092": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "is_true%1#0",
        "0x00",
        "0"
      ]
    },
    "2093": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "0x00",
        "0",
        "is_true%1#0"
      ]
    },
    "2095": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0"
      ]
    },
    "2096": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "\"p\""
      ]
    },
    "2097": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2099": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%18#0"
      ]
    },
    "2100": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2101": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0"
      ]
    },
    "2102": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2103": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%3#0",
        "1",
        "1"
      ]
    },
    "2104": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0"
      ]
    },
    "2105": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "\"p\""
      ]
    },
    "2106": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2108": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "2109": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "methods#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2110": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0"
      ]
    },
    "2111": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0",
        "2"
      ]
    },
    "2113": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%4#0",
        "methods#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "maybe_value%4#0",
        "2",
        "8"
      ]
    },
    "2114": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "2115": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "\"p\""
      ]
    },
    "2116": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2118": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2119": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2120": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0"
      ]
    },
    "2121": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%5#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0",
        "10"
      ]
    },
    "2123": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "maybe_value%5#0",
        "10",
        "8"
      ]
    },
    "2124": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "2125": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "\"p\""
      ]
    },
    "2126": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2128": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2129": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2130": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0"
      ]
    },
    "2131": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%6#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0",
        "18"
      ]
    },
    "2133": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "maybe_value%6#0",
        "18",
        "8"
      ]
    },
    "2134": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "2135": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "\"p\""
      ]
    },
    "2136": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2138": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "2139": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2140": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%7#0"
      ]
    },
    "2141": {
      "op": "pushint 224 // 224",
      "defined_out": [
        "224",
        "copy%2#0",
        "encoded_bool%1#0",
        "maybe_value%7#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "maybe_value%7#0",
        "224"
      ]
    },
    "2144": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "is_true%2#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "is_true%2#0"
      ]
    },
    "2145": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "2147": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "2148": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "2150": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0"
      ]
    },
    "2151": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "\"p\""
      ]
    },
    "2152": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2154": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "tmp%27#0"
      ]
    },
    "2155": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2156": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "maybe_value%8#0"
      ]
    },
    "2157": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "maybe_value%8#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "maybe_value%8#0",
        "225"
      ]
    },
    "2159": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "is_true%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "is_true%3#0"
      ]
    },
    "2160": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "is_true%3#0",
        "0x00"
      ]
    },
    "2162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "is_true%3#0",
        "0x00",
        "0"
      ]
    },
    "2163": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "0x00",
        "0",
        "is_true%3#0"
      ]
    },
    "2165": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0"
      ]
    },
    "2166": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "\"p\""
      ]
    },
    "2167": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2169": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%28#0"
      ]
    },
    "2170": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2171": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0"
      ]
    },
    "2172": {
      "op": "pushint 29 // 29",
      "defined_out": [
        "29",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "29"
      ]
    },
    "2174": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%9#0",
        "29",
        "8"
      ]
    },
    "2175": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0"
      ]
    },
    "2176": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "\"p\""
      ]
    },
    "2177": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2179": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "2180": {
      "op": "box_get",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2181": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0"
      ]
    },
    "2182": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "maybe_value%10#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0",
        "37"
      ]
    },
    "2184": {
      "op": "intc_2 // 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "maybe_value%10#0",
        "37",
        "8"
      ]
    },
    "2185": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "2186": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "copy%2#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%1#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "0x"
      ]
    },
    "2187": {
      "op": "uncover 9",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "0x",
        "encoded_bool%1#0"
      ]
    },
    "2189": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%1#0",
        "methods#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%19#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2190": {
      "op": "uncover 8",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%1#0",
        "tmp%19#0"
      ]
    },
    "2192": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%2#0",
        "methods#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2193": {
      "op": "uncover 7",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%2#0",
        "tmp%21#0"
      ]
    },
    "2195": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%3#0",
        "methods#0",
        "tmp%23#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%23#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2196": {
      "op": "uncover 6",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%3#0",
        "tmp%23#0"
      ]
    },
    "2198": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%4#0",
        "methods#0",
        "tmp%25#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%25#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2199": {
      "op": "uncover 5",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%4#0",
        "tmp%25#0"
      ]
    },
    "2201": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2202": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0",
        "45"
      ]
    },
    "2204": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0",
        "as_bytes%0#0"
      ]
    },
    "2205": {
      "op": "extract 6 2",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%5#0",
        "methods#0",
        "offset_as_uint16%0#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%5#0",
        "offset_as_uint16%0#0"
      ]
    },
    "2208": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%6#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2209": {
      "op": "uncover 4",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%6#0",
        "encoded_bool%2#0"
      ]
    },
    "2211": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_bool%3#0",
        "encoded_tuple_buffer%7#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_bool%3#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2212": {
      "op": "uncover 3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "encoded_bool%3#0"
      ]
    },
    "2214": {
      "op": "intc_0 // 0",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "encoded_bool%3#0",
        "0"
      ]
    },
    "2215": {
      "op": "getbit",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%7#0",
        "is_true%4#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "is_true%4#0"
      ]
    },
    "2216": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "is_true%4#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2217": {
      "op": "intc 4 // 225",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "is_true%4#0",
        "encoded_tuple_buffer%7#0",
        "225"
      ]
    },
    "2219": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%7#0",
        "225",
        "is_true%4#0"
      ]
    },
    "2221": {
      "op": "setbit",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%8#0",
        "methods#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%29#0",
        "tmp%31#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2222": {
      "op": "uncover 2",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%8#0",
        "tmp%29#0"
      ]
    },
    "2224": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%9#0",
        "methods#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "tmp%31#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "2225": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_tuple_buffer%9#0",
        "tmp%31#0"
      ]
    },
    "2226": {
      "op": "concat",
      "defined_out": [
        "copy%2#0",
        "encoded_tuple_buffer%10#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "copy%2#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "2227": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%10#0",
        "copy%2#0"
      ]
    },
    "2228": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2229": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "\"p\""
      ]
    },
    "2230": {
      "op": "frame_dig -3",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2232": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0"
      ]
    },
    "2233": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ]
    },
    "2234": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "methods#0",
        "tmp%32#0",
        "{box_del}"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0",
        "{box_del}"
      ]
    },
    "2235": {
      "op": "pop",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "encoded_tuple_buffer%11#0",
        "tmp%32#0"
      ]
    },
    "2236": {
      "op": "swap",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "tmp%32#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2237": {
      "op": "box_put",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ]
    },
    "2238": {
      "block": "methodCheck_after_if_else@11",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1"
      ]
    },
    "2239": {
      "op": "frame_dig 4",
      "defined_out": [
        "1",
        "hasCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1",
        "hasCooldown#0"
      ]
    },
    "2241": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "hasCooldown#0",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1",
        "hasCooldown#0",
        "onCooldown#0"
      ]
    },
    "2243": {
      "op": "frame_dig -3",
      "defined_out": [
        "1",
        "hasCooldown#0",
        "key#0 (copy)",
        "onCooldown#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "1",
        "hasCooldown#0",
        "onCooldown#0",
        "key#0 (copy)"
      ]
    },
    "2245": {
      "op": "frame_bury 3"
    },
    "2247": {
      "op": "frame_bury 2"
    },
    "2249": {
      "op": "frame_bury 1"
    },
    "2251": {
      "op": "frame_bury 0"
    },
    "2253": {
      "retsub": true,
      "op": "retsub"
    },
    "2254": {
      "block": "methodCheck_ternary_false@9",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "to_encode%2#0"
      ]
    },
    "2256": {
      "op": "itob",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%1#0"
      ]
    },
    "2257": {
      "op": "b methodCheck_ternary_merge@10"
    },
    "2260": {
      "block": "methodCheck_after_if_else@12",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0"
      ]
    },
    "2261": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0",
        "1"
      ]
    },
    "2262": {
      "op": "dup",
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0",
        "1",
        "1"
      ]
    },
    "2263": {
      "op": "frame_dig -3",
      "defined_out": [
        "0",
        "1",
        "key#0 (copy)"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "0",
        "1",
        "1",
        "key#0 (copy)"
      ]
    },
    "2265": {
      "op": "frame_bury 3"
    },
    "2267": {
      "op": "frame_bury 2"
    },
    "2269": {
      "op": "frame_bury 1"
    },
    "2271": {
      "op": "frame_bury 0"
    },
    "2273": {
      "retsub": true,
      "op": "retsub"
    },
    "2274": {
      "block": "methodCheck_ternary_false@2",
      "stack_in": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "onCooldown#0",
        "selectorArg#0",
        "methods#0",
        "allowedMethod#0",
        "hasCooldown#0",
        "useRounds#0",
        "ternary_result%0#0"
      ]
    },
    "2276": {
      "op": "b methodCheck_ternary_merge@3"
    },
    "2279": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.transferFunds",
      "params": {
        "key#0": "bytes",
        "fundsRequests#0": "bytes"
      },
      "block": "transferFunds",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "2282": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "request.asset#0"
      ]
    },
    "2283": {
      "block": "transferFunds_block@0",
      "stack_in": [
        "request.asset#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0"
      ]
    },
    "2285": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequests%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0"
      ]
    },
    "2287": {
      "op": "intc_0 // 0",
      "defined_out": [
        "fundsRequests%out#0",
        "i#0",
        "key%out#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2288": {
      "block": "transferFunds_while_top@1",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequests#0 (copy)"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "fundsRequests#0 (copy)"
      ]
    },
    "2290": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "fundsRequests#0 (copy)"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "fundsRequests#0 (copy)",
        "0"
      ]
    },
    "2291": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "2292": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "2294": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "2295": {
      "op": "bz transferFunds_after_while@8",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2298": {
      "block": "transferFunds_while_body@2",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequests#0 (copy)"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "fundsRequests#0 (copy)"
      ]
    },
    "2300": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "2303": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2305": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0",
        "16"
      ]
    },
    "2307": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "2308": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "16"
      ]
    },
    "2310": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "reinterpret_bytes[16]%0#0"
      ]
    },
    "2311": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ]
    },
    "2312": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)",
        "0"
      ]
    },
    "2313": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "reinterpret_bytes[16]%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2314": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item0%0#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "item0%0#0"
      ]
    },
    "2315": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item0%1#0",
        "reinterpret_bytes[16]%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "reinterpret_bytes[16]%0#0",
        "item0%1#0"
      ]
    },
    "2316": {
      "op": "swap",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item0%1#0",
        "reinterpret_bytes[16]%0#0"
      ]
    },
    "2317": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item0%1#0",
        "reinterpret_bytes[16]%0#0",
        "8"
      ]
    },
    "2318": {
      "op": "dup",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item0%1#0",
        "reinterpret_bytes[16]%0#0",
        "8",
        "8"
      ]
    },
    "2319": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item0%1#0",
        "item1%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item0%1#0",
        "item1%0#0"
      ]
    },
    "2320": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "item0%1#0",
        "item1%1#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item0%1#0",
        "item1%1#0"
      ]
    },
    "2321": {
      "op": "swap",
      "defined_out": [
        "i#0",
        "item1%1#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item1%1#0",
        "request.asset#0"
      ]
    },
    "2322": {
      "op": "dup",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "item1%1#0",
        "request.asset#0",
        "request.asset#0 (copy)"
      ]
    },
    "2323": {
      "op": "cover 2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.asset#0",
        "item1%1#0",
        "request.asset#0"
      ]
    },
    "2325": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.asset#0",
        "request.amount#0"
      ]
    },
    "2327": {
      "op": "dup",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.asset#0",
        "request.amount#0",
        "request.amount#0 (copy)"
      ]
    },
    "2328": {
      "op": "cover 2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "request.amount#0"
      ]
    },
    "2330": {
      "op": "cover 2",
      "defined_out": [
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0"
      ]
    },
    "2332": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "\"p\""
      ]
    },
    "2333": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"p\"",
        "i#0",
        "key#0 (copy)",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "2335": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%2#0"
      ]
    },
    "2336": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2337": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "copy%0#0",
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0"
      ]
    },
    "2338": {
      "op": "dup",
      "defined_out": [
        "copy%0#0",
        "copy%0#0 (copy)",
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "2339": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%0#0",
        "copy%0#0 (copy)",
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "225"
      ]
    },
    "2341": {
      "op": "getbit",
      "defined_out": [
        "copy%0#0",
        "i#0",
        "is_true%2#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "is_true%2#0"
      ]
    },
    "2342": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "copy%0#0",
        "i#0",
        "is_true%2#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "is_true%2#0",
        "0x00"
      ]
    },
    "2344": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "is_true%2#0",
        "0x00",
        "0"
      ]
    },
    "2345": {
      "op": "uncover 2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "0x00",
        "0",
        "is_true%2#0"
      ]
    },
    "2347": {
      "op": "setbit",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%2#0",
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "encoded_bool%2#0"
      ]
    },
    "2348": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "2349": {
      "op": "getbit",
      "defined_out": [
        "copy%0#0",
        "i#0",
        "item7%0#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "copy%0#0",
        "item7%0#0"
      ]
    },
    "2350": {
      "op": "swap",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "item7%0#0",
        "copy%0#0"
      ]
    },
    "2351": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "copy%0#0",
        "i#0",
        "item7%0#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "item7%0#0",
        "copy%0#0",
        "37"
      ]
    },
    "2353": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "item7%0#0",
        "copy%0#0",
        "37",
        "8"
      ]
    },
    "2354": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "item7%0#0",
        "item9%0#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "item7%0#0",
        "item9%0#0"
      ]
    },
    "2355": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0"
      ]
    },
    "2356": {
      "op": "frame_dig -2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "key#0 (copy)"
      ]
    },
    "2358": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "key#0 (copy)",
        "8"
      ]
    },
    "2359": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "8",
        "i#0",
        "key#0 (copy)",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "key#0 (copy)",
        "8",
        "32"
      ]
    },
    "2361": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0"
      ]
    },
    "2362": {
      "op": "frame_dig -2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "key#0 (copy)"
      ]
    },
    "2364": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "key#0 (copy)",
        "0"
      ]
    },
    "2365": {
      "op": "intc_2 // 8",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "key#0 (copy)",
        "0",
        "8"
      ]
    },
    "2366": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2367": {
      "op": "dig 4",
      "defined_out": [
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "request.asset#0 (copy)",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "tmp%4#0",
        "request.asset#0 (copy)"
      ]
    },
    "2369": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%3#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2370": {
      "op": "swap",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "val_as_bytes%0#0",
        "tmp%4#0"
      ]
    },
    "2371": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%3#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "val_as_bytes%0#0",
        "tmp%4#0",
        "0x"
      ]
    },
    "2372": {
      "op": "swap",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "val_as_bytes%0#0",
        "0x",
        "tmp%4#0"
      ]
    },
    "2373": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "tmp%3#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2374": {
      "op": "uncover 2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%1#0",
        "tmp%3#0"
      ]
    },
    "2376": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2377": {
      "op": "swap",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "2378": {
      "op": "concat",
      "defined_out": [
        "allowanceKey#0",
        "i#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "request.amount#0",
        "request.asset#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "pluginInfo.start#0",
        "allowanceKey#0"
      ]
    },
    "2379": {
      "op": "swap",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.useRounds#0",
        "allowanceKey#0",
        "pluginInfo.start#0"
      ]
    },
    "2380": {
      "op": "uncover 2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "allowanceKey#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0"
      ]
    },
    "2382": {
      "op": "uncover 2",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "allowanceKey#0"
      ]
    },
    "2384": {
      "op": "dig 3",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "allowanceKey#0",
        "request.asset#0 (copy)"
      ]
    },
    "2386": {
      "op": "uncover 5",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "pluginInfo.start#0",
        "pluginInfo.useRounds#0",
        "allowanceKey#0",
        "request.asset#0 (copy)",
        "request.amount#0"
      ]
    },
    "2388": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.verifyAllowance",
      "op": "callsub verifyAllowance",
      "defined_out": [
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "verifyAllowance%0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "verifyAllowance%0#0"
      ]
    },
    "2391": {
      "op": "pop",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.asset#0"
      ]
    },
    "2392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "0"
      ]
    },
    "2393": {
      "op": "!=",
      "defined_out": [
        "i#0",
        "request.amount#0",
        "request.asset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "tmp%5#0"
      ]
    },
    "2394": {
      "op": "bz transferFunds_else_body@5",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0"
      ]
    },
    "2397": {
      "block": "transferFunds_if_body@3",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0"
      ],
      "op": "itxn_begin"
    },
    "2398": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "0"
      ]
    },
    "2399": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "2400": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2401": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2402": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "2403": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"spending_address\""
      ]
    },
    "2405": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2406": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2407": {
      "op": "uncover 2",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "request.amount#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "request.amount#0"
      ]
    },
    "2409": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "request.amount#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "request.amount#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2411": {
      "op": "itxn_field XferAsset",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "2413": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2415": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2417": {
      "op": "itxn_field Sender",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2419": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "4"
      ]
    },
    "2420": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2422": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "0"
      ]
    },
    "2423": {
      "op": "itxn_field Fee",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2425": {
      "block": "transferFunds_next_txn@4",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "2426": {
      "block": "transferFunds_after_if_else@7",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "i#0"
      ]
    },
    "2428": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2429": {
      "op": "+",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "i#0"
      ]
    },
    "2430": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2432": {
      "op": "b transferFunds_while_top@1"
    },
    "2435": {
      "block": "transferFunds_else_body@5",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0"
      ],
      "op": "itxn_begin"
    },
    "2436": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "0"
      ]
    },
    "2437": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "2438": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2439": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "2440": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "2441": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "0",
        "\"spending_address\""
      ]
    },
    "2443": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2444": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "request.amount#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "2445": {
      "op": "uncover 2",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "request.amount#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "request.amount#0"
      ]
    },
    "2447": {
      "op": "itxn_field Amount",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "2449": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "2451": {
      "op": "itxn_field Sender",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2453": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "1"
      ]
    },
    "2454": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "0"
      ]
    },
    "2457": {
      "op": "itxn_field Fee",
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ]
    },
    "2459": {
      "block": "transferFunds_next_txn@6",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "2460": {
      "op": "b transferFunds_after_if_else@7"
    },
    "2463": {
      "block": "transferFunds_after_while@8",
      "stack_in": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "key%out#0"
      ]
    },
    "2465": {
      "op": "frame_dig 2",
      "defined_out": [
        "fundsRequests%out#0",
        "key%out#0"
      ],
      "stack_out": [
        "request.asset#0",
        "key%out#0",
        "fundsRequests%out#0",
        "i#0",
        "key%out#0",
        "fundsRequests%out#0"
      ]
    },
    "2467": {
      "op": "frame_bury 1"
    },
    "2469": {
      "op": "frame_bury 0"
    },
    "2471": {
      "retsub": true,
      "op": "retsub"
    },
    "2472": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.verifyAllowance",
      "params": {
        "start#0": "uint64",
        "useRounds#0": "uint64",
        "key#0": "bytes",
        "fundRequest.asset#0": "uint64",
        "fundRequest.amount#0": "uint64"
      },
      "block": "verifyAllowance",
      "stack_in": [],
      "op": "proto 5 1"
    },
    "2475": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4EpochRef#0"
      ]
    },
    "2476": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0"
      ]
    },
    "2477": {
      "block": "verifyAllowance_block@0",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0"
      ]
    },
    "2479": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "\"a\""
      ]
    },
    "2480": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"a\"",
        "key#0 (copy)",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2482": {
      "op": "concat",
      "defined_out": [
        "key%out#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "tmp%0#0"
      ]
    },
    "2483": {
      "op": "box_len",
      "defined_out": [
        "key%out#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2484": {
      "op": "bury 1",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "maybe_exists%0#0"
      ]
    },
    "2486": {
      "error": "Allowance does not exist",
      "op": "assert // Allowance does not exist",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0"
      ]
    },
    "2487": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "\"a\""
      ]
    },
    "2488": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2490": {
      "op": "concat",
      "defined_out": [
        "key%out#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "tmp%1#0"
      ]
    },
    "2491": {
      "op": "box_get",
      "defined_out": [
        "key%out#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2492": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "copy%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "copy%0#0"
      ]
    },
    "2493": {
      "op": "dup",
      "defined_out": [
        "copy%0#0",
        "copy%0#0 (copy)",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "2494": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "0"
      ]
    },
    "2495": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "copy%0#0",
        "copy%0#0 (copy)",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "0",
        "1"
      ]
    },
    "2496": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "copy%0#0",
        "item0%0#0"
      ]
    },
    "2497": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item0%0#0",
        "copy%0#0"
      ]
    },
    "2498": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item0%0#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "2499": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item0%0#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "1"
      ]
    },
    "2500": {
      "op": "intc_2 // 8",
      "defined_out": [
        "1",
        "8",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item0%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item0%0#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "1",
        "8"
      ]
    },
    "2501": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item0%0#0",
        "copy%0#0",
        "item1%0#0"
      ]
    },
    "2502": {
      "op": "btoi",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item0%0#0",
        "copy%0#0",
        "item1%1#0"
      ]
    },
    "2503": {
      "op": "cover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "copy%0#0"
      ]
    },
    "2505": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "2506": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item0%0#0",
        "item1%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "9"
      ]
    },
    "2508": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "9",
        "8"
      ]
    },
    "2509": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "copy%0#0",
        "item2%0#0"
      ]
    },
    "2510": {
      "op": "btoi",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "copy%0#0",
        "item2%1#0"
      ]
    },
    "2511": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "copy%0#0"
      ]
    },
    "2512": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "2513": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "17"
      ]
    },
    "2515": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "17",
        "8"
      ]
    },
    "2516": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "copy%0#0",
        "item3%0#0"
      ]
    },
    "2517": {
      "op": "btoi",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "copy%0#0",
        "item3%1#0"
      ]
    },
    "2518": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item3%1#0",
        "copy%0#0"
      ]
    },
    "2519": {
      "op": "dup",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item3%1#0",
        "copy%0#0",
        "copy%0#0 (copy)"
      ]
    },
    "2520": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "copy%0#0",
        "copy%0#0 (copy)",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item3%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "25"
      ]
    },
    "2522": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item3%1#0",
        "copy%0#0",
        "copy%0#0 (copy)",
        "25",
        "8"
      ]
    },
    "2523": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item3%1#0",
        "copy%0#0",
        "item4%0#0"
      ]
    },
    "2524": {
      "op": "btoi",
      "defined_out": [
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item3%1#0",
        "copy%0#0",
        "item4%1#0"
      ]
    },
    "2525": {
      "op": "cover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "copy%0#0"
      ]
    },
    "2527": {
      "op": "pushint 33 // 33",
      "defined_out": [
        "33",
        "copy%0#0",
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "copy%0#0",
        "33"
      ]
    },
    "2529": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "copy%0#0",
        "33",
        "8"
      ]
    },
    "2530": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%1#0",
        "item5%0#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "item5%0#0"
      ]
    },
    "2531": {
      "op": "btoi",
      "defined_out": [
        "item0%0#0",
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%1#0",
        "item5%1#0",
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item0%0#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "item5%1#0"
      ]
    },
    "2532": {
      "op": "uncover 4",
      "defined_out": [
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%1#0",
        "item5%1#0",
        "key%out#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "item1%1#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "item5%1#0",
        "type#0"
      ]
    },
    "2534": {
      "op": "cover 5",
      "defined_out": [
        "item1%1#0",
        "item2%1#0",
        "item3%1#0",
        "item4%1#0",
        "item5%1#0",
        "key%out#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "item1%1#0",
        "item2%1#0",
        "item4%1#0",
        "item3%1#0",
        "item5%1#0"
      ]
    },
    "2536": {
      "op": "swap",
      "defined_out": [
        "item1%1#0",
        "item2%1#0",
        "item4%1#0",
        "item5%1#0",
        "key%out#0",
        "spent#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "item1%1#0",
        "item2%1#0",
        "item4%1#0",
        "item5%1#0",
        "spent#0"
      ]
    },
    "2537": {
      "op": "cover 4",
      "defined_out": [
        "item1%1#0",
        "item2%1#0",
        "item4%1#0",
        "item5%1#0",
        "key%out#0",
        "spent#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "item1%1#0",
        "item2%1#0",
        "item4%1#0",
        "item5%1#0"
      ]
    },
    "2539": {
      "op": "uncover 2",
      "defined_out": [
        "allowed#0",
        "item1%1#0",
        "item4%1#0",
        "item5%1#0",
        "key%out#0",
        "spent#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "item1%1#0",
        "item4%1#0",
        "item5%1#0",
        "allowed#0"
      ]
    },
    "2541": {
      "op": "cover 3",
      "defined_out": [
        "allowed#0",
        "item1%1#0",
        "item4%1#0",
        "key%out#0",
        "last#0",
        "spent#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "item1%1#0",
        "item4%1#0",
        "last#0"
      ]
    },
    "2543": {
      "op": "cover 2",
      "defined_out": [
        "allowed#0",
        "interval#0",
        "key%out#0",
        "last#0",
        "max#0",
        "spent#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2545": {
      "op": "frame_dig -4",
      "defined_out": [
        "allowed#0",
        "interval#0",
        "key%out#0",
        "last#0",
        "max#0",
        "spent#0",
        "type#0",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "useRounds#0 (copy)"
      ]
    },
    "2547": {
      "op": "bz verifyAllowance_ternary_false@2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2550": {
      "block": "verifyAllowance_ternary_true@1",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "global Round",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "to_encode%0#0"
      ]
    },
    "2552": {
      "op": "itob",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%0#0"
      ]
    },
    "2553": {
      "block": "verifyAllowance_ternary_merge@3",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%0#0"
      ],
      "op": "frame_bury 0",
      "defined_out": [
        "arc4EpochRef#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2555": {
      "op": "frame_dig 3",
      "defined_out": [
        "arc4EpochRef#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "type#0"
      ]
    },
    "2557": {
      "op": "bytec 11 // 0x01",
      "defined_out": [
        "0x01",
        "arc4EpochRef#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "type#0",
        "0x01"
      ]
    },
    "2559": {
      "op": "==",
      "defined_out": [
        "arc4EpochRef#0",
        "tmp%2#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%2#0"
      ]
    },
    "2560": {
      "op": "bz verifyAllowance_else_body@5",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2563": {
      "block": "verifyAllowance_if_body@4",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "allowed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0"
      ]
    },
    "2565": {
      "op": "frame_dig 4",
      "defined_out": [
        "allowed#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0",
        "spent#0"
      ]
    },
    "2567": {
      "op": "dup",
      "defined_out": [
        "allowed#0",
        "spent#0",
        "spent#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0",
        "spent#0 (copy)",
        "spent#0 (copy)"
      ]
    },
    "2568": {
      "op": "cover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "allowed#0",
        "spent#0 (copy)"
      ]
    },
    "2570": {
      "op": "-",
      "defined_out": [
        "allowed#0",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "leftover#0"
      ]
    },
    "2571": {
      "op": "frame_dig -1",
      "defined_out": [
        "allowed#0",
        "amount#0",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "leftover#0",
        "amount#0"
      ]
    },
    "2573": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "amount#0",
        "leftover#0"
      ]
    },
    "2574": {
      "op": "dig 1",
      "defined_out": [
        "allowed#0",
        "amount#0",
        "amount#0 (copy)",
        "leftover#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "amount#0",
        "leftover#0",
        "amount#0 (copy)"
      ]
    },
    "2576": {
      "op": ">=",
      "defined_out": [
        "allowed#0",
        "amount#0",
        "spent#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "amount#0",
        "tmp%3#0"
      ]
    },
    "2577": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "amount#0"
      ]
    },
    "2578": {
      "op": "+",
      "defined_out": [
        "allowed#0",
        "spent#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "to_encode%2#0"
      ]
    },
    "2579": {
      "op": "itob",
      "defined_out": [
        "allowed#0",
        "spent#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0"
      ]
    },
    "2580": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "allowed#0",
        "spent#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0",
        "\"a\""
      ]
    },
    "2581": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"a\"",
        "allowed#0",
        "key#0 (copy)",
        "spent#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2583": {
      "op": "concat",
      "defined_out": [
        "allowed#0",
        "spent#0",
        "tmp%4#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0",
        "tmp%4#0"
      ]
    },
    "2584": {
      "op": "dup",
      "defined_out": [
        "allowed#0",
        "spent#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "2585": {
      "op": "box_get",
      "defined_out": [
        "allowed#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "spent#0",
        "tmp%4#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0",
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2586": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "val_as_bytes%2#0",
        "tmp%4#0",
        "maybe_value%2#0"
      ]
    },
    "2587": {
      "op": "uncover 2",
      "defined_out": [
        "allowed#0",
        "assigned_value%0#0",
        "maybe_value%2#0",
        "spent#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%4#0",
        "maybe_value%2#0",
        "assigned_value%0#0"
      ]
    },
    "2589": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%4#0",
        "assigned_value%0#0",
        "maybe_value%2#0"
      ]
    },
    "2590": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "allowed#0",
        "assigned_value%0#0",
        "maybe_value%2#0",
        "spent#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%4#0",
        "assigned_value%0#0",
        "maybe_value%2#0",
        "17"
      ]
    },
    "2592": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%4#0",
        "maybe_value%2#0",
        "17",
        "assigned_value%0#0"
      ]
    },
    "2594": {
      "op": "replace3",
      "defined_out": [
        "allowed#0",
        "spent#0",
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%4#0",
        "updated_data%0#0"
      ]
    },
    "2595": {
      "op": "box_put",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2596": {
      "block": "verifyAllowance_after_if_else@17",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "key%out#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "key%out#0"
      ]
    },
    "2598": {
      "op": "frame_bury 0"
    },
    "2600": {
      "retsub": true,
      "op": "retsub"
    },
    "2601": {
      "block": "verifyAllowance_else_body@5",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "type#0"
      ]
    },
    "2603": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "type#0",
        "0x02"
      ]
    },
    "2606": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%5#0"
      ]
    },
    "2607": {
      "op": "bz verifyAllowance_else_body@10",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2610": {
      "block": "verifyAllowance_if_body@6",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "useRounds#0 (copy)"
      ]
    },
    "2612": {
      "op": "frame_dig -5",
      "defined_out": [
        "start#0 (copy)",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "useRounds#0 (copy)",
        "start#0 (copy)"
      ]
    },
    "2614": {
      "op": "frame_dig 8",
      "defined_out": [
        "interval#0",
        "start#0 (copy)",
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "useRounds#0 (copy)",
        "start#0 (copy)",
        "interval#0"
      ]
    },
    "2616": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.getLatestWindowStart",
      "op": "callsub getLatestWindowStart",
      "defined_out": [
        "currentWindowStart#0",
        "interval#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "currentWindowStart#0"
      ]
    },
    "2619": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount\u2081#0",
        "currentWindowStart#0",
        "interval#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "currentWindowStart#0",
        "amount\u2081#0"
      ]
    },
    "2621": {
      "op": "frame_bury 1",
      "defined_out": [
        "amount\u2081#0",
        "currentWindowStart#0",
        "interval#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "currentWindowStart#0"
      ]
    },
    "2623": {
      "op": "frame_dig 6",
      "defined_out": [
        "amount\u2081#0",
        "currentWindowStart#0",
        "interval#0",
        "last#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "currentWindowStart#0",
        "last#0"
      ]
    },
    "2625": {
      "op": ">",
      "defined_out": [
        "amount\u2081#0",
        "interval#0",
        "last#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%6#0"
      ]
    },
    "2626": {
      "op": "bz verifyAllowance_else_body@8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2629": {
      "block": "verifyAllowance_if_body@7",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "allowed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0"
      ]
    },
    "2631": {
      "op": "frame_dig 1",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0",
        "amount\u2081#0"
      ]
    },
    "2633": {
      "op": ">=",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%7#0"
      ]
    },
    "2634": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2635": {
      "block": "verifyAllowance_after_if_else@9",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0"
      ]
    },
    "2637": {
      "op": "frame_dig 1",
      "defined_out": [
        "amount\u2081#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "spent#0",
        "amount\u2081#0"
      ]
    },
    "2639": {
      "op": "+",
      "defined_out": [
        "amount\u2081#0",
        "spent#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "to_encode%3#0"
      ]
    },
    "2640": {
      "op": "itob",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0"
      ]
    },
    "2641": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "amount\u2081#0",
        "newSpent#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "\"a\""
      ]
    },
    "2642": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"a\"",
        "amount\u2081#0",
        "key#0 (copy)",
        "newSpent#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2644": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%9#0"
      ]
    },
    "2645": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "newSpent#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2646": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "maybe_value%3#0"
      ]
    },
    "2647": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amount\u2081#0",
        "maybe_value%3#0",
        "newSpent#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "2648": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "amount\u2081#0",
        "maybe_value%3#0",
        "newSpent#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "maybe_value%3#0",
        "0",
        "1"
      ]
    },
    "2649": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0"
      ]
    },
    "2650": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "\"a\""
      ]
    },
    "2651": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2653": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2654": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2655": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "maybe_value%4#0"
      ]
    },
    "2656": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "2657": {
      "op": "intc_2 // 8",
      "defined_out": [
        "1",
        "8",
        "amount\u2081#0",
        "maybe_value%4#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "maybe_value%4#0",
        "1",
        "8"
      ]
    },
    "2658": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2659": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "\"a\""
      ]
    },
    "2660": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2662": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2663": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2664": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "maybe_value%5#0"
      ]
    },
    "2665": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "amount\u2081#0",
        "maybe_value%5#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "maybe_value%5#0",
        "9"
      ]
    },
    "2667": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "maybe_value%5#0",
        "9",
        "8"
      ]
    },
    "2668": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "2669": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "\"a\""
      ]
    },
    "2670": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2672": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2673": {
      "op": "box_get",
      "defined_out": [
        "amount\u2081#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2674": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "maybe_value%6#0"
      ]
    },
    "2675": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "amount\u2081#0",
        "maybe_value%6#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "maybe_value%6#0",
        "25"
      ]
    },
    "2677": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "maybe_value%6#0",
        "25",
        "8"
      ]
    },
    "2678": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "2679": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "amount\u2081#0",
        "newSpent#0",
        "spent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0",
        "0x"
      ]
    },
    "2680": {
      "op": "uncover 4",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0",
        "0x",
        "tmp%10#0"
      ]
    },
    "2682": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%1#0",
        "newSpent#0",
        "spent#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "2683": {
      "op": "uncover 3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%14#0",
        "tmp%16#0",
        "encoded_tuple_buffer%1#0",
        "tmp%12#0"
      ]
    },
    "2685": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%2#0",
        "newSpent#0",
        "spent#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%14#0",
        "tmp%16#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2686": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%16#0",
        "encoded_tuple_buffer%2#0",
        "tmp%14#0"
      ]
    },
    "2688": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%3#0",
        "newSpent#0",
        "spent#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "newSpent#0",
        "tmp%16#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2689": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%16#0",
        "encoded_tuple_buffer%3#0",
        "newSpent#0"
      ]
    },
    "2691": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%4#0",
        "spent#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%16#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2692": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%4#0",
        "tmp%16#0"
      ]
    },
    "2693": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "encoded_tuple_buffer%5#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2694": {
      "op": "frame_dig 0",
      "defined_out": [
        "amount\u2081#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%5#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%5#0",
        "arc4EpochRef#0"
      ]
    },
    "2696": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%6#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2697": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%6#0",
        "\"a\""
      ]
    },
    "2698": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%6#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2700": {
      "op": "concat",
      "defined_out": [
        "amount\u2081#0",
        "arc4EpochRef#0",
        "encoded_tuple_buffer%6#0",
        "spent#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%6#0",
        "tmp%17#0"
      ]
    },
    "2701": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%17#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2702": {
      "op": "box_put",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2703": {
      "block": "verifyAllowance_after_if_else@16",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "b verifyAllowance_after_if_else@17"
    },
    "2706": {
      "block": "verifyAllowance_else_body@8",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "allowed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0"
      ]
    },
    "2708": {
      "op": "frame_dig 4",
      "defined_out": [
        "allowed#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "allowed#0",
        "spent#0"
      ]
    },
    "2710": {
      "op": "-",
      "defined_out": [
        "allowed#0",
        "leftover\u2081#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2081#0"
      ]
    },
    "2711": {
      "op": "frame_dig 1",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0",
        "leftover\u2081#0",
        "spent#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2081#0",
        "amount\u2081#0"
      ]
    },
    "2713": {
      "op": ">=",
      "defined_out": [
        "allowed#0",
        "amount\u2081#0",
        "spent#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%8#0"
      ]
    },
    "2714": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2715": {
      "op": "b verifyAllowance_after_if_else@9"
    },
    "2718": {
      "block": "verifyAllowance_else_body@10",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "type#0"
      ]
    },
    "2720": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "type#0",
        "0x03"
      ]
    },
    "2723": {
      "op": "==",
      "defined_out": [
        "tmp%18#0",
        "type#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%18#0"
      ]
    },
    "2724": {
      "op": "bz verifyAllowance_after_if_else@15",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2727": {
      "block": "verifyAllowance_if_body@11",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "useRounds#0 (copy)"
      ]
    },
    "2729": {
      "op": "bz verifyAllowance_ternary_false@13",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2732": {
      "block": "verifyAllowance_ternary_true@12",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%1#0"
      ]
    },
    "2734": {
      "block": "verifyAllowance_ternary_merge@14",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%1#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "amount\u2082#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%1#0",
        "amount\u2082#0"
      ]
    },
    "2736": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "ternary_result%1#0"
      ]
    },
    "2737": {
      "op": "frame_dig 5",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "ternary_result%1#0",
        "accrualRate#0"
      ]
    },
    "2739": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrualRate#0",
        "ternary_result%1#0"
      ]
    },
    "2740": {
      "op": "frame_dig 4",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrualRate#0",
        "ternary_result%1#0",
        "lastLeftover#0"
      ]
    },
    "2742": {
      "op": "cover 2",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "epochRef#0",
        "lastLeftover#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "accrualRate#0",
        "epochRef#0"
      ]
    },
    "2744": {
      "op": "frame_dig 6",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "epochRef#0",
        "last#0",
        "lastLeftover#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "accrualRate#0",
        "epochRef#0",
        "last#0"
      ]
    },
    "2746": {
      "op": "-",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "last#0",
        "lastLeftover#0",
        "passed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "accrualRate#0",
        "passed#0"
      ]
    },
    "2747": {
      "op": "frame_dig 8",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "lastLeftover#0",
        "passed#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "accrualRate#0",
        "passed#0",
        "interval#0"
      ]
    },
    "2749": {
      "op": "/",
      "defined_out": [
        "accrualRate#0",
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "lastLeftover#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "accrualRate#0",
        "tmp%19#0"
      ]
    },
    "2750": {
      "op": "*",
      "defined_out": [
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "lastLeftover#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "lastLeftover#0",
        "tmp%20#0"
      ]
    },
    "2751": {
      "op": "+",
      "defined_out": [
        "accrued#0",
        "amount\u2082#0",
        "interval#0",
        "last#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrued#0"
      ]
    },
    "2752": {
      "op": "dup",
      "defined_out": [
        "accrued#0",
        "accrued#0 (copy)",
        "amount\u2082#0",
        "interval#0",
        "last#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrued#0",
        "accrued#0 (copy)"
      ]
    },
    "2753": {
      "op": "frame_dig 7",
      "defined_out": [
        "accrued#0",
        "accrued#0 (copy)",
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrued#0",
        "accrued#0 (copy)",
        "max#0"
      ]
    },
    "2755": {
      "op": "dup",
      "defined_out": [
        "accrued#0",
        "accrued#0 (copy)",
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "max#0",
        "max#0 (copy)"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrued#0",
        "accrued#0 (copy)",
        "max#0 (copy)",
        "max#0 (copy)"
      ]
    },
    "2756": {
      "op": "cover 3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "max#0",
        "accrued#0",
        "accrued#0 (copy)",
        "max#0 (copy)"
      ]
    },
    "2758": {
      "op": ">",
      "defined_out": [
        "accrued#0",
        "amount\u2082#0",
        "interval#0",
        "last#0",
        "max#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "max#0",
        "accrued#0",
        "tmp%21#0"
      ]
    },
    "2759": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "max#0",
        "tmp%21#0",
        "accrued#0"
      ]
    },
    "2760": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "tmp%21#0",
        "accrued#0",
        "max#0"
      ]
    },
    "2762": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "accrued#0",
        "max#0",
        "tmp%21#0"
      ]
    },
    "2764": {
      "op": "select",
      "defined_out": [
        "amount\u2082#0",
        "available#0",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "available#0"
      ]
    },
    "2765": {
      "op": "dup",
      "defined_out": [
        "amount\u2082#0",
        "available#0",
        "available#0 (copy)",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "available#0",
        "available#0 (copy)"
      ]
    },
    "2766": {
      "op": "dig 2",
      "defined_out": [
        "amount\u2082#0",
        "amount\u2082#0 (copy)",
        "available#0",
        "available#0 (copy)",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "available#0",
        "available#0 (copy)",
        "amount\u2082#0 (copy)"
      ]
    },
    "2768": {
      "op": ">=",
      "defined_out": [
        "amount\u2082#0",
        "available#0",
        "interval#0",
        "last#0",
        "max#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "available#0",
        "tmp%22#0"
      ]
    },
    "2769": {
      "error": "Allowance exceeded",
      "op": "assert // Allowance exceeded",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "amount\u2082#0",
        "available#0"
      ]
    },
    "2770": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "available#0",
        "amount\u2082#0"
      ]
    },
    "2771": {
      "op": "-",
      "defined_out": [
        "interval#0",
        "last#0",
        "max#0",
        "to_encode%4#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "to_encode%4#0"
      ]
    },
    "2772": {
      "op": "itob",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0"
      ]
    },
    "2773": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "\"a\""
      ]
    },
    "2774": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"a\"",
        "interval#0",
        "key#0 (copy)",
        "last#0",
        "leftover\u2082#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2776": {
      "op": "concat",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%23#0"
      ]
    },
    "2777": {
      "op": "box_get",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2778": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "maybe_value%7#0"
      ]
    },
    "2779": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "maybe_value%7#0",
        "0"
      ]
    },
    "2780": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "maybe_value%7#0",
        "0",
        "1"
      ]
    },
    "2781": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0"
      ]
    },
    "2782": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "\"a\""
      ]
    },
    "2783": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2785": {
      "op": "concat",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "2786": {
      "op": "box_get",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2787": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "maybe_value%8#0"
      ]
    },
    "2788": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "maybe_value%8#0",
        "1"
      ]
    },
    "2789": {
      "op": "intc_2 // 8",
      "defined_out": [
        "1",
        "8",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_value%8#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "maybe_value%8#0",
        "1",
        "8"
      ]
    },
    "2790": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "2791": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "\"a\""
      ]
    },
    "2792": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2794": {
      "op": "concat",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "2795": {
      "op": "box_get",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2796": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "maybe_value%9#0"
      ]
    },
    "2797": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_value%9#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "maybe_value%9#0",
        "9"
      ]
    },
    "2799": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "maybe_value%9#0",
        "9",
        "8"
      ]
    },
    "2800": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0"
      ]
    },
    "2801": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "\"a\""
      ]
    },
    "2802": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2804": {
      "op": "concat",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "2805": {
      "op": "box_get",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2806": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "maybe_value%10#0"
      ]
    },
    "2807": {
      "op": "pushint 25 // 25",
      "defined_out": [
        "25",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "maybe_value%10#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "maybe_value%10#0",
        "25"
      ]
    },
    "2809": {
      "op": "intc_2 // 8",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "maybe_value%10#0",
        "25",
        "8"
      ]
    },
    "2810": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0"
      ]
    },
    "2811": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0",
        "0x"
      ]
    },
    "2812": {
      "op": "uncover 4",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0",
        "0x",
        "tmp%24#0"
      ]
    },
    "2814": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%26#0",
        "tmp%28#0",
        "tmp%30#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2815": {
      "op": "uncover 3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%28#0",
        "tmp%30#0",
        "encoded_tuple_buffer%8#0",
        "tmp%26#0"
      ]
    },
    "2817": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%28#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%28#0",
        "tmp%30#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "2818": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%30#0",
        "encoded_tuple_buffer%9#0",
        "tmp%28#0"
      ]
    },
    "2820": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "interval#0",
        "last#0",
        "leftover\u2082#0",
        "max#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "leftover\u2082#0",
        "tmp%30#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "2821": {
      "op": "uncover 2",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%30#0",
        "encoded_tuple_buffer%10#0",
        "leftover\u2082#0"
      ]
    },
    "2823": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "interval#0",
        "last#0",
        "max#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%30#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "2824": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%11#0",
        "tmp%30#0"
      ]
    },
    "2825": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "2826": {
      "op": "frame_dig 0",
      "defined_out": [
        "arc4EpochRef#0",
        "encoded_tuple_buffer%12#0",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%12#0",
        "arc4EpochRef#0"
      ]
    },
    "2828": {
      "op": "concat",
      "defined_out": [
        "arc4EpochRef#0",
        "encoded_tuple_buffer%13#0",
        "interval#0",
        "last#0",
        "max#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2829": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%13#0",
        "\"a\""
      ]
    },
    "2830": {
      "op": "frame_dig -3",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%13#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "2832": {
      "op": "concat",
      "defined_out": [
        "arc4EpochRef#0",
        "encoded_tuple_buffer%13#0",
        "interval#0",
        "last#0",
        "max#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "encoded_tuple_buffer%13#0",
        "tmp%31#0"
      ]
    },
    "2833": {
      "op": "swap",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "tmp%31#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "2834": {
      "op": "box_put",
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ]
    },
    "2835": {
      "block": "verifyAllowance_after_if_else@15",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "b verifyAllowance_after_if_else@16"
    },
    "2838": {
      "block": "verifyAllowance_ternary_false@13",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%1#0"
      ]
    },
    "2840": {
      "op": "b verifyAllowance_ternary_merge@14"
    },
    "2843": {
      "block": "verifyAllowance_ternary_false@2",
      "stack_in": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "to_encode%1#0"
      ]
    },
    "2845": {
      "op": "itob",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "arc4EpochRef#0",
        "amount\u2081#0",
        "key%out#0",
        "type#0",
        "spent#0",
        "allowed#0",
        "last#0",
        "max#0",
        "interval#0",
        "ternary_result%0#0"
      ]
    },
    "2846": {
      "op": "b verifyAllowance_ternary_merge@3"
    },
    "2849": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.getLatestWindowStart",
      "params": {
        "useRounds#0": "uint64",
        "start#0": "uint64",
        "interval#0": "uint64"
      },
      "block": "getLatestWindowStart",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "2852": {
      "block": "getLatestWindowStart_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "useRounds#0 (copy)"
      ]
    },
    "2854": {
      "op": "bz getLatestWindowStart_after_if_else@2",
      "stack_out": []
    },
    "2857": {
      "block": "getLatestWindowStart_if_body@1",
      "stack_in": [],
      "op": "global Round",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2859": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2860": {
      "op": "frame_dig -2",
      "defined_out": [
        "start#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "start#0 (copy)"
      ]
    },
    "2862": {
      "op": "-",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2863": {
      "op": "frame_dig -1",
      "defined_out": [
        "interval#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "interval#0 (copy)"
      ]
    },
    "2865": {
      "op": "%",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "2866": {
      "op": "-",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2867": {
      "retsub": true,
      "op": "retsub"
    },
    "2868": {
      "block": "getLatestWindowStart_after_if_else@2",
      "stack_in": [],
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2870": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2871": {
      "op": "frame_dig -2",
      "defined_out": [
        "start#0 (copy)",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "start#0 (copy)"
      ]
    },
    "2873": {
      "op": "-",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "2874": {
      "op": "frame_dig -1",
      "defined_out": [
        "interval#0 (copy)",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0",
        "interval#0 (copy)"
      ]
    },
    "2876": {
      "op": "%",
      "defined_out": [
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%8#0"
      ]
    },
    "2877": {
      "op": "-",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2878": {
      "retsub": true,
      "op": "retsub"
    },
    "2879": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.getAuthAddr",
      "params": {},
      "block": "getAuthAddr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2880": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"spending_address\""
      ]
    },
    "2882": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2883": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2884": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "2885": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "2886": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2887": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "2888": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2889": {
      "op": "bz getAuthAddr_ternary_false@5",
      "stack_out": []
    },
    "2892": {
      "block": "getAuthAddr_ternary_true@1",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2893": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "2894": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2895": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "2896": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "tmp%1#0"
      ]
    },
    "2898": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2899": {
      "op": "bz getAuthAddr_ternary_false@3",
      "stack_out": []
    },
    "2902": {
      "block": "getAuthAddr_ternary_true@2",
      "stack_in": [],
      "op": "global ZeroAddress",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "ternary_result%1#0"
      ]
    },
    "2904": {
      "block": "getAuthAddr_ternary_merge@4",
      "stack_in": [
        "ternary_result%1#0"
      ],
      "op": "b getAuthAddr_ternary_merge@6",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "2907": {
      "block": "getAuthAddr_ternary_merge@6",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "ternary_result%0#0"
      ]
    },
    "2908": {
      "block": "getAuthAddr_ternary_false@3",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "ternary_result%1#0"
      ]
    },
    "2910": {
      "op": "b getAuthAddr_ternary_merge@4"
    },
    "2913": {
      "block": "getAuthAddr_ternary_false@5",
      "stack_in": [],
      "op": "global ZeroAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "2915": {
      "op": "b getAuthAddr_ternary_merge@6"
    },
    "2918": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.createApplication",
      "params": {
        "controlledAddress#0": "bytes",
        "admin#0": "bytes",
        "spendingAccountFactoryApp#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2921": {
      "block": "createApplication_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2923": {
      "op": "frame_dig -3",
      "defined_out": [
        "controlledAddress#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAddress#0 (copy)"
      ]
    },
    "2925": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2926": {
      "op": "bnz createApplication_bool_true@2",
      "stack_out": []
    },
    "2929": {
      "block": "createApplication_or_contd@1",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2931": {
      "op": "frame_dig -2",
      "defined_out": [
        "admin#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "admin#0 (copy)"
      ]
    },
    "2933": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2934": {
      "op": "bz createApplication_bool_false@3",
      "stack_out": []
    },
    "2937": {
      "block": "createApplication_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "2938": {
      "block": "createApplication_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "sender must be either controlledAddress or admin",
      "op": "assert // sender must be either controlledAddress or admin",
      "defined_out": [],
      "stack_out": []
    },
    "2939": {
      "op": "frame_dig -2",
      "defined_out": [
        "admin#0 (copy)"
      ],
      "stack_out": [
        "admin#0 (copy)"
      ]
    },
    "2941": {
      "op": "frame_dig -3",
      "defined_out": [
        "admin#0 (copy)",
        "controlledAddress#0 (copy)"
      ],
      "stack_out": [
        "admin#0 (copy)",
        "controlledAddress#0 (copy)"
      ]
    },
    "2943": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2944": {
      "op": "assert",
      "stack_out": []
    },
    "2945": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "2947": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"admin\"",
        "admin#0 (copy)"
      ]
    },
    "2949": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2950": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2952": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "controlledAddress#0 (copy)"
      ]
    },
    "2954": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2955": {
      "op": "bz createApplication_ternary_false@6",
      "stack_out": []
    },
    "2958": {
      "block": "createApplication_ternary_true@5",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "2960": {
      "block": "createApplication_ternary_merge@7",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\""
      ],
      "stack_out": [
        "ternary_result%0#0",
        "\"controlled_address\""
      ]
    },
    "2961": {
      "op": "swap",
      "defined_out": [
        "\"controlled_address\"",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "\"controlled_address\"",
        "ternary_result%0#0"
      ]
    },
    "2962": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2963": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\""
      ],
      "stack_out": [
        "\"spend_factory\""
      ]
    },
    "2965": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"spend_factory\"",
        "spendingAccountFactoryApp#0 (copy)"
      ],
      "stack_out": [
        "\"spend_factory\"",
        "spendingAccountFactoryApp#0 (copy)"
      ]
    },
    "2967": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2968": {
      "op": "global ZeroAddress",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2970": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"spending_address\""
      ]
    },
    "2972": {
      "op": "swap",
      "stack_out": [
        "\"spending_address\"",
        "new_state_value%0#0"
      ]
    },
    "2973": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2974": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "2977": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "2980": {
      "retsub": true,
      "op": "retsub"
    },
    "2981": {
      "block": "createApplication_ternary_false@6",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "2983": {
      "op": "b createApplication_ternary_merge@7"
    },
    "2986": {
      "block": "createApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "2987": {
      "op": "b createApplication_bool_merge@4"
    },
    "2990": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_changeAdmin",
      "params": {
        "newAdmin#0": "bytes"
      },
      "block": "arc58_changeAdmin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2993": {
      "block": "arc58_changeAdmin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2995": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2996": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "2998": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2999": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3000": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3001": {
      "error": "only admin can change the admin account",
      "op": "assert // only admin can change the admin account",
      "stack_out": []
    },
    "3002": {
      "op": "bytec 5 // \"admin\"",
      "stack_out": [
        "\"admin\""
      ]
    },
    "3004": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "newAdmin#0 (copy)"
      ],
      "stack_out": [
        "\"admin\"",
        "newAdmin#0 (copy)"
      ]
    },
    "3006": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3007": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3010": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3013": {
      "retsub": true,
      "op": "retsub"
    },
    "3014": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_pluginChangeAdmin",
      "params": {
        "plugin#0": "uint64",
        "allowedCaller#0": "bytes",
        "newAdmin#0": "bytes"
      },
      "block": "arc58_pluginChangeAdmin",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3017": {
      "block": "arc58_pluginChangeAdmin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3019": {
      "op": "frame_dig -3",
      "defined_out": [
        "plugin#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "plugin#0 (copy)"
      ]
    },
    "3021": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3023": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "value%0#0"
      ]
    },
    "3024": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3025": {
      "error": "sender must be admin plugin",
      "op": "assert // sender must be admin plugin",
      "stack_out": []
    },
    "3026": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3027": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "3028": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3029": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3030": {
      "op": "acct_params_get AcctAuthAddr",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "check%1#0"
      ]
    },
    "3032": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%1#0"
      ]
    },
    "3033": {
      "op": "frame_dig -3",
      "stack_out": [
        "value%1#0",
        "plugin#0 (copy)"
      ]
    },
    "3035": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%2#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "value%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3037": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%1#0",
        "value%2#0"
      ]
    },
    "3038": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3039": {
      "error": "This plugin is not in control of the account",
      "op": "assert // This plugin is not in control of the account",
      "stack_out": []
    },
    "3040": {
      "op": "frame_dig -3",
      "stack_out": [
        "plugin#0 (copy)"
      ]
    },
    "3042": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "3043": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "3044": {
      "op": "swap",
      "stack_out": [
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "3045": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3046": {
      "op": "frame_dig -2",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3048": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "3049": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0"
      ]
    },
    "3050": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "\"p\""
      ]
    },
    "3051": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3052": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0"
      ]
    },
    "3053": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3054": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%1#0"
      ]
    },
    "3056": {
      "op": "bz arc58_pluginChangeAdmin_bool_false@3",
      "stack_out": [
        "key#0"
      ]
    },
    "3059": {
      "block": "arc58_pluginChangeAdmin_and_contd@1",
      "stack_in": [
        "key#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3060": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3062": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%4#0"
      ]
    },
    "3063": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3064": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "key#0",
        "maybe_value%2#0"
      ]
    },
    "3065": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "3066": {
      "op": "getbit",
      "defined_out": [
        "is_true%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "is_true%0#0"
      ]
    },
    "3067": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "is_true%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3069": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3070": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3072": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_bool%0#0"
      ]
    },
    "3073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3074": {
      "op": "getbit",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "3075": {
      "op": "bz arc58_pluginChangeAdmin_bool_false@3",
      "stack_out": [
        "key#0"
      ]
    },
    "3078": {
      "block": "arc58_pluginChangeAdmin_bool_true@2",
      "stack_in": [
        "key#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "and_result%0#0"
      ]
    },
    "3079": {
      "block": "arc58_pluginChangeAdmin_bool_merge@4",
      "stack_in": [
        "key#0",
        "and_result%0#0"
      ],
      "error": "This plugin does not have admin privileges",
      "op": "assert // This plugin does not have admin privileges",
      "defined_out": [],
      "stack_out": [
        "key#0"
      ]
    },
    "3080": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "key#0",
        "\"admin\""
      ]
    },
    "3082": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin\"",
        "newAdmin#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "\"admin\"",
        "newAdmin#0 (copy)"
      ]
    },
    "3084": {
      "op": "app_global_put",
      "stack_out": [
        "key#0"
      ]
    },
    "3085": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3086": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3088": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0"
      ]
    },
    "3089": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3090": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "key#0",
        "maybe_value%3#0"
      ]
    },
    "3091": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "3092": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "1",
        "1"
      ]
    },
    "3093": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%7#0"
      ]
    },
    "3094": {
      "op": "bytec 11 // 0x01",
      "defined_out": [
        "0x01",
        "key#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%7#0",
        "0x01"
      ]
    },
    "3096": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%8#0"
      ]
    },
    "3097": {
      "op": "bz arc58_pluginChangeAdmin_after_if_else@6",
      "stack_out": [
        "key#0"
      ]
    },
    "3100": {
      "block": "arc58_pluginChangeAdmin_if_body@5",
      "stack_in": [
        "key#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3103": {
      "block": "arc58_pluginChangeAdmin_after_if_else@6",
      "stack_in": [
        "key#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3106": {
      "retsub": true,
      "op": "retsub"
    },
    "3107": {
      "block": "arc58_pluginChangeAdmin_bool_false@3",
      "stack_in": [
        "key#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "and_result%0#0"
      ]
    },
    "3108": {
      "op": "b arc58_pluginChangeAdmin_bool_merge@4"
    },
    "3111": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_getAdmin",
      "params": {},
      "block": "arc58_getAdmin_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3112": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"admin\""
      ]
    },
    "3114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3115": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3116": {
      "retsub": true,
      "op": "retsub"
    },
    "3117": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_verifyAuthAddr",
      "params": {},
      "block": "arc58_verifyAuthAddr_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3118": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"spending_address\""
      ]
    },
    "3120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3121": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3122": {
      "op": "acct_params_get AcctAuthAddr",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "3124": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "3125": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.getAuthAddr",
      "op": "callsub getAuthAddr",
      "defined_out": [
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "3128": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3129": {
      "op": "assert",
      "stack_out": []
    },
    "3130": {
      "op": "global ZeroAddress",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "3132": {
      "op": "bytec 6 // \"spending_address\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"spending_address\""
      ]
    },
    "3134": {
      "op": "swap",
      "stack_out": [
        "\"spending_address\"",
        "new_state_value%0#0"
      ]
    },
    "3135": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3136": {
      "retsub": true,
      "op": "retsub"
    },
    "3137": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyTo",
      "params": {
        "address#0": "bytes",
        "flash#0": "uint64"
      },
      "block": "arc58_rekeyTo",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3140": {
      "block": "arc58_rekeyTo_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3142": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3143": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3145": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3146": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3147": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3148": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "3149": {
      "op": "itxn_begin"
    },
    "3150": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3151": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "3152": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3153": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3154": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3156": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "3157": {
      "op": "pushbytes \"rekeying abstracted account\"",
      "defined_out": [
        "\"rekeying abstracted account\"",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "\"rekeying abstracted account\""
      ]
    },
    "3186": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "3188": {
      "op": "itxn_field RekeyTo",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3190": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3192": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "3194": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3195": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3197": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3198": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3200": {
      "block": "arc58_rekeyTo_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "3201": {
      "op": "frame_dig -1",
      "defined_out": [
        "flash#0 (copy)"
      ],
      "stack_out": [
        "flash#0 (copy)"
      ]
    },
    "3203": {
      "op": "bz arc58_rekeyTo_after_if_else@3",
      "stack_out": []
    },
    "3206": {
      "block": "arc58_rekeyTo_if_body@2",
      "stack_in": [],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertRekeysBack",
      "op": "callsub assertRekeysBack"
    },
    "3209": {
      "block": "arc58_rekeyTo_after_if_else@3",
      "stack_in": [],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3212": {
      "retsub": true,
      "op": "retsub"
    },
    "3213": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_canCall",
      "params": {
        "plugin#0": "uint64",
        "global#0": "uint64",
        "address#0": "bytes",
        "method#0": "bytes"
      },
      "block": "arc58_canCall",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "3216": {
      "block": "arc58_canCall_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "global#0 (copy)"
      ],
      "stack_out": [
        "global#0 (copy)"
      ]
    },
    "3218": {
      "op": "bz arc58_canCall_after_if_else@2",
      "stack_out": []
    },
    "3221": {
      "block": "arc58_canCall_if_body@1",
      "stack_in": [],
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3223": {
      "op": "frame_dig -4",
      "defined_out": [
        "plugin#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "plugin#0 (copy)"
      ]
    },
    "3225": {
      "op": "swap",
      "stack_out": [
        "plugin#0 (copy)",
        "tmp%0#0"
      ]
    },
    "3226": {
      "op": "frame_dig -1",
      "defined_out": [
        "method#0 (copy)",
        "plugin#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "plugin#0 (copy)",
        "tmp%0#0",
        "method#0 (copy)"
      ]
    },
    "3228": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCallAllowed",
      "op": "callsub pluginCallAllowed",
      "defined_out": [
        "{pluginCallAllowed}"
      ],
      "stack_out": [
        "{pluginCallAllowed}"
      ]
    },
    "3231": {
      "op": "pop",
      "stack_out": []
    },
    "3232": {
      "block": "arc58_canCall_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -4",
      "defined_out": [
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)"
      ]
    },
    "3234": {
      "op": "frame_dig -2",
      "defined_out": [
        "address#0 (copy)",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)",
        "address#0 (copy)"
      ]
    },
    "3236": {
      "op": "frame_dig -1",
      "defined_out": [
        "address#0 (copy)",
        "method#0 (copy)",
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)",
        "address#0 (copy)",
        "method#0 (copy)"
      ]
    },
    "3238": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.pluginCallAllowed",
      "op": "callsub pluginCallAllowed",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3241": {
      "retsub": true,
      "op": "retsub"
    },
    "3242": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToPlugin",
      "params": {
        "plugin#0": "uint64",
        "global#0": "uint64",
        "methodOffsets#0": "bytes",
        "fundsRequest#0": "bytes"
      },
      "block": "arc58_rekeyToPlugin",
      "stack_in": [],
      "op": "proto 4 2"
    },
    "3245": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0"
      ]
    },
    "3246": {
      "op": "dupn 2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0"
      ]
    },
    "3248": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0"
      ]
    },
    "3249": {
      "block": "arc58_rekeyToPlugin_block@0",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0"
      ]
    },
    "3251": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0"
      ]
    },
    "3253": {
      "op": "frame_dig -4",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0"
      ]
    },
    "3255": {
      "op": "dup",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0",
        "plugin#0 (copy)",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "plugin#0 (copy)"
      ]
    },
    "3256": {
      "op": "itob",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3257": {
      "op": "frame_dig -3",
      "defined_out": [
        "fundsRequest%out#0",
        "global#0 (copy)",
        "methodOffsets%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "global#0 (copy)"
      ]
    },
    "3259": {
      "op": "bz arc58_rekeyToPlugin_ternary_false@2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3262": {
      "block": "arc58_rekeyToPlugin_ternary_true@1",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "global ZeroAddress",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "ternary_result%0#0"
      ]
    },
    "3264": {
      "block": "arc58_rekeyToPlugin_ternary_merge@3",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "ternary_result%0#0"
      ],
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "ternary_result%0#0",
        "0x"
      ]
    },
    "3265": {
      "op": "frame_dig 7",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "ternary_result%0#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "3267": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "ternary_result%0#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3268": {
      "op": "swap",
      "defined_out": [
        "encoded_tuple_buffer%1#0",
        "ternary_result%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%1#0",
        "ternary_result%0#0"
      ]
    },
    "3269": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0"
      ]
    },
    "3270": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "\"p\""
      ]
    },
    "3271": {
      "op": "dig 1",
      "defined_out": [
        "\"p\"",
        "key#0",
        "key#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "3273": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "tmp%0#0"
      ]
    },
    "3274": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3275": {
      "op": "bury 1",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "maybe_exists%0#0"
      ]
    },
    "3277": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0"
      ]
    },
    "3278": {
      "op": "frame_dig -2",
      "defined_out": [
        "key#0",
        "methodOffsets#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "methodOffsets#0 (copy)"
      ]
    },
    "3280": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.assertValidGroup",
      "op": "callsub assertValidGroup",
      "defined_out": [
        "assertValidGroup%0#0",
        "assertValidGroup%1#0",
        "key#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "assertValidGroup%0#0",
        "assertValidGroup%1#0"
      ]
    },
    "3283": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "assertValidGroup%1#0",
        "assertValidGroup%0#0"
      ]
    },
    "3284": {
      "op": "frame_bury 0",
      "defined_out": [
        "assertValidGroup%0#0",
        "assertValidGroup%1#0",
        "key#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "assertValidGroup%1#0"
      ]
    },
    "3286": {
      "op": "frame_bury -2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "assertValidGroup%0#0",
        "key#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "1"
      ]
    },
    "3289": {
      "op": "bz arc58_rekeyToPlugin_after_if_else@5",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3292": {
      "block": "arc58_rekeyToPlugin_if_body@4",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "methodOffsets%out#0"
      ]
    },
    "3294": {
      "op": "frame_bury 4",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3296": {
      "block": "arc58_rekeyToPlugin_after_if_else@5",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0"
      ]
    },
    "3298": {
      "op": "dup",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "key#0"
      ]
    },
    "3299": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0"
      ]
    },
    "3301": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "\"p\""
      ]
    },
    "3302": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3303": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%1#0"
      ]
    },
    "3304": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3305": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0"
      ]
    },
    "3306": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "key#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "2"
      ]
    },
    "3308": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "key#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "2",
        "8"
      ]
    },
    "3309": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%2#0"
      ]
    },
    "3310": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "3311": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%3#0",
        "0"
      ]
    },
    "3312": {
      "op": "!=",
      "defined_out": [
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%4#0"
      ]
    },
    "3313": {
      "op": "bz arc58_rekeyToPlugin_else_body@10",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3316": {
      "block": "arc58_rekeyToPlugin_if_body@6",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"p\""
      ]
    },
    "3317": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3319": {
      "op": "dup",
      "defined_out": [
        "\"p\"",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"p\"",
        "key#0 (copy)",
        "key#0 (copy)"
      ]
    },
    "3320": {
      "op": "cover 2",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "3322": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "tmp%5#0"
      ]
    },
    "3323": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3324": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "maybe_value%2#0"
      ]
    },
    "3325": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "key#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "maybe_value%2#0",
        "2"
      ]
    },
    "3327": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "key#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "maybe_value%2#0",
        "2",
        "8"
      ]
    },
    "3328": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "tmp%6#0"
      ]
    },
    "3329": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "spendingApp#0"
      ]
    },
    "3330": {
      "op": "dup",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "spendingApp#0",
        "spendingApp#0"
      ]
    },
    "3331": {
      "op": "frame_bury 3",
      "defined_out": [
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "spendingApp#0"
      ]
    },
    "3333": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "key#0",
        "spendingApp#0",
        "value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3335": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "value%0#0"
      ]
    },
    "3336": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "key#0",
        "spendingApp#0",
        "value%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "value%0#0",
        "\"spending_address\""
      ]
    },
    "3338": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "\"spending_address\"",
        "value%0#0"
      ]
    },
    "3339": {
      "op": "app_global_put",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0"
      ]
    },
    "3340": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest#0 (copy)",
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0",
        "fundsRequest#0 (copy)"
      ]
    },
    "3342": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.transferFunds",
      "op": "callsub transferFunds",
      "defined_out": [
        "key#0",
        "spendingApp#0",
        "transferFunds%0#0",
        "transferFunds%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "transferFunds%0#0",
        "transferFunds%1#0"
      ]
    },
    "3345": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "transferFunds%1#0",
        "transferFunds%0#0"
      ]
    },
    "3346": {
      "op": "frame_bury 2",
      "defined_out": [
        "key#0",
        "spendingApp#0",
        "transferFunds%0#0",
        "transferFunds%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "transferFunds%1#0"
      ]
    },
    "3348": {
      "op": "frame_bury -1",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3350": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "spendingApp#0",
        "transferFunds%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "1"
      ]
    },
    "3351": {
      "op": "bz arc58_rekeyToPlugin_after_if_else@8",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3354": {
      "block": "arc58_rekeyToPlugin_if_body@7",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "fundsRequest%out#0"
      ]
    },
    "3356": {
      "op": "frame_bury 5",
      "defined_out": [
        "fundsRequest%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3358": {
      "block": "arc58_rekeyToPlugin_after_if_else@8",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "key#0"
      ]
    },
    "3360": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3362": {
      "op": "itxn_begin"
    },
    "3363": {
      "op": "frame_dig 3",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3365": {
      "op": "frame_dig 6",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "pluginApp#0"
      ]
    },
    "3367": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "key#0",
        "pluginApp#0",
        "value%1#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3369": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3370": {
      "op": "pushbytes 0x65a97bcc // method \"rekey(address)void\"",
      "defined_out": [
        "Method(rekey(address)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(rekey(address)void)"
      ]
    },
    "3376": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3378": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3380": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3382": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "key#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "appl"
      ]
    },
    "3384": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3386": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3387": {
      "op": "itxn_field Fee",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3389": {
      "block": "arc58_rekeyToPlugin_next_txn@9",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "itxn_submit"
    },
    "3390": {
      "block": "arc58_rekeyToPlugin_after_if_else@12",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\""
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"p\""
      ]
    },
    "3391": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3393": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%7#0"
      ]
    },
    "3394": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "3395": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0"
      ]
    },
    "3396": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0",
        "1"
      ]
    },
    "3397": {
      "op": "dup",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%6#0",
        "1",
        "1"
      ]
    },
    "3398": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%8#0"
      ]
    },
    "3399": {
      "op": "bytec 11 // 0x01",
      "defined_out": [
        "0x01",
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%8#0",
        "0x01"
      ]
    },
    "3401": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "tmp%9#0"
      ]
    },
    "3402": {
      "op": "bz arc58_rekeyToPlugin_after_if_else@14",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3405": {
      "block": "arc58_rekeyToPlugin_if_body@13",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3408": {
      "block": "arc58_rekeyToPlugin_after_if_else@14",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "methodOffsets%out#0"
      ]
    },
    "3410": {
      "op": "frame_dig 5",
      "defined_out": [
        "fundsRequest%out#0",
        "methodOffsets%out#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0"
      ]
    },
    "3412": {
      "op": "frame_bury 1"
    },
    "3414": {
      "op": "frame_bury 0"
    },
    "3416": {
      "retsub": true,
      "op": "retsub"
    },
    "3417": {
      "block": "arc58_rekeyToPlugin_else_body@10",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3418": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3420": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0"
      ]
    },
    "3421": {
      "op": "bytec 6 // \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "\"spending_address\""
      ]
    },
    "3423": {
      "op": "swap",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "\"spending_address\"",
        "maybe_value%3#0"
      ]
    },
    "3424": {
      "op": "app_global_put",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3425": {
      "op": "itxn_begin"
    },
    "3426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3427": {
      "op": "bytec 6 // \"spending_address\"",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "0",
        "\"spending_address\""
      ]
    },
    "3429": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3430": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3431": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "3432": {
      "op": "bytec 6 // \"spending_address\"",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "0",
        "\"spending_address\""
      ]
    },
    "3434": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3435": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "3436": {
      "op": "frame_dig 6",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "pluginApp#0"
      ]
    },
    "3438": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%2#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "pluginApp#0",
        "value%2#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3440": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_RekeyTo_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_RekeyTo_idx_0#0"
      ]
    },
    "3441": {
      "op": "pushbytes \"rekeying to plugin app\"",
      "defined_out": [
        "\"rekeying to plugin app\"",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_RekeyTo_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_RekeyTo_idx_0#0",
        "\"rekeying to plugin app\""
      ]
    },
    "3465": {
      "op": "itxn_field Note",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_RekeyTo_idx_0#0"
      ]
    },
    "3467": {
      "op": "itxn_field RekeyTo",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "3469": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3471": {
      "op": "itxn_field Sender",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3473": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "pluginApp#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "1"
      ]
    },
    "3474": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3476": {
      "op": "intc_0 // 0",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "3477": {
      "op": "itxn_field Fee",
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "3479": {
      "block": "arc58_rekeyToPlugin_next_txn@11",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "itxn_submit"
    },
    "3480": {
      "op": "b arc58_rekeyToPlugin_after_if_else@12"
    },
    "3483": {
      "block": "arc58_rekeyToPlugin_ternary_false@2",
      "stack_in": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "assertValidGroup%0#0",
        "key#0",
        "transferFunds%0#0",
        "spendingApp#0",
        "methodOffsets%out#0",
        "fundsRequest%out#0",
        "pluginApp#0",
        "val_as_bytes%0#0",
        "ternary_result%0#0"
      ]
    },
    "3485": {
      "op": "b arc58_rekeyToPlugin_ternary_merge@3"
    },
    "3488": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToNamedPlugin",
      "params": {
        "name#0": "bytes",
        "global#0": "uint64",
        "methodOffsets#0": "bytes",
        "fundsRequest#0": "bytes"
      },
      "block": "arc58_rekeyToNamedPlugin",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "3491": {
      "block": "arc58_rekeyToNamedPlugin_block@0",
      "stack_in": [],
      "op": "bytec 9 // \"n\"",
      "defined_out": [
        "\"n\""
      ],
      "stack_out": [
        "\"n\""
      ]
    },
    "3493": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"n\"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "3495": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3496": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3497": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3498": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "3499": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "8"
      ]
    },
    "3500": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3501": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3502": {
      "op": "frame_dig -3",
      "defined_out": [
        "global#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "global#0 (copy)"
      ]
    },
    "3504": {
      "op": "frame_dig -2",
      "defined_out": [
        "global#0 (copy)",
        "methodOffsets#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "global#0 (copy)",
        "methodOffsets#0 (copy)"
      ]
    },
    "3506": {
      "op": "frame_dig -1",
      "defined_out": [
        "fundsRequest#0 (copy)",
        "global#0 (copy)",
        "methodOffsets#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "global#0 (copy)",
        "methodOffsets#0 (copy)",
        "fundsRequest#0 (copy)"
      ]
    },
    "3508": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_rekeyToPlugin",
      "op": "callsub arc58_rekeyToPlugin",
      "defined_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ],
      "stack_out": [
        "arc58_rekeyToPlugin%0#0",
        "arc58_rekeyToPlugin%1#0"
      ]
    },
    "3511": {
      "op": "popn 2",
      "stack_out": []
    },
    "3513": {
      "retsub": true,
      "op": "retsub"
    },
    "3514": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addPlugin",
      "params": {
        "app#0": "uint64",
        "allowedCaller#0": "bytes",
        "admin#0": "uint64",
        "delegationType#0": "bytes",
        "lastValid#0": "uint64",
        "cooldown#0": "uint64",
        "methods#0": "bytes",
        "useAllowance#0": "uint64",
        "useRounds#0": "uint64"
      },
      "block": "arc58_addPlugin",
      "stack_in": [],
      "op": "proto 9 0"
    },
    "3517": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0"
      ]
    },
    "3518": {
      "op": "dupn 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0"
      ]
    },
    "3520": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0"
      ]
    },
    "3521": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3522": {
      "block": "arc58_addPlugin_block@0",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "3524": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "0"
      ]
    },
    "3525": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3527": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3528": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3529": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "3530": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3531": {
      "op": "frame_dig -6",
      "defined_out": [
        "delegationType#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "delegationType#0 (copy)"
      ]
    },
    "3533": {
      "op": "bytec 11 // 0x01",
      "defined_out": [
        "0x01",
        "delegationType#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "delegationType#0 (copy)",
        "0x01"
      ]
    },
    "3535": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "3536": {
      "op": "bz arc58_addPlugin_bool_false@3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3539": {
      "block": "arc58_addPlugin_and_contd@1",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3541": {
      "op": "frame_dig -8",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%3#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3543": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "3544": {
      "op": "bz arc58_addPlugin_bool_false@3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3547": {
      "block": "arc58_addPlugin_bool_true@2",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "and_result%0#0"
      ]
    },
    "3548": {
      "block": "arc58_addPlugin_bool_merge@4",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "and_result%0#0"
      ],
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "3549": {
      "error": "delegation type must not be self for global plugins",
      "op": "assert // delegation type must not be self for global plugins",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3550": {
      "op": "frame_dig -9",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "app#0 (copy)"
      ]
    },
    "3552": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "3553": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "3554": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "3555": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3556": {
      "op": "frame_dig -8",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3558": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "key#0"
      ]
    },
    "3559": {
      "op": "frame_bury 0",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3561": {
      "op": "bytec 13 // 0x0000",
      "defined_out": [
        "0x0000",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x0000"
      ]
    },
    "3563": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x0000",
        "0x"
      ]
    },
    "3564": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3565": {
      "op": "frame_bury 1",
      "defined_out": [
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3567": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0"
      ]
    },
    "3568": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3570": {
      "block": "arc58_addPlugin_while_top@5",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "3572": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methods#0 (copy)",
        "0"
      ]
    },
    "3573": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "3574": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%6#0",
        "i#0"
      ]
    },
    "3576": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "3577": {
      "op": "bz arc58_addPlugin_after_while@7",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3580": {
      "block": "arc58_addPlugin_while_body@6",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3582": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "3585": {
      "op": "frame_dig -3",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "methods#0 (copy)"
      ]
    },
    "3587": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "3590": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "3592": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "3593": {
      "op": "cover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "3595": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "3597": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "3598": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "12"
      ]
    },
    "3600": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "3601": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "0"
      ]
    },
    "3602": {
      "op": "intc_3 // 4",
      "defined_out": [
        "0",
        "4",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0",
        "0",
        "4"
      ]
    },
    "3603": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "3604": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "3605": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "3607": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "3610": {
      "op": "dig 1",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "3612": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "3614": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%1#0",
        "methodInfos#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "3615": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "12"
      ]
    },
    "3617": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "3618": {
      "op": "intc_3 // 4",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%10#0",
        "4"
      ]
    },
    "3619": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%10#0",
        "4",
        "8"
      ]
    },
    "3620": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "3621": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%9#0",
        "i#0",
        "tmp%11#0",
        "0x"
      ]
    },
    "3622": {
      "op": "uncover 3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%11#0",
        "0x",
        "tmp%9#0"
      ]
    },
    "3624": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%11#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "3625": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%4#0",
        "tmp%11#0"
      ]
    },
    "3626": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "3627": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "3629": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3630": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0",
        "0x"
      ]
    },
    "3631": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "3632": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "3633": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "3634": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "3635": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded%0#0"
      ]
    },
    "3636": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "3638": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "3639": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "3640": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "3641": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "3642": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "20"
      ]
    },
    "3644": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "3645": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "3646": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "3649": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "3650": {
      "op": "concat",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "3651": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0"
      ]
    },
    "3653": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3654": {
      "op": "+",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "i#0"
      ]
    },
    "3655": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3657": {
      "op": "b arc58_addPlugin_while_top@5"
    },
    "3660": {
      "block": "arc58_addPlugin_after_while@7",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "useRounds#0 (copy)"
      ]
    },
    "3662": {
      "op": "bz arc58_addPlugin_ternary_false@9",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3665": {
      "block": "arc58_addPlugin_ternary_true@8",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "3667": {
      "block": "arc58_addPlugin_ternary_merge@10",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "ternary_result%0#0"
      ],
      "op": "frame_bury 3",
      "defined_out": [
        "epochRef#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3669": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3670": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "epochRef#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3671": {
      "op": "app_global_get_ex",
      "defined_out": [
        "epochRef#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3672": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "3673": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "epochRef#0",
        "maybe_value%1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%1#0",
        "tmp%12#0"
      ]
    },
    "3675": {
      "op": "!=",
      "defined_out": [
        "epochRef#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "3676": {
      "op": "bz arc58_addPlugin_after_if_else@13",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3679": {
      "block": "arc58_addPlugin_if_body@11",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "3680": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3681": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3682": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3683": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3684": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3686": {
      "op": "frame_dig -3",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0 (copy)"
      ]
    },
    "3688": {
      "op": "len",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%14#0"
      ]
    },
    "3689": {
      "op": "intc 5 // 400",
      "defined_out": [
        "400",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%14#0",
        "400"
      ]
    },
    "3691": {
      "op": "*",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%15#0"
      ]
    },
    "3692": {
      "op": "intc 6 // 36500",
      "defined_out": [
        "36500",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%15#0",
        "36500"
      ]
    },
    "3694": {
      "op": "+",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "3695": {
      "op": "itxn_field Amount",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3697": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3699": {
      "op": "itxn_field Sender",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3701": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "1"
      ]
    },
    "3702": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3704": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3705": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3707": {
      "block": "arc58_addPlugin_next_txn@12",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "3708": {
      "block": "arc58_addPlugin_after_if_else@13",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "3710": {
      "op": "frame_bury 2",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3712": {
      "op": "frame_dig -2",
      "defined_out": [
        "spendingApp#0",
        "useAllowance#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "useAllowance#0 (copy)"
      ]
    },
    "3714": {
      "op": "bz arc58_addPlugin_after_if_else@17",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3717": {
      "block": "arc58_addPlugin_if_body@14",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "3718": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3719": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\"",
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0",
        "\"spend_factory\""
      ]
    },
    "3721": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3722": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%3#0"
      ]
    },
    "3723": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3725": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "3726": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3728": {
      "op": "pushint 269500 // 269500",
      "defined_out": [
        "269500"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "269500"
      ]
    },
    "3732": {
      "op": "itxn_field Amount",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3734": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "1"
      ]
    },
    "3735": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3737": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3738": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3740": {
      "block": "arc58_addPlugin_next_txn@15",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_next"
    },
    "3741": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3742": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3743": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3744": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "3745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "3746": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\"",
        "0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "0",
        "\"spend_factory\""
      ]
    },
    "3748": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3749": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3750": {
      "op": "frame_dig -9",
      "defined_out": [
        "app#0 (copy)",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "app#0 (copy)"
      ]
    },
    "3752": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3753": {
      "op": "bytec 14 // method \"create(pay,uint64)uint64\"",
      "defined_out": [
        "Method(create(pay,uint64)uint64)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(create(pay,uint64)uint64)"
      ]
    },
    "3755": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3757": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3759": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "3761": {
      "op": "itxn_field Sender",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3763": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "appl"
      ]
    },
    "3765": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3767": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0"
      ]
    },
    "3768": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3770": {
      "block": "arc58_addPlugin_next_txn@16",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "3771": {
      "op": "gitxn 1 LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "awst_tmp%0#0"
      ]
    },
    "3774": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3775": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "awst_tmp%0#0",
        "tmp%16#0"
      ]
    },
    "3778": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%16#0",
        "awst_tmp%0#0"
      ]
    },
    "3779": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3782": {
      "op": "bytec 10 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "3784": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "3785": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "3786": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%19#0"
      ]
    },
    "3787": {
      "op": "itob",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "3788": {
      "op": "frame_bury 2",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3790": {
      "block": "arc58_addPlugin_after_if_else@17",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x00"
      ]
    },
    "3792": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x00",
        "0"
      ]
    },
    "3793": {
      "op": "frame_dig -7",
      "defined_out": [
        "0",
        "0x00",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "0x00",
        "0",
        "admin#0 (copy)"
      ]
    },
    "3795": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_bool%0#0"
      ]
    },
    "3796": {
      "op": "frame_dig -5",
      "defined_out": [
        "encoded_bool%0#0",
        "lastValid#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_bool%0#0",
        "lastValid#0 (copy)"
      ]
    },
    "3798": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_bool%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "3799": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "3800": {
      "op": "frame_dig -4",
      "defined_out": [
        "cooldown#0 (copy)",
        "encoded_bool%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "cooldown#0 (copy)"
      ]
    },
    "3802": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "val_as_bytes%4#0"
      ]
    },
    "3803": {
      "op": "cover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "3805": {
      "op": "frame_dig 1",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "copy%0#0"
      ]
    },
    "3807": {
      "op": "cover 3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "3809": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "3811": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "3812": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "0x00",
        "copy%0#0",
        "encoded_bool%0#0",
        "useAllowance#0 (copy)",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "useAllowance#0 (copy)"
      ]
    },
    "3814": {
      "op": "setbit",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "3815": {
      "op": "cover 3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "3817": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "3819": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "3820": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "0x00",
        "copy%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "useRounds#0 (copy)",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "useRounds#0 (copy)"
      ]
    },
    "3822": {
      "op": "setbit",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "encoded_bool%2#0"
      ]
    },
    "3823": {
      "op": "cover 3",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "3825": {
      "op": "frame_dig 3",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "epochRef#0"
      ]
    },
    "3827": {
      "op": "itob",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0"
      ]
    },
    "3828": {
      "op": "cover 5",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "3830": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "copy%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x"
      ]
    },
    "3831": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "0x",
        "encoded_bool%0#0"
      ]
    },
    "3832": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%8#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "3833": {
      "op": "frame_dig -6",
      "defined_out": [
        "copy%0#0",
        "delegationType#0 (copy)",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%8#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%8#0",
        "delegationType#0 (copy)"
      ]
    },
    "3835": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%9#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "3836": {
      "op": "frame_dig 2",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%9#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%9#0",
        "spendingApp#0"
      ]
    },
    "3838": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%10#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "3839": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%3#0"
      ]
    },
    "3840": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%11#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "3841": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%4#0"
      ]
    },
    "3842": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "3843": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "45"
      ]
    },
    "3845": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "as_bytes%1#0"
      ]
    },
    "3846": {
      "op": "extract 6 2",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "epochRef#0",
        "offset_as_uint16%0#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "offset_as_uint16%0#0"
      ]
    },
    "3849": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%13#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "3850": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%13#0",
        "encoded_bool%1#0"
      ]
    },
    "3852": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3853": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "encoded_bool%2#0"
      ]
    },
    "3854": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "3855": {
      "op": "getbit",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0"
      ]
    },
    "3856": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "3857": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%0#0",
        "encoded_tuple_buffer%14#0",
        "epochRef#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0",
        "225"
      ]
    },
    "3859": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "225",
        "is_true%0#0"
      ]
    },
    "3861": {
      "op": "setbit",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%15#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "3862": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "copy%0#0",
        "encoded_tuple_buffer%15#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%15#0",
        "0x0000000000000000"
      ]
    },
    "3864": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%16#0",
        "epochRef#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "3865": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%5#0"
      ]
    },
    "3866": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "encoded_tuple_buffer%17#0",
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "copy%0#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "3867": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%17#0",
        "copy%0#0"
      ]
    },
    "3868": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3869": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\""
      ]
    },
    "3870": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3872": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%20#0"
      ]
    },
    "3873": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "3874": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "epochRef#0",
        "key#0",
        "spendingApp#0",
        "tmp%20#0",
        "{box_del}"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%20#0",
        "{box_del}"
      ]
    },
    "3875": {
      "op": "pop",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%20#0"
      ]
    },
    "3876": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "tmp%20#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "3877": {
      "op": "box_put",
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ]
    },
    "3878": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "3881": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "3884": {
      "retsub": true,
      "op": "retsub"
    },
    "3885": {
      "block": "arc58_addPlugin_ternary_false@9",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "3887": {
      "op": "b arc58_addPlugin_ternary_merge@10"
    },
    "3890": {
      "block": "arc58_addPlugin_bool_false@3",
      "stack_in": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "key#0",
        "methodInfos#0",
        "spendingApp#0",
        "epochRef#0",
        "i#0",
        "and_result%0#0"
      ]
    },
    "3891": {
      "op": "b arc58_addPlugin_bool_merge@4"
    },
    "3894": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removePlugin",
      "params": {
        "app#0": "uint64",
        "allowedCaller#0": "bytes"
      },
      "block": "arc58_removePlugin",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3897": {
      "block": "arc58_removePlugin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3899": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3900": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "3902": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3903": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3904": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3905": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "3906": {
      "op": "frame_dig -2",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0 (copy)"
      ]
    },
    "3908": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "3909": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "3910": {
      "op": "swap",
      "stack_out": [
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "3911": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "3912": {
      "op": "frame_dig -1",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "3914": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "3915": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3916": {
      "op": "dig 1",
      "defined_out": [
        "\"p\"",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "3918": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%2#0"
      ]
    },
    "3919": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3920": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%1#0"
      ]
    },
    "3922": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "key#0"
      ]
    },
    "3923": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "key#0",
        "\"p\""
      ]
    },
    "3924": {
      "op": "dig 1",
      "stack_out": [
        "key#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "3926": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0"
      ]
    },
    "3927": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3928": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "key#0",
        "maybe_value%2#0"
      ]
    },
    "3929": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "key#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "2"
      ]
    },
    "3931": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "key#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "2",
        "8"
      ]
    },
    "3932": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%4#0"
      ]
    },
    "3933": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "key#0",
        "spendingApp#0"
      ]
    },
    "3934": {
      "op": "swap",
      "defined_out": [
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0"
      ]
    },
    "3935": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "\"p\""
      ]
    },
    "3936": {
      "op": "dig 1",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "\"p\"",
        "key#0 (copy)"
      ]
    },
    "3938": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "spendingApp#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "tmp%5#0"
      ]
    },
    "3939": {
      "op": "box_get",
      "defined_out": [
        "key#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3940": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "maybe_value%3#0"
      ]
    },
    "3941": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "3942": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "key#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "26"
      ]
    },
    "3944": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "key#0",
        "maybe_value%3#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "maybe_value%3#0",
        "item_start_offset%0#0"
      ]
    },
    "3945": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%3#0"
      ]
    },
    "3946": {
      "op": "dup",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "3947": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "key#0",
        "maybe_value%3#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "item_start_offset%0#0",
        "maybe_value%3#0",
        "item_end_offset%0#0"
      ]
    },
    "3948": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%3#0"
      ]
    },
    "3949": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "item_end_offset%0#0",
        "maybe_value%3#0",
        "item_start_offset%0#0"
      ]
    },
    "3951": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "maybe_value%3#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "3953": {
      "op": "substring3",
      "defined_out": [
        "key#0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methods#0"
      ]
    },
    "3954": {
      "op": "swap",
      "defined_out": [
        "key#0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "key#0"
      ]
    },
    "3955": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "key#0",
        "\"p\""
      ]
    },
    "3956": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "\"p\"",
        "key#0"
      ]
    },
    "3957": {
      "op": "concat",
      "defined_out": [
        "methods#0",
        "spendingApp#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "tmp%7#0"
      ]
    },
    "3958": {
      "op": "box_del",
      "defined_out": [
        "methods#0",
        "spendingApp#0",
        "{box_del}"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "{box_del}"
      ]
    },
    "3959": {
      "op": "pop",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "3960": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "3961": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3962": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3963": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%4#0"
      ]
    },
    "3964": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%4#0",
        "methods#0",
        "spendingApp#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%4#0",
        "tmp%8#0"
      ]
    },
    "3966": {
      "op": "!=",
      "defined_out": [
        "methods#0",
        "spendingApp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "tmp%9#0"
      ]
    },
    "3967": {
      "op": "bz arc58_removePlugin_after_if_else@3",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "3970": {
      "block": "arc58_removePlugin_if_body@1",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_begin"
    },
    "3971": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "3972": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "3973": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3974": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3975": {
      "op": "frame_dig 1",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0"
      ]
    },
    "3977": {
      "op": "len",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%10#0"
      ]
    },
    "3978": {
      "op": "intc 5 // 400",
      "defined_out": [
        "400",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%10#0",
        "400"
      ]
    },
    "3980": {
      "op": "*",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%11#0"
      ]
    },
    "3981": {
      "op": "intc 6 // 36500",
      "defined_out": [
        "36500",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%11#0",
        "36500"
      ]
    },
    "3983": {
      "op": "+",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "3984": {
      "op": "itxn_field Amount",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "3986": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "3988": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "methods#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "1"
      ]
    },
    "3989": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "3991": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "3992": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "3994": {
      "block": "arc58_removePlugin_next_txn@2",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_submit"
    },
    "3995": {
      "block": "arc58_removePlugin_after_if_else@3",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "spendingApp#0"
      ]
    },
    "3997": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "spendingApp#0",
        "0"
      ]
    },
    "3998": {
      "op": "!=",
      "defined_out": [
        "spendingApp#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "tmp%12#0"
      ]
    },
    "3999": {
      "op": "bz arc58_removePlugin_after_if_else@6",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4002": {
      "block": "arc58_removePlugin_if_body@4",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_begin"
    },
    "4003": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4004": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0",
        "\"spend_factory\""
      ]
    },
    "4006": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "4007": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4008": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ]
    },
    "4010": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4011": {
      "op": "bytec 15 // method \"delete(uint64)void\"",
      "defined_out": [
        "Method(delete(uint64)void)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(delete(uint64)void)"
      ]
    },
    "4013": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4015": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4017": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4019": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "appl"
      ]
    },
    "4021": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4023": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4024": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4026": {
      "block": "arc58_removePlugin_next_txn@5",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_submit"
    },
    "4027": {
      "block": "arc58_removePlugin_after_if_else@6",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4030": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4033": {
      "retsub": true,
      "op": "retsub"
    },
    "4034": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addNamedPlugin",
      "params": {
        "name#0": "bytes",
        "app#0": "uint64",
        "allowedCaller#0": "bytes",
        "admin#0": "uint64",
        "delegationType#0": "bytes",
        "lastValid#0": "uint64",
        "cooldown#0": "uint64",
        "methods#0": "bytes",
        "useAllowance#0": "uint64",
        "useRounds#0": "uint64"
      },
      "block": "arc58_addNamedPlugin",
      "stack_in": [],
      "op": "proto 10 0"
    },
    "4037": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0"
      ]
    },
    "4038": {
      "block": "arc58_addNamedPlugin_block@0",
      "stack_in": [
        "spendingApp#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0"
      ]
    },
    "4040": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "0"
      ]
    },
    "4041": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "4043": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4044": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingApp#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "4045": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%1#0"
      ]
    },
    "4046": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": [
        "spendingApp#0"
      ]
    },
    "4047": {
      "op": "bytec 9 // \"n\"",
      "defined_out": [
        "\"n\""
      ],
      "stack_out": [
        "spendingApp#0",
        "\"n\""
      ]
    },
    "4049": {
      "op": "frame_dig -10",
      "defined_out": [
        "\"n\"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "4051": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%2#0"
      ]
    },
    "4052": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4053": {
      "op": "bury 1",
      "stack_out": [
        "spendingApp#0",
        "maybe_exists%1#0"
      ]
    },
    "4055": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "tmp%3#0"
      ]
    },
    "4056": {
      "op": "assert",
      "stack_out": [
        "spendingApp#0"
      ]
    },
    "4057": {
      "op": "frame_dig -9",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0 (copy)"
      ]
    },
    "4059": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "val_as_bytes%0#0"
      ]
    },
    "4060": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "4061": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "4062": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "encoded_tuple_buffer%1#0"
      ]
    },
    "4063": {
      "op": "frame_dig -8",
      "defined_out": [
        "allowedCaller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "encoded_tuple_buffer%1#0",
        "allowedCaller#0 (copy)"
      ]
    },
    "4065": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0"
      ]
    },
    "4066": {
      "op": "dup",
      "defined_out": [
        "copy%0#0",
        "key#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0"
      ]
    },
    "4067": {
      "op": "bytec 9 // \"n\"",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "\"n\""
      ]
    },
    "4069": {
      "op": "frame_dig -10",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "4071": {
      "op": "concat",
      "defined_out": [
        "copy%0#0",
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "copy%0#0",
        "tmp%4#0"
      ]
    },
    "4072": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "tmp%4#0",
        "copy%0#0"
      ]
    },
    "4073": {
      "op": "box_put",
      "stack_out": [
        "spendingApp#0",
        "key#0"
      ]
    },
    "4074": {
      "op": "bytec 13 // 0x0000",
      "defined_out": [
        "0x0000",
        "key#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "0x0000"
      ]
    },
    "4076": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "0x0000",
        "0x"
      ]
    },
    "4077": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0"
      ]
    },
    "4078": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "key#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4079": {
      "block": "arc58_addNamedPlugin_while_top@1",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "4081": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "methods#0 (copy)",
        "0"
      ]
    },
    "4082": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "4083": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%5#0",
        "i#0"
      ]
    },
    "4085": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "4086": {
      "op": "bz arc58_addNamedPlugin_after_while@3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4089": {
      "block": "arc58_addNamedPlugin_while_body@2",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "4091": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "4094": {
      "op": "frame_dig -3",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "methodInfos#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "methods#0 (copy)"
      ]
    },
    "4096": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0"
      ]
    },
    "4099": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "4101": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "4102": {
      "op": "cover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "4104": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "4106": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "4107": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "12"
      ]
    },
    "4109": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "4110": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%7#0",
        "0"
      ]
    },
    "4111": {
      "op": "intc_3 // 4",
      "defined_out": [
        "0",
        "4",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%7#0",
        "0",
        "4"
      ]
    },
    "4112": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "4113": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0"
      ]
    },
    "4114": {
      "op": "frame_dig -3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "methods#0 (copy)"
      ]
    },
    "4116": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "4119": {
      "op": "dig 1",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)"
      ]
    },
    "4121": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "array_head_and_tail%1#0",
        "i#0 (copy)",
        "12"
      ]
    },
    "4123": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "item_offset%1#0",
        "methodInfos#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "4124": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "12"
      ]
    },
    "4126": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "4127": {
      "op": "intc_3 // 4",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0",
        "4"
      ]
    },
    "4128": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%9#0",
        "4",
        "8"
      ]
    },
    "4129": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "4130": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%8#0",
        "i#0",
        "tmp%10#0",
        "0x"
      ]
    },
    "4131": {
      "op": "uncover 3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%10#0",
        "0x",
        "tmp%8#0"
      ]
    },
    "4133": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%10#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "4134": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%4#0",
        "tmp%10#0"
      ]
    },
    "4135": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "4136": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%5#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "4138": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "4139": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded_tuple_buffer%6#0",
        "0x"
      ]
    },
    "4140": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "4141": {
      "op": "concat",
      "defined_out": [
        "array%encoded%0#1",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1"
      ]
    },
    "4142": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "array%encoded%0#1",
        "0x"
      ]
    },
    "4143": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "0x",
        "array%encoded%0#1"
      ]
    },
    "4144": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "encoded%0#0"
      ]
    },
    "4145": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "encoded%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "4147": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "encoded%0#0"
      ]
    },
    "4148": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "4149": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "4150": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "4151": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "byte_len%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "20"
      ]
    },
    "4153": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "4154": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "4155": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "i#0",
        "len_16_bit%0#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "4158": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "4159": {
      "op": "concat",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "methodInfos#0"
      ]
    },
    "4160": {
      "op": "frame_bury 2",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0"
      ]
    },
    "4162": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4163": {
      "op": "+",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "i#0"
      ]
    },
    "4164": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0",
        "methodInfos#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4166": {
      "op": "b arc58_addNamedPlugin_while_top@1"
    },
    "4169": {
      "block": "arc58_addNamedPlugin_after_while@3",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4170": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4171": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4172": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "4173": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "maybe_value%2#0",
        "tmp%11#0"
      ]
    },
    "4175": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "4176": {
      "op": "bz arc58_addNamedPlugin_after_if_else@6",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4179": {
      "block": "arc58_addNamedPlugin_if_body@4",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "4180": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4181": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4182": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4183": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "4184": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4186": {
      "op": "frame_dig -3",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "methods#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0 (copy)"
      ]
    },
    "4188": {
      "op": "len",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%13#0"
      ]
    },
    "4189": {
      "op": "frame_dig -10",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "name#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%13#0",
        "name#0 (copy)"
      ]
    },
    "4191": {
      "op": "len",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "4192": {
      "op": "+",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%15#0"
      ]
    },
    "4193": {
      "op": "intc 5 // 400",
      "defined_out": [
        "400",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%15#0",
        "400"
      ]
    },
    "4195": {
      "op": "*",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%16#0"
      ]
    },
    "4196": {
      "op": "intc 7 // 55400",
      "defined_out": [
        "55400",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%16#0",
        "55400"
      ]
    },
    "4198": {
      "op": "+",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "4199": {
      "op": "itxn_field Amount",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4201": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "4203": {
      "op": "itxn_field Sender",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4205": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "1"
      ]
    },
    "4206": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4209": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4211": {
      "block": "arc58_addNamedPlugin_next_txn@5",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "4212": {
      "block": "arc58_addNamedPlugin_after_if_else@6",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "4214": {
      "op": "frame_bury 0",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4216": {
      "op": "frame_dig -2",
      "defined_out": [
        "spendingApp#0",
        "useAllowance#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "useAllowance#0 (copy)"
      ]
    },
    "4218": {
      "op": "bz arc58_addNamedPlugin_after_if_else@10",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4221": {
      "block": "arc58_addNamedPlugin_if_body@7",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_begin"
    },
    "4222": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4223": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4224": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4225": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "4226": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "4227": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\"",
        "0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "0",
        "\"spend_factory\""
      ]
    },
    "4229": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "4230": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_value%5#0"
      ]
    },
    "4231": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "4233": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "4234": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "4236": {
      "op": "pushint 12500 // 12500",
      "defined_out": [
        "12500",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "12500"
      ]
    },
    "4239": {
      "op": "itxn_field Amount",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "4241": {
      "op": "itxn_field Sender",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4243": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "1"
      ]
    },
    "4244": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4247": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4249": {
      "block": "arc58_addNamedPlugin_next_txn@8",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_next"
    },
    "4250": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4251": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0",
        "\"spend_factory\""
      ]
    },
    "4253": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "4254": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "4255": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "0"
      ]
    },
    "4256": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4257": {
      "op": "bytec 14 // method \"create(pay,uint64)uint64\"",
      "defined_out": [
        "Method(create(pay,uint64)uint64)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(create(pay,uint64)uint64)"
      ]
    },
    "4259": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4261": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "4263": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4265": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "appl"
      ]
    },
    "4267": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4269": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "0"
      ]
    },
    "4270": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4272": {
      "block": "arc58_addNamedPlugin_next_txn@9",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "itxn_submit"
    },
    "4273": {
      "op": "gitxn 1 LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "awst_tmp%0#0"
      ]
    },
    "4276": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4277": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "awst_tmp%0#0",
        "tmp%17#0"
      ]
    },
    "4280": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%17#0",
        "awst_tmp%0#0"
      ]
    },
    "4281": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "4284": {
      "op": "bytec 10 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%17#0",
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "4286": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "4287": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "4288": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%20#0"
      ]
    },
    "4289": {
      "op": "itob",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "spendingApp#0"
      ]
    },
    "4290": {
      "op": "frame_bury 0",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4292": {
      "block": "arc58_addNamedPlugin_after_if_else@10",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "useRounds#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "useRounds#0 (copy)"
      ]
    },
    "4294": {
      "op": "bz arc58_addNamedPlugin_ternary_false@12",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4297": {
      "block": "arc58_addNamedPlugin_ternary_true@11",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "global Round",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "4299": {
      "block": "arc58_addNamedPlugin_ternary_merge@13",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0"
      ],
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "0x00"
      ]
    },
    "4301": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "0x00",
        "0"
      ]
    },
    "4302": {
      "op": "frame_dig -7",
      "defined_out": [
        "0",
        "0x00",
        "admin#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "0x00",
        "0",
        "admin#0 (copy)"
      ]
    },
    "4304": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4305": {
      "op": "frame_dig -5",
      "defined_out": [
        "encoded_bool%0#0",
        "lastValid#0 (copy)",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "lastValid#0 (copy)"
      ]
    },
    "4307": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "ternary_result%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "4308": {
      "op": "cover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4310": {
      "op": "frame_dig -4",
      "defined_out": [
        "cooldown#0 (copy)",
        "encoded_bool%0#0",
        "ternary_result%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "cooldown#0 (copy)"
      ]
    },
    "4312": {
      "op": "itob",
      "defined_out": [
        "encoded_bool%0#0",
        "ternary_result%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "val_as_bytes%4#0"
      ]
    },
    "4313": {
      "op": "cover 3",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4315": {
      "op": "frame_dig 2",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%0#0",
        "ternary_result%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "copy%1#0"
      ]
    },
    "4317": {
      "op": "cover 4",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4319": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "4321": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "4322": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "0x00",
        "copy%1#0",
        "encoded_bool%0#0",
        "ternary_result%0#0",
        "useAllowance#0 (copy)",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "useAllowance#0 (copy)"
      ]
    },
    "4324": {
      "op": "setbit",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "ternary_result%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0"
      ]
    },
    "4325": {
      "op": "cover 4",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4327": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "0x00"
      ]
    },
    "4329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "0x00",
        "0"
      ]
    },
    "4330": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "0x00",
        "copy%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "ternary_result%0#0",
        "useRounds#0 (copy)",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "0x00",
        "0",
        "useRounds#0 (copy)"
      ]
    },
    "4332": {
      "op": "setbit",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "ternary_result%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0",
        "encoded_bool%2#0"
      ]
    },
    "4333": {
      "op": "cover 4",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "ternary_result%0#0",
        "encoded_bool%0#0"
      ]
    },
    "4335": {
      "op": "swap",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "epochRef#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "epochRef#0"
      ]
    },
    "4336": {
      "op": "itob",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "val_as_bytes%5#0"
      ]
    },
    "4337": {
      "op": "cover 5",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0"
      ]
    },
    "4339": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "copy%1#0",
        "encoded_bool%0#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_bool%0#0",
        "0x"
      ]
    },
    "4340": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "0x",
        "encoded_bool%0#0"
      ]
    },
    "4341": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "4342": {
      "op": "frame_dig -6",
      "defined_out": [
        "copy%1#0",
        "delegationType#0 (copy)",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%8#0",
        "delegationType#0 (copy)"
      ]
    },
    "4344": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "4345": {
      "op": "frame_dig 0",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%9#0",
        "spendingApp#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%9#0",
        "spendingApp#0"
      ]
    },
    "4347": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%10#0",
        "spendingApp#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "4348": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%3#0"
      ]
    },
    "4349": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%11#0",
        "spendingApp#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "4350": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%4#0"
      ]
    },
    "4351": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "4352": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "45"
      ]
    },
    "4354": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "as_bytes%1#0"
      ]
    },
    "4355": {
      "op": "extract 6 2",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "offset_as_uint16%0#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%12#0",
        "offset_as_uint16%0#0"
      ]
    },
    "4358": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%13#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "4359": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%13#0",
        "encoded_bool%1#0"
      ]
    },
    "4361": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%14#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_bool%2#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "4362": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "encoded_bool%2#0"
      ]
    },
    "4363": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "encoded_bool%2#0",
        "0"
      ]
    },
    "4364": {
      "op": "getbit",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0"
      ]
    },
    "4365": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "4366": {
      "op": "intc 4 // 225",
      "defined_out": [
        "225",
        "copy%1#0",
        "encoded_tuple_buffer%14#0",
        "is_true%0#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "is_true%0#0",
        "encoded_tuple_buffer%14#0",
        "225"
      ]
    },
    "4368": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%14#0",
        "225",
        "is_true%0#0"
      ]
    },
    "4370": {
      "op": "setbit",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%15#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%15#0"
      ]
    },
    "4371": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "copy%1#0",
        "encoded_tuple_buffer%15#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%15#0",
        "0x0000000000000000"
      ]
    },
    "4373": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%16#0",
        "spendingApp#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%16#0"
      ]
    },
    "4374": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_tuple_buffer%16#0",
        "val_as_bytes%5#0"
      ]
    },
    "4375": {
      "op": "concat",
      "defined_out": [
        "copy%1#0",
        "encoded_tuple_buffer%17#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "copy%1#0",
        "encoded_tuple_buffer%17#0"
      ]
    },
    "4376": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%17#0",
        "copy%1#0"
      ]
    },
    "4377": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "4378": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\""
      ]
    },
    "4379": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"p\"",
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "\"p\"",
        "key#0"
      ]
    },
    "4381": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%21#0"
      ]
    },
    "4382": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "4383": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%18#0",
        "key#0",
        "spendingApp#0",
        "tmp%21#0",
        "{box_del}"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%21#0",
        "{box_del}"
      ]
    },
    "4384": {
      "op": "pop",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "encoded_tuple_buffer%18#0",
        "tmp%21#0"
      ]
    },
    "4385": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "tmp%21#0",
        "encoded_tuple_buffer%18#0"
      ]
    },
    "4386": {
      "op": "box_put",
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ]
    },
    "4387": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4390": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4393": {
      "retsub": true,
      "op": "retsub"
    },
    "4394": {
      "block": "arc58_addNamedPlugin_ternary_false@12",
      "stack_in": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0"
      ],
      "op": "global LatestTimestamp",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "key#0",
        "methodInfos#0",
        "i#0",
        "ternary_result%0#0"
      ]
    },
    "4396": {
      "op": "b arc58_addNamedPlugin_ternary_merge@13"
    },
    "4399": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removeNamedPlugin",
      "params": {
        "name#0": "bytes"
      },
      "block": "arc58_removeNamedPlugin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4402": {
      "block": "arc58_removeNamedPlugin_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4404": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "4405": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "4407": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4408": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "4409": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4410": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "4411": {
      "op": "bytec 9 // \"n\"",
      "defined_out": [
        "\"n\""
      ],
      "stack_out": [
        "\"n\""
      ]
    },
    "4413": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"n\"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "4415": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4416": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4417": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "4419": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": []
    },
    "4420": {
      "op": "bytec 9 // \"n\"",
      "stack_out": [
        "\"n\""
      ]
    },
    "4422": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "4424": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "4425": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4426": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "4427": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "\"p\""
      ]
    },
    "4428": {
      "op": "dig 1",
      "defined_out": [
        "\"p\"",
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "\"p\"",
        "app#0 (copy)"
      ]
    },
    "4430": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "4431": {
      "op": "box_len",
      "defined_out": [
        "app#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "app#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4432": {
      "op": "bury 1",
      "stack_out": [
        "app#0",
        "maybe_exists%3#0"
      ]
    },
    "4434": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "app#0"
      ]
    },
    "4435": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "app#0",
        "\"p\""
      ]
    },
    "4436": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "\"p\"",
        "app#0 (copy)"
      ]
    },
    "4438": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%5#0"
      ]
    },
    "4439": {
      "op": "box_get",
      "defined_out": [
        "app#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "app#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4440": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "app#0",
        "maybe_value%4#0"
      ]
    },
    "4441": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "app#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "app#0",
        "maybe_value%4#0",
        "2"
      ]
    },
    "4443": {
      "op": "intc_2 // 8",
      "defined_out": [
        "2",
        "8",
        "app#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "app#0",
        "maybe_value%4#0",
        "2",
        "8"
      ]
    },
    "4444": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "app#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#0"
      ]
    },
    "4445": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "app#0",
        "spendingApp#0"
      ]
    },
    "4446": {
      "op": "swap",
      "defined_out": [
        "app#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0"
      ]
    },
    "4447": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "\"p\""
      ]
    },
    "4448": {
      "op": "dig 1",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "\"p\"",
        "app#0 (copy)"
      ]
    },
    "4450": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "spendingApp#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "tmp%7#0"
      ]
    },
    "4451": {
      "op": "box_get",
      "defined_out": [
        "app#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "4452": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "maybe_value%5#0"
      ]
    },
    "4453": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)"
      ]
    },
    "4454": {
      "op": "pushint 26 // 26",
      "defined_out": [
        "26",
        "app#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)",
        "26"
      ]
    },
    "4456": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_start_offset%0#0",
        "maybe_value%5#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "maybe_value%5#0",
        "item_start_offset%0#0"
      ]
    },
    "4457": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "item_start_offset%0#0",
        "maybe_value%5#0"
      ]
    },
    "4458": {
      "op": "dup",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "item_start_offset%0#0",
        "maybe_value%5#0",
        "maybe_value%5#0 (copy)"
      ]
    },
    "4459": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%5#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "item_start_offset%0#0",
        "maybe_value%5#0",
        "item_end_offset%0#0"
      ]
    },
    "4460": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "maybe_value%5#0"
      ]
    },
    "4461": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "item_end_offset%0#0",
        "maybe_value%5#0",
        "item_start_offset%0#0"
      ]
    },
    "4463": {
      "op": "uncover 2",
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "maybe_value%5#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "4465": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "app#0",
        "methods#0"
      ]
    },
    "4466": {
      "op": "swap",
      "defined_out": [
        "app#0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0"
      ]
    },
    "4467": {
      "op": "bytec 9 // \"n\"",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0",
        "\"n\""
      ]
    },
    "4469": {
      "op": "frame_dig -1",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0",
        "\"n\"",
        "name#0 (copy)"
      ]
    },
    "4471": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "methods#0",
        "spendingApp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0",
        "tmp%9#0"
      ]
    },
    "4472": {
      "op": "box_del",
      "defined_out": [
        "app#0",
        "methods#0",
        "spendingApp#0",
        "{box_del}"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0",
        "{box_del}"
      ]
    },
    "4473": {
      "op": "pop",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0"
      ]
    },
    "4474": {
      "op": "bytec_0 // \"p\"",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "app#0",
        "\"p\""
      ]
    },
    "4475": {
      "op": "swap",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "\"p\"",
        "app#0"
      ]
    },
    "4476": {
      "op": "concat",
      "defined_out": [
        "methods#0",
        "spendingApp#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "tmp%10#0"
      ]
    },
    "4477": {
      "op": "box_del",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "{box_del}"
      ]
    },
    "4478": {
      "op": "pop",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4479": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4480": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4481": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "methods#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "4482": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%6#0"
      ]
    },
    "4483": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%6#0",
        "methods#0",
        "spendingApp#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%6#0",
        "tmp%11#0"
      ]
    },
    "4485": {
      "op": "!=",
      "defined_out": [
        "methods#0",
        "spendingApp#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "tmp%12#0"
      ]
    },
    "4486": {
      "op": "bz arc58_removeNamedPlugin_after_if_else@3",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4489": {
      "block": "arc58_removeNamedPlugin_if_body@1",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_begin"
    },
    "4490": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4491": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4492": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "4493": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4494": {
      "op": "frame_dig 1",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0"
      ]
    },
    "4496": {
      "op": "len",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%13#0"
      ]
    },
    "4497": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "name#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%13#0",
        "name#0 (copy)"
      ]
    },
    "4499": {
      "op": "len",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "4500": {
      "op": "+",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%15#0"
      ]
    },
    "4501": {
      "op": "intc 5 // 400",
      "defined_out": [
        "400",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%15#0",
        "400"
      ]
    },
    "4503": {
      "op": "*",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%16#0"
      ]
    },
    "4504": {
      "op": "intc 7 // 55400",
      "defined_out": [
        "55400",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%16#0",
        "55400"
      ]
    },
    "4506": {
      "op": "+",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "methods#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "4507": {
      "op": "itxn_field Amount",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4509": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4511": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "methods#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "1"
      ]
    },
    "4512": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4514": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4515": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4517": {
      "block": "arc58_removeNamedPlugin_next_txn@2",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_submit"
    },
    "4518": {
      "block": "arc58_removeNamedPlugin_after_if_else@3",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "spendingApp#0"
      ]
    },
    "4520": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "spendingApp#0",
        "0"
      ]
    },
    "4521": {
      "op": "!=",
      "defined_out": [
        "spendingApp#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "tmp%17#0"
      ]
    },
    "4522": {
      "op": "bz arc58_removeNamedPlugin_after_if_else@6",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4525": {
      "block": "arc58_removeNamedPlugin_if_body@4",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_begin"
    },
    "4526": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4527": {
      "op": "bytec 8 // \"spend_factory\"",
      "defined_out": [
        "\"spend_factory\"",
        "0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0",
        "\"spend_factory\""
      ]
    },
    "4529": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "4530": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4531": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ]
    },
    "4533": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4534": {
      "op": "bytec 15 // method \"delete(uint64)void\"",
      "defined_out": [
        "Method(delete(uint64)void)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(delete(uint64)void)"
      ]
    },
    "4536": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4538": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4540": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4542": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "spendingApp#0"
      ],
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "appl"
      ]
    },
    "4544": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4546": {
      "op": "intc_0 // 0",
      "stack_out": [
        "spendingApp#0",
        "methods#0",
        "0"
      ]
    },
    "4547": {
      "op": "itxn_field Fee",
      "stack_out": [
        "spendingApp#0",
        "methods#0"
      ]
    },
    "4549": {
      "block": "arc58_removeNamedPlugin_next_txn@5",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "op": "itxn_submit"
    },
    "4550": {
      "block": "arc58_removeNamedPlugin_after_if_else@6",
      "stack_in": [
        "spendingApp#0",
        "methods#0"
      ],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4553": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4556": {
      "retsub": true,
      "op": "retsub"
    },
    "4557": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_addAllowance",
      "params": {
        "plugin#0": "uint64",
        "caller#0": "bytes",
        "asset#0": "uint64",
        "type#0": "bytes",
        "allowed#0": "uint64",
        "max#0": "uint64",
        "interval#0": "uint64"
      },
      "block": "arc58_addAllowance",
      "stack_in": [],
      "op": "proto 7 0"
    },
    "4560": {
      "block": "arc58_addAllowance_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4562": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "4563": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "4565": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4566": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "4567": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4568": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "4569": {
      "op": "frame_dig -7",
      "defined_out": [
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)"
      ]
    },
    "4571": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "4572": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "4573": {
      "op": "swap",
      "stack_out": [
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "4574": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "4575": {
      "op": "frame_dig -6",
      "defined_out": [
        "caller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "caller#0 (copy)"
      ]
    },
    "4577": {
      "op": "concat",
      "defined_out": [
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0"
      ]
    },
    "4578": {
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)",
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0",
        "asset#0 (copy)"
      ]
    },
    "4580": {
      "op": "itob",
      "defined_out": [
        "pkey#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "pkey#0",
        "val_as_bytes%1#0"
      ]
    },
    "4581": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0"
      ]
    },
    "4582": {
      "op": "dup",
      "defined_out": [
        "pkey#0",
        "pkey#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "pkey#0 (copy)"
      ]
    },
    "4583": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "pkey#0 (copy)",
        "0"
      ]
    },
    "4584": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "pkey#0",
        "pkey#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "pkey#0 (copy)",
        "0",
        "8"
      ]
    },
    "4585": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "pkey#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "tmp%2#0"
      ]
    },
    "4586": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0"
      ]
    },
    "4587": {
      "op": "dup",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "pkey#0 (copy)"
      ]
    },
    "4588": {
      "op": "intc_2 // 8",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "pkey#0 (copy)",
        "8"
      ]
    },
    "4589": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "8",
        "pkey#0",
        "pkey#0 (copy)",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "pkey#0 (copy)",
        "8",
        "32"
      ]
    },
    "4591": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "pkey#0",
        "tmp%2#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "tmp%3#0"
      ]
    },
    "4592": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "4593": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "tmp%3#0",
        "0x",
        "tmp%2#0"
      ]
    },
    "4595": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "pkey#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "tmp%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "4596": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "4597": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "pkey#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "4598": {
      "op": "uncover 2",
      "stack_out": [
        "pkey#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%1#0"
      ]
    },
    "4600": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0",
        "key#0"
      ]
    },
    "4601": {
      "op": "dup",
      "stack_out": [
        "pkey#0",
        "key#0",
        "key#0"
      ]
    },
    "4602": {
      "op": "cover 2",
      "defined_out": [
        "key#0",
        "pkey#0"
      ],
      "stack_out": [
        "key#0",
        "pkey#0",
        "key#0"
      ]
    },
    "4604": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0",
        "pkey#0"
      ],
      "stack_out": [
        "key#0",
        "pkey#0",
        "key#0",
        "\"p\""
      ]
    },
    "4605": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "key#0",
        "\"p\"",
        "pkey#0"
      ]
    },
    "4607": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "tmp%4#0"
      ]
    },
    "4608": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4609": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "key#0",
        "maybe_exists%1#0"
      ]
    },
    "4611": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "key#0",
        "key#0"
      ]
    },
    "4612": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "\"a\""
      ]
    },
    "4613": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "\"a\"",
        "key#0"
      ]
    },
    "4614": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "4615": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4616": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%2#0"
      ]
    },
    "4618": {
      "op": "!",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0"
      ]
    },
    "4619": {
      "error": "allowance already exists",
      "op": "assert // allowance already exists",
      "stack_out": [
        "key#0"
      ]
    },
    "4620": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "0"
      ]
    },
    "4621": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4622": {
      "op": "app_global_get_ex",
      "defined_out": [
        "key#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4623": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "key#0",
        "maybe_value%3#0"
      ]
    },
    "4624": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "key#0",
        "maybe_value%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%3#0",
        "tmp%7#0"
      ]
    },
    "4626": {
      "op": "!=",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%8#0"
      ]
    },
    "4627": {
      "op": "bz arc58_addAllowance_after_if_else@3",
      "stack_out": [
        "key#0"
      ]
    },
    "4630": {
      "block": "arc58_addAllowance_if_body@1",
      "stack_in": [
        "key#0"
      ],
      "op": "itxn_begin"
    },
    "4631": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "key#0",
        "0"
      ]
    },
    "4632": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "key#0",
        "0",
        "\"controlled_address\""
      ]
    },
    "4633": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4634": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "4635": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4637": {
      "op": "intc 8 // 38500",
      "defined_out": [
        "38500",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "38500"
      ]
    },
    "4639": {
      "op": "itxn_field Amount",
      "stack_out": [
        "key#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4641": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "key#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "4643": {
      "op": "itxn_field Sender",
      "stack_out": [
        "key#0"
      ]
    },
    "4645": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "key#0",
        "1"
      ]
    },
    "4646": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0"
      ]
    },
    "4648": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "0"
      ]
    },
    "4649": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0"
      ]
    },
    "4651": {
      "block": "arc58_addAllowance_next_txn@2",
      "stack_in": [
        "key#0"
      ],
      "op": "itxn_submit"
    },
    "4652": {
      "block": "arc58_addAllowance_after_if_else@3",
      "stack_in": [
        "key#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "allowed#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "allowed#0 (copy)"
      ]
    },
    "4654": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%2#0"
      ]
    },
    "4655": {
      "op": "frame_dig -2",
      "defined_out": [
        "max#0 (copy)",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%2#0",
        "max#0 (copy)"
      ]
    },
    "4657": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "4658": {
      "op": "frame_dig -1",
      "defined_out": [
        "interval#0 (copy)",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "interval#0 (copy)"
      ]
    },
    "4660": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "4661": {
      "op": "cover 2",
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "4663": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0x"
      ]
    },
    "4664": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x",
        "type#0 (copy)",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0x",
        "type#0 (copy)"
      ]
    },
    "4666": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "4667": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%3#0"
      ]
    },
    "4668": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "4669": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%2#0"
      ]
    },
    "4670": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "4671": {
      "op": "bytec 7 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%10#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%10#0",
        "0x0000000000000000"
      ]
    },
    "4673": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "key#0",
        "val_as_bytes%4#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "4674": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%11#0",
        "val_as_bytes%4#0"
      ]
    },
    "4675": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "4676": {
      "op": "bytec 7 // 0x0000000000000000",
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%12#0",
        "0x0000000000000000"
      ]
    },
    "4678": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "4679": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "encoded_tuple_buffer%13#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%13#0",
        "\"a\""
      ]
    },
    "4680": {
      "op": "frame_dig 0",
      "defined_out": [
        "\"a\"",
        "encoded_tuple_buffer%13#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%13#0",
        "\"a\"",
        "key#0"
      ]
    },
    "4682": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "encoded_tuple_buffer%13#0",
        "tmp%9#0"
      ]
    },
    "4683": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "4684": {
      "op": "box_put",
      "stack_out": [
        "key#0"
      ]
    },
    "4685": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4688": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4691": {
      "retsub": true,
      "op": "retsub"
    },
    "4692": {
      "subroutine": "contracts/abstracted_account.algo.ts::AbstractedAccount.arc58_removeAllowance",
      "params": {
        "plugin#0": "uint64",
        "caller#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "arc58_removeAllowance",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "4695": {
      "block": "arc58_removeAllowance_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4697": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "4698": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "4700": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4701": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "4702": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4703": {
      "error": "admin only",
      "op": "assert // admin only",
      "stack_out": []
    },
    "4704": {
      "op": "frame_dig -3",
      "defined_out": [
        "plugin#0 (copy)"
      ],
      "stack_out": [
        "plugin#0 (copy)"
      ]
    },
    "4706": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "4707": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x"
      ]
    },
    "4708": {
      "op": "swap",
      "stack_out": [
        "0x",
        "val_as_bytes%0#0"
      ]
    },
    "4709": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0"
      ]
    },
    "4710": {
      "op": "frame_dig -2",
      "defined_out": [
        "caller#0 (copy)",
        "encoded_tuple_buffer%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%1#0",
        "caller#0 (copy)"
      ]
    },
    "4712": {
      "op": "concat",
      "defined_out": [
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0"
      ]
    },
    "4713": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0",
        "asset#0 (copy)"
      ]
    },
    "4715": {
      "op": "itob",
      "defined_out": [
        "pkey#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "pkey#0",
        "val_as_bytes%1#0"
      ]
    },
    "4716": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0"
      ]
    },
    "4717": {
      "op": "dup",
      "defined_out": [
        "pkey#0",
        "pkey#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "pkey#0 (copy)"
      ]
    },
    "4718": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "pkey#0 (copy)",
        "0"
      ]
    },
    "4719": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "pkey#0",
        "pkey#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "pkey#0 (copy)",
        "0",
        "8"
      ]
    },
    "4720": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "pkey#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "tmp%2#0"
      ]
    },
    "4721": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0"
      ]
    },
    "4722": {
      "op": "dup",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "pkey#0 (copy)"
      ]
    },
    "4723": {
      "op": "intc_2 // 8",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "pkey#0 (copy)",
        "8"
      ]
    },
    "4724": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "8",
        "pkey#0",
        "pkey#0 (copy)",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "pkey#0 (copy)",
        "8",
        "32"
      ]
    },
    "4726": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "pkey#0",
        "tmp%2#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "tmp%3#0"
      ]
    },
    "4727": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "val_as_bytes%1#0",
        "tmp%2#0",
        "pkey#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "4728": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "tmp%3#0",
        "0x",
        "tmp%2#0"
      ]
    },
    "4730": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "pkey#0",
        "tmp%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "tmp%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "4731": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "4732": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "pkey#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "pkey#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "4733": {
      "op": "uncover 2",
      "stack_out": [
        "pkey#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%1#0"
      ]
    },
    "4735": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0",
        "key#0"
      ]
    },
    "4736": {
      "op": "bytec_0 // \"p\"",
      "defined_out": [
        "\"p\"",
        "key#0",
        "pkey#0"
      ],
      "stack_out": [
        "pkey#0",
        "key#0",
        "\"p\""
      ]
    },
    "4737": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "\"p\"",
        "pkey#0"
      ]
    },
    "4739": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%4#0"
      ]
    },
    "4740": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4741": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%1#0"
      ]
    },
    "4743": {
      "error": "plugin does not exist",
      "op": "assert // plugin does not exist",
      "stack_out": [
        "key#0"
      ]
    },
    "4744": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "\"a\""
      ]
    },
    "4745": {
      "op": "dig 1",
      "defined_out": [
        "\"a\"",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "\"a\"",
        "key#0 (copy)"
      ]
    },
    "4747": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "4748": {
      "op": "box_len",
      "defined_out": [
        "key#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "key#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4749": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%2#0"
      ]
    },
    "4751": {
      "error": "allowance does not exist",
      "op": "assert // allowance does not exist",
      "stack_out": [
        "key#0"
      ]
    },
    "4752": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "key#0",
        "\"a\""
      ]
    },
    "4753": {
      "op": "swap",
      "stack_out": [
        "\"a\"",
        "key#0"
      ]
    },
    "4754": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "4755": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "4756": {
      "op": "pop",
      "stack_out": []
    },
    "4757": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4758": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "4759": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4760": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "4761": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "tmp%7#0"
      ]
    },
    "4763": {
      "op": "!=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "4764": {
      "op": "bz arc58_removeAllowance_after_if_else@3",
      "stack_out": []
    },
    "4767": {
      "block": "arc58_removeAllowance_if_body@1",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "4768": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4769": {
      "op": "bytec_2 // \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"controlled_address\""
      ]
    },
    "4770": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4771": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4772": {
      "op": "intc 8 // 38500",
      "defined_out": [
        "38500",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "38500"
      ]
    },
    "4774": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "4776": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "4778": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "4779": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4781": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4782": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4784": {
      "block": "arc58_removeAllowance_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4785": {
      "block": "arc58_removeAllowance_after_if_else@3",
      "stack_in": [],
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastUserInteraction",
      "op": "callsub updateLastUserInteraction"
    },
    "4788": {
      "callsub": "contracts/abstracted_account.algo.ts::AbstractedAccount.updateLastChange",
      "op": "callsub updateLastChange"
    },
    "4791": {
      "retsub": true,
      "op": "retsub"
    }
  }
}