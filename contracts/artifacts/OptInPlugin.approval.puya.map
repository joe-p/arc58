{
  "version": 3,
  "sources": [
    "/Users/kylebreeding/akita/contracts/joe-arc58/contracts/plugins/optin_plugin.algo.ts"
  ],
  "mappings": ";;;;;AAEA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAKE;;AAAA;AAAA;AAAA;;AAAA;AALF;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKE;;;AAAA;;AAHC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAGD;;;AACkE;;AAAA;AAAA;AAAc;;;;;;;;;;;;;;;;;;;;AAA7C;AAAA;AAQf;;AAAA;;AAAiB;;AAA5B;AAAP;AAEA;AAK2B;;AAAA;AACJ;;;AAAA;AAAV;;;AAA8C;;AAAA;;AAAA;;;;;;;AAF1C;;;;;;;;;;AAJjB;;;;AAOS;;;AAPT;;AAM4E;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_after_if_else@8",
      "stack_out": []
    },
    "10": {
      "op": "pushbytess 0xb8447b36 0xbfcbeee9 // method \"createApplication()void\", method \"optInToAsset(uint64,bool,uint64,pay)void\"",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(optInToAsset(uint64,bool,uint64,pay)void)"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(optInToAsset(uint64,bool,uint64,pay)void)"
      ]
    },
    "22": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(optInToAsset(uint64,bool,uint64,pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(optInToAsset(uint64,bool,uint64,pay)void)",
        "tmp%2#0"
      ]
    },
    "25": {
      "op": "match main_createApplication_route@3 main_optInToAsset_route@4",
      "stack_out": []
    },
    "31": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "32": {
      "op": "return",
      "stack_out": []
    },
    "33": {
      "block": "main_optInToAsset_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "35": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "36": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "37": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "39": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "40": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "46": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "49": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0"
      ]
    },
    "51": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%11#0",
        "1"
      ]
    },
    "52": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%0#0"
      ]
    },
    "53": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "54": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "56": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "57": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "58": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[8]%1#0",
        "gtxn_idx%0#0"
      ]
    },
    "59": {
      "callsub": "contracts/plugins/optin_plugin.algo.ts::OptInPlugin.optInToAsset",
      "op": "callsub optInToAsset",
      "stack_out": []
    },
    "62": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "63": {
      "op": "return",
      "stack_out": []
    },
    "64": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "66": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "67": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "68": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "70": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "71": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "72": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "73": {
      "op": "return",
      "stack_out": []
    },
    "74": {
      "subroutine": "contracts/plugins/optin_plugin.algo.ts::OptInPlugin.optInToAsset",
      "params": {
        "sender#0": "bytes",
        "rekeyBack#0": "bytes",
        "asset#0": "bytes",
        "mbrPayment#0": "uint64"
      },
      "block": "optInToAsset",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "77": {
      "op": "frame_dig -4",
      "defined_out": [
        "sender#0 (copy)"
      ],
      "stack_out": [
        "sender#0 (copy)"
      ]
    },
    "79": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "81": {
      "op": "pushbytes \"controlled_address\"",
      "defined_out": [
        "\"controlled_address\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "\"controlled_address\""
      ]
    },
    "101": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_#0",
        "controlledAccountBytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "_#0"
      ]
    },
    "102": {
      "op": "pop",
      "defined_out": [
        "controlledAccountBytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0"
      ]
    },
    "103": {
      "op": "frame_dig -1",
      "defined_out": [
        "controlledAccountBytes#0",
        "mbrPayment#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "105": {
      "op": "gtxns Amount",
      "defined_out": [
        "controlledAccountBytes#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "tmp%1#0"
      ]
    },
    "107": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "controlledAccountBytes#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "109": {
      "op": ">=",
      "defined_out": [
        "controlledAccountBytes#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "tmp%3#0"
      ]
    },
    "110": {
      "error": "asset mismatch",
      "op": "assert // asset mismatch",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0"
      ]
    },
    "111": {
      "op": "itxn_begin"
    },
    "112": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "controlledAccountBytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "asset#0 (copy)"
      ]
    },
    "114": {
      "op": "btoi",
      "defined_out": [
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "115": {
      "op": "frame_dig -3",
      "defined_out": [
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rekeyBack#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rekeyBack#0 (copy)"
      ]
    },
    "117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "rekeyBack#0 (copy)",
        "0"
      ]
    },
    "118": {
      "op": "getbit",
      "defined_out": [
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%4#0"
      ]
    },
    "119": {
      "op": "bz optInToAsset_ternary_false@2",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "122": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0"
      ]
    },
    "124": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "126": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "ternary_result%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "ternary_result%0#1"
      ]
    },
    "127": {
      "block": "optInToAsset_ternary_merge@3",
      "stack_in": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "ternary_result%0#1"
      ],
      "op": "itxn_field RekeyTo",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "129": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "131": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "133": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "134": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "136": {
      "op": "frame_dig 1",
      "defined_out": [
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "controlledAccountBytes#0"
      ]
    },
    "138": {
      "op": "dup",
      "defined_out": [
        "controlledAccountBytes#0",
        "controlledAccountBytes#0 (copy)",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "controlledAccountBytes#0",
        "controlledAccountBytes#0 (copy)"
      ]
    },
    "139": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "controlledAccountBytes#0"
      ]
    },
    "141": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "143": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "4"
      ]
    },
    "145": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "147": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "148": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "150": {
      "op": "itxn_submit"
    },
    "151": {
      "retsub": true,
      "op": "retsub"
    },
    "152": {
      "block": "optInToAsset_ternary_false@2",
      "stack_in": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "op": "global ZeroAddress",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "controlledAccountBytes#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "ternary_result%0#1"
      ]
    },
    "154": {
      "op": "b optInToAsset_ternary_merge@3"
    }
  }
}